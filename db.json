{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/hexo-theme-yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/main.507b3a.css","path":"main.507b3a.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/main.507b3a.js","path":"main.507b3a.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/mobile.fdc4b7.js","path":"mobile.fdc4b7.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-yilia/.gitignore","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514472692451},{"_id":"source/404.html","hash":"0b5d7ed54bee16756a7579c6718ab01e3d1b75eb","modified":1514472692440},{"_id":"source/CNAME","hash":"40d50ef3c61f1045ee0aaed7620e0a719c766a58","modified":1514472692440},{"_id":"themes/hexo-theme-yilia/.eslintignore","hash":"ed9d8911ca08c3dd5072c48dd0be4d06f8897730","modified":1514472692451},{"_id":"themes/hexo-theme-yilia/.babelrc","hash":"db600d40e93e6d8023737a65d58d3be7370e5e30","modified":1514472692450},{"_id":"themes/hexo-theme-yilia/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1514472692451},{"_id":"themes/hexo-theme-yilia/.gitattributes","hash":"758cfbecfa7919e99abddf3297f37cde7e3d8d4e","modified":1514472692451},{"_id":"themes/hexo-theme-yilia/.eslintrc.js","hash":"303d25adf02ad65720e537a16a4a137d14bb755f","modified":1514472692451},{"_id":"themes/hexo-theme-yilia/_config.yml","hash":"97ef7f39deb1d2e37660f0b0ef91b2ce92464993","modified":1514472692470},{"_id":"themes/hexo-theme-yilia/webpack.config.js","hash":"da7657347109ddb4ab8602b219778117254677fe","modified":1514472692510},{"_id":"themes/hexo-theme-yilia/package.json","hash":"ee6aa61f1cb89fd549e3e087c0232207a9c9ee30","modified":1514472692485},{"_id":"source/movies/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514472692448},{"_id":"source/books/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514472692447},{"_id":"source/_posts/array_slice的用法.md","hash":"2d48ab5395489b9a15ea6de53b47cbbd1079b89a","modified":1514903346665},{"_id":"source/_posts/find().md","hash":"cac6694fb4c7603ca86f124a34cd7045c88b5736","modified":1514551863951},{"_id":"source/_posts/PHP简单爬虫.md","hash":"9036b868d227208449abf3f1d30c723eac1263f1","modified":1514551892056},{"_id":"source/_posts/git常用命令.md","hash":"bd916aaa02bef3b12c2d6cc13f74517f88269531","modified":1514560025814},{"_id":"source/_posts/ci框架配置nginx.md","hash":"f7c0bcbf168c13cfac39519690c89b5f68d0a26a","modified":1514555798272},{"_id":"source/_posts/json_decode和json_encode的使用方法.md","hash":"26dc6a193796b9fd6c703a982c9f7c4ff1fd3fef","modified":1514551875419},{"_id":"source/_posts/mysql索引.md","hash":"c826c8a6ec1e039c86ecb21e8ee67da7a7e8f281","modified":1514990835783},{"_id":"source/_posts/stripos的用法.md","hash":"3716e6cb40b988541727ec98b21c616ef66f5cf3","modified":1514551925372},{"_id":"source/_posts/hello-world.md","hash":"c93a75fefdf5a33200b6b23b1fb02e04eca45431","modified":1514472692442},{"_id":"source/_posts/各种轮播图.md","hash":"7f4e8702e56082030ba634f0bd065d3de60f6418","modified":1514551947619},{"_id":"source/_posts/setTimeout().md","hash":"4b71c1d02668cffa9a0537d0ea36a23a82218100","modified":1514551918575},{"_id":"source/_posts/多pc跟新博客.md","hash":"cb7111044e399f1215ad8498a607b894ffcb71ea","modified":1514551940648},{"_id":"source/_posts/python小花网爬虫.md","hash":"3169ecfdc70c8ec6907b5bd1bbd5bd0a00d6d890","modified":1514551910302},{"_id":"source/_posts/mysql优化三范式.md","hash":"d251cb99a1ba02d7131aeddd82381e5a97adcc72","modified":1514551882672},{"_id":"source/_posts/如何在七牛云储存创建及使用空间.md","hash":"021c3719a398b2525ca72cb540a61ffd0caa2b74","modified":1514472692445},{"_id":"source/_posts/wamp下如何安装redis.md","hash":"06b3e4c326f873b72d7552354fbcf9a659756e5f","modified":1514551933301},{"_id":"source/_posts/python爬虫.md","hash":"3169ecfdc70c8ec6907b5bd1bbd5bd0a00d6d890","modified":1514551900140},{"_id":"source/_posts/手游H5页面.md","hash":"8900f9dca413c8d6fe61daa0d04a45d527fc4f96","modified":1514551982513},{"_id":"source/_posts/如何将本地代码上传到GitHub.md","hash":"8716e695634c6f72911deda96c515722d227f9a9","modified":1514551972473},{"_id":"source/_posts/正则表达式.md","hash":"e553ca23f36df8c1e56b6c6cd6ea0ce41b4acf66","modified":1514552024409},{"_id":"source/_posts/我的H5页面.md","hash":"a3f4192f540f4bb122d50fff600fe337632db4be","modified":1514552014189},{"_id":"source/_posts/鼠标滑过变色.md","hash":"8c9cd71c271f2844c2a6c74360dffaa5d09aa945","modified":1514551991361},{"_id":"source/_posts/获取免费天气API.md","hash":"2d117911121f673f3d1ba9828af498990b5017e2","modified":1514551961731},{"_id":"source/_posts/你好.md","hash":"6032822a4dab30ef8a919aa8c89fbc0eaa714033","modified":1514472692444},{"_id":"source/about/index.md","hash":"08b52edd9b2caf586606d75ab06dda2184d69113","modified":1514472692447},{"_id":"source/categories/index.md","hash":"ce9ded8214b00d233ccd848ef90fdddb16db5894","modified":1514472692447},{"_id":"source/user/index.md","hash":"6510dfb796f660d47fb803c2a931c4c32557d257","modified":1514472692450},{"_id":"source/tags/index.md","hash":"0e93e212c35b762e0f403b8a8a4b7a41bdf764af","modified":1514472692449},{"_id":"source/projects/index.html","hash":"b1464d1f5efd587e235c97e88ce26d68fe3d308e","modified":1514472692449},{"_id":"source/error/index.md","hash":"536aa31f51b82acac729381ba88c98933d82b729","modified":1514472692448},{"_id":"source/social/index.md","hash":"6812fee23bc75cfc9144d9dcc060560ed80baca3","modified":1514472692449},{"_id":"themes/hexo-theme-yilia/source-src/css.ejs","hash":"cf7eab48d626433120d1ef9697f719a359817018","modified":1514472692485},{"_id":"themes/hexo-theme-yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1514472692483},{"_id":"themes/hexo-theme-yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1514472692483},{"_id":"themes/hexo-theme-yilia/layout/index.ejs","hash":"ec498c6c0606acde997ce195dad97b267418d980","modified":1514472692483},{"_id":"themes/hexo-theme-yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1514472692484},{"_id":"themes/hexo-theme-yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1514472692485},{"_id":"themes/hexo-theme-yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1514472692484},{"_id":"themes/hexo-theme-yilia/source-src/script.ejs","hash":"28abac2426761d7e715b38aadd86ce6549c8ae77","modified":1514472692502},{"_id":"themes/hexo-theme-yilia/source/slider.e37972.js","hash":"ce5eac88301fe4f2fce0fb6203adfd58eb8313ac","modified":1514472692510},{"_id":"themes/hexo-theme-yilia/layout/layout.ejs","hash":"b471ab706d48e0be3f783eab1c94bf5878ef5a94","modified":1514472692483},{"_id":"themes/hexo-theme-yilia/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1514472692471},{"_id":"themes/hexo-theme-yilia/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1514472692471},{"_id":"themes/hexo-theme-yilia/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1514472692472},{"_id":"themes/hexo-theme-yilia/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1514472692472},{"_id":"themes/hexo-theme-yilia/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1514472692471},{"_id":"themes/hexo-theme-yilia/languages/zh-tw.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1514472692473},{"_id":"themes/hexo-theme-yilia/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1514472692472},{"_id":"themes/hexo-theme-yilia/source/main.507b3a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1514472692507},{"_id":"themes/hexo-theme-yilia/source/main.507b3a.js","hash":"42f38b932426a0bd24a41343a75f8517ca00e8eb","modified":1514472692508},{"_id":"themes/hexo-theme-yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514472692482},{"_id":"themes/hexo-theme-yilia/source/mobile.fdc4b7.js","hash":"a6a217fd749f95e75f7bb824ca53619938170450","modified":1514472692509},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1514472692504},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1514472692505},{"_id":"themes/hexo-theme-yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1514472692506},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1514472692504},{"_id":"themes/hexo-theme-yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1514472692503},{"_id":"themes/hexo-theme-yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1514472692506},{"_id":"themes/hexo-theme-yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1514472692505},{"_id":"themes/hexo-theme-yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1514472692507},{"_id":"themes/hexo-theme-yilia/source-src/css/_core.scss","hash":"29ba600e98ed55f7af4ade8038272c84cba21188","modified":1514472692486},{"_id":"themes/hexo-theme-yilia/source-src/css/archive.scss","hash":"d6a7dd88404b383b5b94e4c7ec675a410c41f3cc","modified":1514472692486},{"_id":"themes/hexo-theme-yilia/source-src/css/article-nav.scss","hash":"8f82fe898ba1c1bd00c24a7d8270feddc7eba3bc","modified":1514472692487},{"_id":"themes/hexo-theme-yilia/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1514472692486},{"_id":"themes/hexo-theme-yilia/source-src/css/article-main.scss","hash":"1577a2336b3ad122f49f60dff2bc1a97d4e7b18b","modified":1514472692487},{"_id":"themes/hexo-theme-yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1514472692506},{"_id":"themes/hexo-theme-yilia/source-src/css/comment.scss","hash":"b85f344f2c66d43d7094746e0a9ccb21d0534201","modified":1514472692488},{"_id":"themes/hexo-theme-yilia/source-src/css/article.scss","hash":"55d082fec4c6bb341725567acaa29ce37d50320a","modified":1514472692488},{"_id":"themes/hexo-theme-yilia/source-src/css/article-inner.scss","hash":"f7388f5c11370ef462f7cb913d8f72edf24ecaf9","modified":1514472692486},{"_id":"themes/hexo-theme-yilia/source-src/css/footer.scss","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1514472692493},{"_id":"themes/hexo-theme-yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1514472692493},{"_id":"themes/hexo-theme-yilia/source-src/css/fonts.scss","hash":"96d7eb1d42c06fdcccb8ef969f6ecd30c3194903","modified":1514472692491},{"_id":"themes/hexo-theme-yilia/source-src/css/aside.scss","hash":"07244c188f58ecfb90bb7c047b8cde977f1dc4b4","modified":1514472692488},{"_id":"themes/hexo-theme-yilia/source-src/css/main.scss","hash":"9eba1fcf4805256697528fcf3b767cf6dd8d0591","modified":1514472692495},{"_id":"themes/hexo-theme-yilia/source-src/css/grid.scss","hash":"f53ea8270752b5919ec5d79224d22af91f2eda12","modified":1514472692494},{"_id":"themes/hexo-theme-yilia/source-src/css/mobile-slider.scss","hash":"19f10fd2f0c3377aa4b165b3c2291ecf86dd9351","modified":1514472692495},{"_id":"themes/hexo-theme-yilia/source-src/css/left.scss","hash":"80dac621e43581a254d0152d5df901e4d0b01c09","modified":1514472692495},{"_id":"themes/hexo-theme-yilia/source-src/css/page.scss","hash":"244c4d75c375978ff9edb74acc68825e63c6b235","modified":1514472692496},{"_id":"themes/hexo-theme-yilia/source-src/css/highlight.scss","hash":"40e5aa5056dc0b3b9f51c5b387370b612e265d4e","modified":1514472692494},{"_id":"themes/hexo-theme-yilia/source-src/css/mobile.scss","hash":"d995dcd483a250fe61b426158afb61bf8923a927","modified":1514472692496},{"_id":"themes/hexo-theme-yilia/source-src/css/scroll.scss","hash":"2495f7e4e3b055735c531f944b5f40a118a351ec","modified":1514472692496},{"_id":"themes/hexo-theme-yilia/source-src/css/reward.scss","hash":"a557a9ed244c82b8b71e9da9de3339d92783499f","modified":1514472692496},{"_id":"themes/hexo-theme-yilia/source-src/css/tags-cloud.scss","hash":"399744e98e7c67939ed9b23c2670d8baad044eda","modified":1514472692497},{"_id":"themes/hexo-theme-yilia/source-src/css/social.scss","hash":"a10a038a1dac8953cb4ffc7e04272eff9fac54e4","modified":1514472692497},{"_id":"themes/hexo-theme-yilia/source-src/css/share.scss","hash":"9d6f6884f40c191882e56a1e1e1192400944a515","modified":1514472692496},{"_id":"themes/hexo-theme-yilia/layout/_partial/after-footer.ejs","hash":"c70f367f54064a441e574c913f5e0ea121d0f899","modified":1514472692474},{"_id":"themes/hexo-theme-yilia/source-src/css/tools.scss","hash":"2924fb6f77c4a9973cd928c2c7db0acb848ed483","modified":1514472692497},{"_id":"themes/hexo-theme-yilia/source-src/css/tags.scss","hash":"915c93edd67c5326695cc7dc84b14c5f154dbcc8","modified":1514472692497},{"_id":"themes/hexo-theme-yilia/source-src/css/tooltip.scss","hash":"b81cedbe31accca82e597801186911a7b5e6841c","modified":1514472692498},{"_id":"themes/hexo-theme-yilia/layout/_partial/article.ejs","hash":"8dea8f5f93a60185439b330b0f1d1649a6ab4bd0","modified":1514472692474},{"_id":"themes/hexo-theme-yilia/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1514472692475},{"_id":"themes/hexo-theme-yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1514472692474},{"_id":"themes/hexo-theme-yilia/layout/_partial/css.ejs","hash":"b011d92be321ebe09fa2b3179c08aa435b9d051c","modified":1514472692475},{"_id":"themes/hexo-theme-yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1514472692476},{"_id":"themes/hexo-theme-yilia/layout/_partial/footer.ejs","hash":"b8b454957046edb39dc9f22476c7f71f74c7249f","modified":1514560724651},{"_id":"themes/hexo-theme-yilia/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1514472692474},{"_id":"themes/hexo-theme-yilia/layout/_partial/head.ejs","hash":"12ca7d8dba56bc767b9309dda9526dcbaffc1614","modified":1514472692476},{"_id":"themes/hexo-theme-yilia/layout/_partial/mathjax.ejs","hash":"11550a418921d330e6553be0569a94ab5a217967","modified":1514472692477},{"_id":"themes/hexo-theme-yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1514472692477},{"_id":"themes/hexo-theme-yilia/layout/_partial/mobile-nav.ejs","hash":"ccec1fc70f021cb50ac85b524e7949878ab93a18","modified":1514472692477},{"_id":"themes/hexo-theme-yilia/layout/_partial/left-col.ejs","hash":"fb1b8457b9eb15b55da1bf7b133e12c375dd26f8","modified":1514472692477},{"_id":"themes/hexo-theme-yilia/layout/_partial/aside.ejs","hash":"751e5deab5365348be5243688b419c82d337ab9a","modified":1514472692475},{"_id":"themes/hexo-theme-yilia/source-src/js/Q.js","hash":"e56d9710afa79b31ca6b9fbd845f6d1895f5214b","modified":1514472692499},{"_id":"themes/hexo-theme-yilia/source-src/js/main.js","hash":"fe98bf90ce61658fe16ae057f8b6a512a845af3b","modified":1514472692500},{"_id":"themes/hexo-theme-yilia/source-src/js/aside.js","hash":"5e4c3c3d61f1e1ce2f09688d3aff25fadc851fff","modified":1514472692499},{"_id":"themes/hexo-theme-yilia/layout/_partial/tools.ejs","hash":"0ffcb251b79e8a920c9b4cb6bb7a96a808816165","modified":1514472692482},{"_id":"themes/hexo-theme-yilia/source-src/js/anm.js","hash":"d18f6276a352b871390a4112d479b9e58b8cdbbe","modified":1514472692499},{"_id":"themes/hexo-theme-yilia/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1514472692482},{"_id":"themes/hexo-theme-yilia/source-src/js/browser.js","hash":"4dc04845cf27f350922b63f1813a9c82e6e33b05","modified":1514472692499},{"_id":"themes/hexo-theme-yilia/source-src/js/fix.js","hash":"5a55537ec9258b99a57934e4a9005a764d4d04f9","modified":1514472692500},{"_id":"themes/hexo-theme-yilia/source-src/js/util.js","hash":"3bcdeb95072b85600874424e6929e3e22cfddaa0","modified":1514472692502},{"_id":"themes/hexo-theme-yilia/source-src/js/mobile.js","hash":"461c08ffcbc724d74ec7e0ff38e171eefe0f89fd","modified":1514472692501},{"_id":"themes/hexo-theme-yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1514472692501},{"_id":"themes/hexo-theme-yilia/source-src/js/share.js","hash":"d4ccff8266c37363b3904226f5d035b7db882c61","modified":1514472692501},{"_id":"themes/hexo-theme-yilia/source-src/js/viewer.js","hash":"c1e8f48b6a085ace210eee1838afcbc09e5ee6c2","modified":1514472692502},{"_id":"themes/hexo-theme-yilia/source-src/js/slider.js","hash":"0beaa112657ad57c723d9e773d5b79de60c1dd74","modified":1514472692502},{"_id":"themes/hexo-theme-yilia/layout/_partial/script.ejs","hash":"66f6030d3df3e833667e5adec0040e02fad8d9f9","modified":1514472692482},{"_id":"themes/hexo-theme-yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1514472692491},{"_id":"themes/hexo-theme-yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1514472692494},{"_id":"themes/hexo-theme-yilia/source-src/css/fonts/iconfont.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1514472692492},{"_id":"themes/hexo-theme-yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1514472692495},{"_id":"themes/hexo-theme-yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1514472692493},{"_id":"themes/hexo-theme-yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1514472692493},{"_id":"themes/hexo-theme-yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1514472692494},{"_id":"themes/hexo-theme-yilia/source-src/css/core/_animation.scss","hash":"1834c3ed8560716e63bb3a50be94cac87fbbeaf3","modified":1514472692489},{"_id":"themes/hexo-theme-yilia/source-src/css/core/_media-queries.scss","hash":"262ffcd88775080b7f511db37f58d2bcb1b2bfc7","modified":1514472692489},{"_id":"themes/hexo-theme-yilia/source-src/css/core/_mixin.scss","hash":"91db061c9c17628291a005e5bd4936cf9d35a6c4","modified":1514472692490},{"_id":"themes/hexo-theme-yilia/source-src/css/core/_reset.scss","hash":"398a49913b4a47d928103562b1ce94520be4026a","modified":1514472692490},{"_id":"themes/hexo-theme-yilia/source-src/css/core/_variables.scss","hash":"6e75bdaa46de83094ba0873099c6e7d656a22453","modified":1514472692490},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/category.ejs","hash":"e777cbf959b11c4dfda649c562799899b90ab4a3","modified":1514472692478},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/date.ejs","hash":"aae96de18d48cd3b9b7bf6fed0100e15b53cca97","modified":1514472692478},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/gitment.ejs","hash":"25655016773aa5d0774c56115ae1736a9fc9ea1f","modified":1514472692479},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1514472692479},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/changyan.ejs","hash":"248d0e3457c49d96fc9d4c0d9ddfb09ea011aa15","modified":1514472692478},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/share.ejs","hash":"06a2dd18ac9a43fbc9a59c61e6f795f9326e9927","modified":1514472692480},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/tag.ejs","hash":"2c4e4ca36c9bb4318506c38aca7127f1f44d827f","modified":1514472692480},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1514472692480},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1514472692478},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/wangyiyun.ejs","hash":"fb022502c741b4a26bad6b2ad37245c10ede3f1a","modified":1514472692481},{"_id":"public/atom.xml","hash":"2b1c28c61dc39b7499df2adf072db2f645dd3797","modified":1514990952775},{"_id":"public/content.json","hash":"ca6984de93cd31191251df2567f22647ef278af7","modified":1514990952908},{"_id":"public/404.html","hash":"8e91f2a54a8f236664c82707c345b367edcfb627","modified":1514990954201},{"_id":"public/movies/index.html","hash":"4f8435d955efd8ce52796b7e2147f3e087212e16","modified":1514990955215},{"_id":"public/books/index.html","hash":"abb242de196bee28df0018a8831e8080000789c3","modified":1514990955227},{"_id":"public/about/index.html","hash":"83649839cf023c80d0a46637d87170a704a641f3","modified":1514990955228},{"_id":"public/categories/index.html","hash":"8e12a740a68050533b1fbdeb505e5f5a2d7d4843","modified":1514990955228},{"_id":"public/projects/index.html","hash":"54087162d7f034e064d0c2e24372d4ee60b71876","modified":1514990955228},{"_id":"public/user/index.html","hash":"d7b6b14430170ddf5d13751387f8e84f0e58f919","modified":1514990955229},{"_id":"public/tags/index.html","hash":"6ef42eee6386984fe607024794a5c16232977178","modified":1514990955229},{"_id":"public/error/index.html","hash":"9429029dd7bb29d214fccafca2340a62fe7937d4","modified":1514990955229},{"_id":"public/2017/12/29/git常用命令/index.html","hash":"8f2015395a32c87bd28ce77761ed775b920b8d33","modified":1514990955229},{"_id":"public/2017/11/15/ci框架配置nginx/index.html","hash":"4eb2543331d62cecbf254a3bcf5099f037ef0ca0","modified":1514990955229},{"_id":"public/2017/11/12/鼠标滑过变色/index.html","hash":"a2d955856b2daa35e83082119b283a55686bdbaa","modified":1514990955230},{"_id":"public/2017/11/09/PHP简单爬虫/index.html","hash":"7ad1a0b088375987e675319e605f052b3f4c41ef","modified":1514990955230},{"_id":"public/2017/10/23/多pc跟新博客/index.html","hash":"ab5dbf3a36638173bbf61b2d92b7ce1ce047e1cf","modified":1514990955230},{"_id":"public/2017/09/13/python小花网爬虫/index.html","hash":"0a8cf3d3ceaca42315a6e26d7375515b042446d5","modified":1514990955230},{"_id":"public/2017/09/11/正则表达式/index.html","hash":"95e1db4595590228cd015916c8e05d08fbec6322","modified":1514990955230},{"_id":"public/social/index.html","hash":"d41b876ba802fb9a1069c04d6b24253f65e77a5d","modified":1514990955230},{"_id":"public/2017/08/25/各种轮播图/index.html","hash":"ea01c3c50c040aa4cb8a31f613a761b56c1fd7c3","modified":1514990955230},{"_id":"public/2017/08/21/wamp下如何安装redis/index.html","hash":"160594cb4d43ca99dcb3b6ae6363f1f07e190399","modified":1514990955231},{"_id":"public/2017/08/10/手游H5页面/index.html","hash":"4525b5591e431d1965686527d796e50f3adf3340","modified":1514990955231},{"_id":"public/2017/08/06/我的H5页面/index.html","hash":"02ec68ccc3d993bea971c2000b98f095664238ba","modified":1514990955231},{"_id":"public/2017/08/01/mysql优化三范式/index.html","hash":"1581d3e1095666b9e06df8d91f7e3a1eb4f4e220","modified":1514990955231},{"_id":"public/2017/07/31/如何将本地代码上传到GitHub/index.html","hash":"a1e8a548cfe2a617dde3cca88267effd1f0522ae","modified":1514990955231},{"_id":"public/2017/07/27/setTimeout()/index.html","hash":"fff732b05f7caa0077b85bcbc325362fc85f5b5a","modified":1514990955231},{"_id":"public/2017/09/13/python爬虫/index.html","hash":"5a1a23c62d3a0ca74de653e8340a47f2d4eb954d","modified":1514990955232},{"_id":"public/2018/01/02/array_slice的用法/index.html","hash":"9112a0a7f4a78e37b9d8764ef3ab655c1e9e37b6","modified":1514990955232},{"_id":"public/2017/07/20/find()/index.html","hash":"0470694116791e6d0c1babcf59e9bc8e0ac4bf9c","modified":1514990955232},{"_id":"public/2017/07/18/如何在七牛云储存创建及使用空间/index.html","hash":"85bcbdae98b1358a7fd5caa10bcad2e54b5d5158","modified":1514990955232},{"_id":"public/2017/07/17/你好/index.html","hash":"6b3f2dfdfb1c0a8305f794b17d345e905f2495e8","modified":1514990955232},{"_id":"public/2016/10/17/hello-world/index.html","hash":"c7f4809adc4826410a7203f22237f4d30a73c123","modified":1514990955233},{"_id":"public/archives/index.html","hash":"4f29bbc82e80de402a0bc7928c65b1191e33fc6b","modified":1514990955233},{"_id":"public/archives/page/2/index.html","hash":"90273ad404c10d2b41859c8494925ec177e2d896","modified":1514990955233},{"_id":"public/2017/07/20/获取免费天气API/index.html","hash":"e26920d3e96a1e71429c0ab70c0d3a2e31896f23","modified":1514990955233},{"_id":"public/archives/page/3/index.html","hash":"43658dc6b2a2c96be287d802a0508b44d44279e3","modified":1514990955233},{"_id":"public/archives/2016/index.html","hash":"f945e0108147d6d02b1a1141e4310b50b7209e55","modified":1514990955233},{"_id":"public/archives/2016/10/index.html","hash":"a1ef8660b9d7772c958e7e6c9dc457b6ddf159a9","modified":1514990955234},{"_id":"public/2017/07/20/json_decode和json_encode的使用方法/index.html","hash":"6ba1b54fb8081256906d9fe0048cba3357fa2522","modified":1514990955234},{"_id":"public/2017/07/20/stripos的用法/index.html","hash":"0556df3fc677b3e4425668fbd94faf0424df62d4","modified":1514990955234},{"_id":"public/archives/2017/index.html","hash":"fc36ae7d55a3ee54c9209ab4b6311758c800c4c1","modified":1514990955234},{"_id":"public/archives/2017/page/3/index.html","hash":"d3f8fcea6a43512b96b0d604826dfe2aa27e94ef","modified":1514990955234},{"_id":"public/archives/2017/09/index.html","hash":"370f5318c9168031365768d9d684e40e24ca3cc8","modified":1514990955234},{"_id":"public/archives/2017/page/2/index.html","hash":"cf064ba20d398aff79c461580a37f7b4b498cf13","modified":1514990955235},{"_id":"public/archives/2017/08/index.html","hash":"0298ff6f54d99a7b159e0bc02fc0298b969058f9","modified":1514990955235},{"_id":"public/archives/2017/10/index.html","hash":"9458108fde79ff66cb1c5e78e8c71b8016527f77","modified":1514990955235},{"_id":"public/archives/2017/12/index.html","hash":"4c554ce960ebdc9b6b4a864bfc18f4e79a7aad28","modified":1514990955235},{"_id":"public/archives/2018/01/index.html","hash":"834cd20d8e121e1a59b01befa289a71bd22c8461","modified":1514990955235},{"_id":"public/archives/2017/11/index.html","hash":"e8c518f4458c329c7aed3c05e00b2f04ee015c93","modified":1514990955235},{"_id":"public/index.html","hash":"082f17aba6f0cf696ff3d3b515a89d44b1747e6a","modified":1514990955235},{"_id":"public/page/2/index.html","hash":"9116e8755034faefd94de4c25e38c4d779ffb482","modified":1514990955236},{"_id":"public/page/3/index.html","hash":"8f5450b372cdb77d76080fbe096b4693616927cd","modified":1514990955236},{"_id":"public/tags/GIT/index.html","hash":"a3f21d6d3bc779c2638ffb18b0db34a176fa245a","modified":1514990955237},{"_id":"public/tags/jQery/index.html","hash":"21e51fb5f2b035f87b5e4199c61d576fbc896bb1","modified":1514990955237},{"_id":"public/tags/PHP/index.html","hash":"7acd33c3bafbbea46b809267128caf260a8523cf","modified":1514990955238},{"_id":"public/douban/index.html","hash":"ec0af952f0a7e4feceb8bff7a032eee7c9201092","modified":1514990955238},{"_id":"public/tags/Nginx/index.html","hash":"51819f29ccd68494861934bd32d4c964d0a7303b","modified":1514990955238},{"_id":"public/tags/QueryList/index.html","hash":"61c1e761f4b7cea32ea2ac7bcfa10513a926d890","modified":1514990955238},{"_id":"public/tags/Mysql/index.html","hash":"15d9b9712e79ef117e61ac3ba81273b35fd78c53","modified":1514990955238},{"_id":"public/tags/Swiper/index.html","hash":"f6a4f0e064a6615866fdcb326c4bbb2d19573849","modified":1514990955238},{"_id":"public/archives/2018/index.html","hash":"e1e2d197c26b0c1aaa0e05b6f54afca7f47921da","modified":1514990955239},{"_id":"public/tags/GIthub/index.html","hash":"6d9101126c4afb4df9e2995a06a806dd7ea97df6","modified":1514990955239},{"_id":"public/tags/Python/index.html","hash":"adb7cc64e3716f05e0cc1c270bda35ebcbd8aec8","modified":1514990955239},{"_id":"public/tags/redis/index.html","hash":"f513151772c1d5bc10e9026e404d2cd75cb25aa4","modified":1514990955239},{"_id":"public/tags/GitHub/index.html","hash":"13af3ed55d945d3e71b280d9f1ddf1b5ce6bdd14","modified":1514990955239},{"_id":"public/tags/HTML/index.html","hash":"68bd957f0563707cf9901bf6b74b9206969b327a","modified":1514990955239},{"_id":"public/tags/正则/index.html","hash":"583575f7588fa57c3573321a3cc5fe15df2a178d","modified":1514990955239},{"_id":"public/tags/re/index.html","hash":"283a3a439ce2c882bf6e4a20461bdde8c207f22d","modified":1514990955239},{"_id":"public/tags/CSS/index.html","hash":"1bb53471cdebafd98888645abce5d396be9c3311","modified":1514990955240},{"_id":"public/tags/博客/index.html","hash":"ab49c9dae42bca486bdce90ba79bdc70454d07db","modified":1514990955240},{"_id":"public/tags/MySQL/index.html","hash":"134abc32060d67b56fa642145c3f0af4b5514643","modified":1514990955240},{"_id":"public/tags/API/index.html","hash":"046b5d61aa7326a09cb8785c3b98bb9579ab0be0","modified":1514990955240},{"_id":"public/tags/七牛云/index.html","hash":"08f1e27348ee6fe6f31019370f1d5e2f5dc8684d","modified":1514990955240},{"_id":"public/archives/2017/07/index.html","hash":"a59d4cc83feb4a546b4ab5ef97a9931a322a9e95","modified":1514990955240},{"_id":"public/2018/01/03/mysql索引/index.html","hash":"da89f6bbdd86073109e41ebf9df6f9cf90dd8f35","modified":1514990955243}],"Category":[],"Data":[],"Page":[{"_content":"测试","source":"404.html","raw":"测试","date":"2017-12-29T13:36:41.589Z","updated":"2017-12-28T14:51:32.440Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjbz6hcv30000osmmq6fzwl1k","content":"测试","site":{"data":{}},"excerpt":"","more":"测试"},{"_content":"","source":"movies/index.html","raw":"","date":"2017-12-29T13:36:41.605Z","updated":"2017-12-28T14:51:32.448Z","path":"movies/index.html","title":"","comments":1,"layout":"page","_id":"cjbz6hcwt0001osmmqt1sg9xo","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"","source":"books/index.html","raw":"","date":"2017-12-29T13:36:41.589Z","updated":"2017-12-28T14:51:32.447Z","path":"books/index.html","title":"","comments":1,"layout":"page","_id":"cjbz6hcx40003osmm66zottau","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于我","_content":"\n博主目前在江苏某校读大三，念软件工程专业。我大概也是有一点高不成低不就的吧，希望能紧跟时代潮流，做一些真正对人们有用的工作。虽然对不去读研“深造”有些许遗憾，但是我相信自己即使是在工作岗位上，也会继续学习，学得更快，更多，更好。\n\n2017年，由于受不了wordpress的臃肿，我把wordpress的博客搬到了hexo，在将文章逐篇进行调整的时候才发觉自己在这一年半不到的时间竟然水了200多篇小博客。回头看看曾经折腾过我的各种幼稚的问题才发觉那是多么的好笑。不过转念一想，又觉得那是一种无知的幸福，因为渐渐的，我发现越来越多的问题是无法通过一两篇文章能够记清楚的了。\n\n也许是老了。\n\n不过每当发现我的文章被转载学习时、或者是文章底下有热心的同学请教问题时、甚至是有的同学直接私信我请教问题时，我都会更加坚定我写下去的决心，即使这些东西以后看起来非常简单、甚至是幼稚，但是说不定就会有一两篇文章，会在某些情况下解决了其他同学的燃眉之急。\n\n不过渐渐的我发现其实网上能够记载的东西也实在是很有限的，有时候花时间记录一个知识点倒不如自己亲身去实践一下来的印象深刻。与其做文档的搬运工，倒不如做一个实践者，与其分享老掉牙的技术，倒不如实实在在的做出大家能够使用的产品。这大概是我最近混迹GayHub圈得到的一点小感想吧。\n\n有时候自己闲下来也会问问自己，自己为什么要坚持不懈的维护这个日均PV只有100左右的小网站，仅仅是为了作为学习笔记，顺带帮(qiang)助(xing)别(zhuang)人(bi)？还是为了作为兜售自己的资本？还是作为打发时间的业余爱好？还是有朝一日能打打广告啥啥的。。。毕竟回报和付出完全不是正比嘛。不过仔细想想看我又需要什么样的回报呢，我们来世上走一遭，图的又是个啥。从泥土中来也中将回归泥土，没有人能改变世界，说白了我们只能改变自己，改变自己的愚蠢、无知、冲动，我们只能是体验这个世界，体验自然的美丽多姿，体验生命的自尊坚强，体验知识的无穷无尽，体验凡人的七情六欲，体验作为人的责任与担当。。。虽然我们不能改变世界，但是我们至少能让自己的生命充实、精彩。那么怎样的生命才算是精彩呢？我不知道，这大概需要我用一辈子去实践，不过至少等我迟暮之时，得有个一生的参照吧~~~希望自己能够坚持下去，“不忘初心”说来容易，真正做到的又有多少。\n\n所以接下来的博客，大约是朝着这些方向发展的：\n\n1. 记录遇到的技术问题以及解决思路。\n2. 记录发现的有趣知识和工具。\n3. 记录一些零碎的想法。\n4. 记录成长道路上的milestone。\n5. 所有我想写的但是又不包括在上面四点中的内容。。。\n\n|Contact|Me|\n|---|---|\n|ID|Myths|\n|QQ|1276077732|\n|Email|dqz48548263@qq.com|\n|Github|[mythsman](https://github.com/mythsman)|\n\nPS:想要更加进一步了解我，可以移步我的[个人简历](https://blog.mythsman.com/cv/)哦～～～","source":"about/index.md","raw":"---\ntitle: 关于我\n---\n\n博主目前在江苏某校读大三，念软件工程专业。我大概也是有一点高不成低不就的吧，希望能紧跟时代潮流，做一些真正对人们有用的工作。虽然对不去读研“深造”有些许遗憾，但是我相信自己即使是在工作岗位上，也会继续学习，学得更快，更多，更好。\n\n2017年，由于受不了wordpress的臃肿，我把wordpress的博客搬到了hexo，在将文章逐篇进行调整的时候才发觉自己在这一年半不到的时间竟然水了200多篇小博客。回头看看曾经折腾过我的各种幼稚的问题才发觉那是多么的好笑。不过转念一想，又觉得那是一种无知的幸福，因为渐渐的，我发现越来越多的问题是无法通过一两篇文章能够记清楚的了。\n\n也许是老了。\n\n不过每当发现我的文章被转载学习时、或者是文章底下有热心的同学请教问题时、甚至是有的同学直接私信我请教问题时，我都会更加坚定我写下去的决心，即使这些东西以后看起来非常简单、甚至是幼稚，但是说不定就会有一两篇文章，会在某些情况下解决了其他同学的燃眉之急。\n\n不过渐渐的我发现其实网上能够记载的东西也实在是很有限的，有时候花时间记录一个知识点倒不如自己亲身去实践一下来的印象深刻。与其做文档的搬运工，倒不如做一个实践者，与其分享老掉牙的技术，倒不如实实在在的做出大家能够使用的产品。这大概是我最近混迹GayHub圈得到的一点小感想吧。\n\n有时候自己闲下来也会问问自己，自己为什么要坚持不懈的维护这个日均PV只有100左右的小网站，仅仅是为了作为学习笔记，顺带帮(qiang)助(xing)别(zhuang)人(bi)？还是为了作为兜售自己的资本？还是作为打发时间的业余爱好？还是有朝一日能打打广告啥啥的。。。毕竟回报和付出完全不是正比嘛。不过仔细想想看我又需要什么样的回报呢，我们来世上走一遭，图的又是个啥。从泥土中来也中将回归泥土，没有人能改变世界，说白了我们只能改变自己，改变自己的愚蠢、无知、冲动，我们只能是体验这个世界，体验自然的美丽多姿，体验生命的自尊坚强，体验知识的无穷无尽，体验凡人的七情六欲，体验作为人的责任与担当。。。虽然我们不能改变世界，但是我们至少能让自己的生命充实、精彩。那么怎样的生命才算是精彩呢？我不知道，这大概需要我用一辈子去实践，不过至少等我迟暮之时，得有个一生的参照吧~~~希望自己能够坚持下去，“不忘初心”说来容易，真正做到的又有多少。\n\n所以接下来的博客，大约是朝着这些方向发展的：\n\n1. 记录遇到的技术问题以及解决思路。\n2. 记录发现的有趣知识和工具。\n3. 记录一些零碎的想法。\n4. 记录成长道路上的milestone。\n5. 所有我想写的但是又不包括在上面四点中的内容。。。\n\n|Contact|Me|\n|---|---|\n|ID|Myths|\n|QQ|1276077732|\n|Email|dqz48548263@qq.com|\n|Github|[mythsman](https://github.com/mythsman)|\n\nPS:想要更加进一步了解我，可以移步我的[个人简历](https://blog.mythsman.com/cv/)哦～～～","date":"2017-12-29T13:36:41.589Z","updated":"2017-12-28T14:51:32.447Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjbz6hd3b0007osmm3g81qchq","content":"<p>博主目前在江苏某校读大三，念软件工程专业。我大概也是有一点高不成低不就的吧，希望能紧跟时代潮流，做一些真正对人们有用的工作。虽然对不去读研“深造”有些许遗憾，但是我相信自己即使是在工作岗位上，也会继续学习，学得更快，更多，更好。</p>\n<p>2017年，由于受不了wordpress的臃肿，我把wordpress的博客搬到了hexo，在将文章逐篇进行调整的时候才发觉自己在这一年半不到的时间竟然水了200多篇小博客。回头看看曾经折腾过我的各种幼稚的问题才发觉那是多么的好笑。不过转念一想，又觉得那是一种无知的幸福，因为渐渐的，我发现越来越多的问题是无法通过一两篇文章能够记清楚的了。</p>\n<p>也许是老了。</p>\n<p>不过每当发现我的文章被转载学习时、或者是文章底下有热心的同学请教问题时、甚至是有的同学直接私信我请教问题时，我都会更加坚定我写下去的决心，即使这些东西以后看起来非常简单、甚至是幼稚，但是说不定就会有一两篇文章，会在某些情况下解决了其他同学的燃眉之急。</p>\n<p>不过渐渐的我发现其实网上能够记载的东西也实在是很有限的，有时候花时间记录一个知识点倒不如自己亲身去实践一下来的印象深刻。与其做文档的搬运工，倒不如做一个实践者，与其分享老掉牙的技术，倒不如实实在在的做出大家能够使用的产品。这大概是我最近混迹GayHub圈得到的一点小感想吧。</p>\n<p>有时候自己闲下来也会问问自己，自己为什么要坚持不懈的维护这个日均PV只有100左右的小网站，仅仅是为了作为学习笔记，顺带帮(qiang)助(xing)别(zhuang)人(bi)？还是为了作为兜售自己的资本？还是作为打发时间的业余爱好？还是有朝一日能打打广告啥啥的。。。毕竟回报和付出完全不是正比嘛。不过仔细想想看我又需要什么样的回报呢，我们来世上走一遭，图的又是个啥。从泥土中来也中将回归泥土，没有人能改变世界，说白了我们只能改变自己，改变自己的愚蠢、无知、冲动，我们只能是体验这个世界，体验自然的美丽多姿，体验生命的自尊坚强，体验知识的无穷无尽，体验凡人的七情六欲，体验作为人的责任与担当。。。虽然我们不能改变世界，但是我们至少能让自己的生命充实、精彩。那么怎样的生命才算是精彩呢？我不知道，这大概需要我用一辈子去实践，不过至少等我迟暮之时，得有个一生的参照吧~~~希望自己能够坚持下去，“不忘初心”说来容易，真正做到的又有多少。</p>\n<p>所以接下来的博客，大约是朝着这些方向发展的：</p>\n<ol>\n<li>记录遇到的技术问题以及解决思路。</li>\n<li>记录发现的有趣知识和工具。</li>\n<li>记录一些零碎的想法。</li>\n<li>记录成长道路上的milestone。</li>\n<li>所有我想写的但是又不包括在上面四点中的内容。。。</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Contact</th>\n<th>Me</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ID</td>\n<td>Myths</td>\n</tr>\n<tr>\n<td>QQ</td>\n<td>1276077732</td>\n</tr>\n<tr>\n<td>Email</td>\n<td>dqz48548263@qq.com</td>\n</tr>\n<tr>\n<td>Github</td>\n<td><a href=\"https://github.com/mythsman\" target=\"_blank\" rel=\"external\">mythsman</a></td>\n</tr>\n</tbody>\n</table>\n<p>PS:想要更加进一步了解我，可以移步我的<a href=\"https://blog.mythsman.com/cv/\" target=\"_blank\" rel=\"external\">个人简历</a>哦～～～</p>\n","site":{"data":{}},"excerpt":"","more":"<p>博主目前在江苏某校读大三，念软件工程专业。我大概也是有一点高不成低不就的吧，希望能紧跟时代潮流，做一些真正对人们有用的工作。虽然对不去读研“深造”有些许遗憾，但是我相信自己即使是在工作岗位上，也会继续学习，学得更快，更多，更好。</p>\n<p>2017年，由于受不了wordpress的臃肿，我把wordpress的博客搬到了hexo，在将文章逐篇进行调整的时候才发觉自己在这一年半不到的时间竟然水了200多篇小博客。回头看看曾经折腾过我的各种幼稚的问题才发觉那是多么的好笑。不过转念一想，又觉得那是一种无知的幸福，因为渐渐的，我发现越来越多的问题是无法通过一两篇文章能够记清楚的了。</p>\n<p>也许是老了。</p>\n<p>不过每当发现我的文章被转载学习时、或者是文章底下有热心的同学请教问题时、甚至是有的同学直接私信我请教问题时，我都会更加坚定我写下去的决心，即使这些东西以后看起来非常简单、甚至是幼稚，但是说不定就会有一两篇文章，会在某些情况下解决了其他同学的燃眉之急。</p>\n<p>不过渐渐的我发现其实网上能够记载的东西也实在是很有限的，有时候花时间记录一个知识点倒不如自己亲身去实践一下来的印象深刻。与其做文档的搬运工，倒不如做一个实践者，与其分享老掉牙的技术，倒不如实实在在的做出大家能够使用的产品。这大概是我最近混迹GayHub圈得到的一点小感想吧。</p>\n<p>有时候自己闲下来也会问问自己，自己为什么要坚持不懈的维护这个日均PV只有100左右的小网站，仅仅是为了作为学习笔记，顺带帮(qiang)助(xing)别(zhuang)人(bi)？还是为了作为兜售自己的资本？还是作为打发时间的业余爱好？还是有朝一日能打打广告啥啥的。。。毕竟回报和付出完全不是正比嘛。不过仔细想想看我又需要什么样的回报呢，我们来世上走一遭，图的又是个啥。从泥土中来也中将回归泥土，没有人能改变世界，说白了我们只能改变自己，改变自己的愚蠢、无知、冲动，我们只能是体验这个世界，体验自然的美丽多姿，体验生命的自尊坚强，体验知识的无穷无尽，体验凡人的七情六欲，体验作为人的责任与担当。。。虽然我们不能改变世界，但是我们至少能让自己的生命充实、精彩。那么怎样的生命才算是精彩呢？我不知道，这大概需要我用一辈子去实践，不过至少等我迟暮之时，得有个一生的参照吧~~~希望自己能够坚持下去，“不忘初心”说来容易，真正做到的又有多少。</p>\n<p>所以接下来的博客，大约是朝着这些方向发展的：</p>\n<ol>\n<li>记录遇到的技术问题以及解决思路。</li>\n<li>记录发现的有趣知识和工具。</li>\n<li>记录一些零碎的想法。</li>\n<li>记录成长道路上的milestone。</li>\n<li>所有我想写的但是又不包括在上面四点中的内容。。。</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Contact</th>\n<th>Me</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ID</td>\n<td>Myths</td>\n</tr>\n<tr>\n<td>QQ</td>\n<td>1276077732</td>\n</tr>\n<tr>\n<td>Email</td>\n<td>dqz48548263@qq.com</td>\n</tr>\n<tr>\n<td>Github</td>\n<td><a href=\"https://github.com/mythsman\" target=\"_blank\" rel=\"external\">mythsman</a></td>\n</tr>\n</tbody>\n</table>\n<p>PS:想要更加进一步了解我，可以移步我的<a href=\"https://blog.mythsman.com/cv/\" target=\"_blank\" rel=\"external\">个人简历</a>哦～～～</p>\n"},{"layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\nlayout: categories\ncomments: false\n---\n","date":"2017-12-29T13:36:41.605Z","updated":"2017-12-28T14:51:32.447Z","path":"categories/index.html","title":"","_id":"cjbz6hd3k0009osmmx8f5qyaa","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"我的项目","date":"2017-06-14T05:23:33.000Z","_content":"\n<style>\n.projects .item {\n  position: relative;\n  margin-bottom: 20px;\n  width: 100%;\n  clear: both;\n  border-top: 1px #ddd solid;\n  padding: 15px 0;\n}\n\n.projects .item .image{\n  width: 30%;\n  float: left;\n}\n\n.projects .item .content{\n  width: 70%;\n  float: left;\n  padding: 0 15px;\n}\n\n</style>\n\n\n<blockquote>\n  我的学习过程中的点点滴滴。\n</blockquote>\n\n<div class=\"projects\">\n  <div class=\"item\">\n    <div class=\"image\">\n      <img src=\"/images/avatar.gif\">\n    </div>\n    <div class=\"content\">\n      <div class=\"title\">\n        <strong>这里是标题</strong>\n      </div>\n      <div class=\"info\">\n        <a href=\"#\" target=\"_blank\">这里是链接</a>\n        <br>这里是时间 | 这里是技术栈\n        <p>\n\t\t\t这里是简介\n        </p>\n\n      </div>\n    </div>\n  </div>\n  <div style=\"clear:both;\">\n  </div>\n</div>\n\n","source":"projects/index.html","raw":"---\ntitle: 我的项目\ndate: 2017-06-14 13:23:33\n---\n\n<style>\n.projects .item {\n  position: relative;\n  margin-bottom: 20px;\n  width: 100%;\n  clear: both;\n  border-top: 1px #ddd solid;\n  padding: 15px 0;\n}\n\n.projects .item .image{\n  width: 30%;\n  float: left;\n}\n\n.projects .item .content{\n  width: 70%;\n  float: left;\n  padding: 0 15px;\n}\n\n</style>\n\n\n<blockquote>\n  我的学习过程中的点点滴滴。\n</blockquote>\n\n<div class=\"projects\">\n  <div class=\"item\">\n    <div class=\"image\">\n      <img src=\"/images/avatar.gif\">\n    </div>\n    <div class=\"content\">\n      <div class=\"title\">\n        <strong>这里是标题</strong>\n      </div>\n      <div class=\"info\">\n        <a href=\"#\" target=\"_blank\">这里是链接</a>\n        <br>这里是时间 | 这里是技术栈\n        <p>\n\t\t\t这里是简介\n        </p>\n\n      </div>\n    </div>\n  </div>\n  <div style=\"clear:both;\">\n  </div>\n</div>\n\n","updated":"2017-12-28T14:51:32.449Z","path":"projects/index.html","comments":1,"layout":"page","_id":"cjbz6hd3u000cosmmfxtth28a","content":"\n<style>\n.projects .item {\n  position: relative;\n  margin-bottom: 20px;\n  width: 100%;\n  clear: both;\n  border-top: 1px #ddd solid;\n  padding: 15px 0;\n}\n\n.projects .item .image{\n  width: 30%;\n  float: left;\n}\n\n.projects .item .content{\n  width: 70%;\n  float: left;\n  padding: 0 15px;\n}\n\n</style>\n\n\n<blockquote>\n  我的学习过程中的点点滴滴。\n</blockquote>\n\n<div class=\"projects\">\n  <div class=\"item\">\n    <div class=\"image\">\n      <img src=\"/images/avatar.gif\">\n    </div>\n    <div class=\"content\">\n      <div class=\"title\">\n        <strong>这里是标题</strong>\n      </div>\n      <div class=\"info\">\n        <a href=\"#\" target=\"_blank\">这里是链接</a>\n        <br>这里是时间 | 这里是技术栈\n        <p>\n\t\t\t这里是简介\n        </p>\n\n      </div>\n    </div>\n  </div>\n  <div style=\"clear:both;\">\n  </div>\n</div>\n\n","site":{"data":{}},"excerpt":"","more":"\n<style>\n.projects .item {\n  position: relative;\n  margin-bottom: 20px;\n  width: 100%;\n  clear: both;\n  border-top: 1px #ddd solid;\n  padding: 15px 0;\n}\n\n.projects .item .image{\n  width: 30%;\n  float: left;\n}\n\n.projects .item .content{\n  width: 70%;\n  float: left;\n  padding: 0 15px;\n}\n\n</style>\n\n\n<blockquote>\n  我的学习过程中的点点滴滴。\n</blockquote>\n\n<div class=\"projects\">\n  <div class=\"item\">\n    <div class=\"image\">\n      <img src=\"/images/avatar.gif\">\n    </div>\n    <div class=\"content\">\n      <div class=\"title\">\n        <strong>这里是标题</strong>\n      </div>\n      <div class=\"info\">\n        <a href=\"#\" target=\"_blank\">这里是链接</a>\n        <br>这里是时间 | 这里是技术栈\n        <p>\n\t\t\t这里是简介\n        </p>\n\n      </div>\n    </div>\n  </div>\n  <div style=\"clear:both;\">\n  </div>\n</div>\n\n"},{"layout":"page","title":"关于我","description":null,"comments":0,"reward":true,"_content":"## Image","source":"user/index.md","raw":"---\nlayout: page      # 必须\ntitle: 关于我  # 必须，页面名称\ndescription:      # 页面二级标题，描述性文字\ncomments: false     # 禁用评论，可选，默认开启\nreward: true      # 禁用打赏，可选，默认开启\n---\n## Image","date":"2017-12-29T13:36:41.605Z","updated":"2017-12-28T14:51:32.450Z","path":"user/index.html","_id":"cjbz6hd40000fosmmk6hjhclo","content":"<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2>"},{"layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\nlayout: tags\ncomments: false\n---\n","date":"2017-12-29T13:36:41.605Z","updated":"2017-12-28T14:51:32.449Z","path":"tags/index.html","title":"","_id":"cjbz6hd46000iosmmwfw3qhkh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"页面已丢失","_content":"\n呃。。。别忙活了，您刚才访问的页面似乎不存在哎，洗洗睡吧～～～\n\n<script>\nwindow.setTimeout(function(){ window.location = \"https://blog.mythsman.com\"; },1000);\n</script>\n","source":"error/index.md","raw":"---\ntitle: 页面已丢失\n---\n\n呃。。。别忙活了，您刚才访问的页面似乎不存在哎，洗洗睡吧～～～\n\n<script>\nwindow.setTimeout(function(){ window.location = \"https://blog.mythsman.com\"; },1000);\n</script>\n","date":"2017-12-29T13:36:41.605Z","updated":"2017-12-28T14:51:32.448Z","path":"error/index.html","comments":1,"layout":"page","_id":"cjbz6hd4a000losmm39vhwntr","content":"<p>呃。。。别忙活了，您刚才访问的页面似乎不存在哎，洗洗睡吧～～～</p>\n<script>\nwindow.setTimeout(function(){ window.location = \"https://blog.mythsman.com\"; },1000);\n</script>\n","site":{"data":{}},"excerpt":"","more":"<p>呃。。。别忙活了，您刚才访问的页面似乎不存在哎，洗洗睡吧～～～</p>\n<script>\nwindow.setTimeout(function(){ window.location = \"https://blog.mythsman.com\"; },1000);\n</script>\n"},{"title":"我的博客圈","_content":"\n> 这些是我在刷博客圈的时候发现的大犇们，有的技术超群，有的思维活跃，有的生活优雅，而且还都在努力的进步。都是我十分羡慕的dalao。\n\n|人物|简介|\n|-|-|\n|[纯洁的微笑](http://www.ityouknow.com)|资深码农博主，对Spring框架的总结非常不错，现在在一家互联网金融公司做技术经理兼技术负责人|\n|[Raysmond](http://raysmond.com/)|复旦的计算机研究生，现在在北京工作，生活很精彩，工程能力也非常强，看到他在与我同龄时写的一些代码，非常佩服|\n|[Yikun](http://yikun.github.io/)|西电毕业的通信领域研究生，去年好像去了菊厂，手绘很棒，生活也很精彩，也是个技术牛人|\n|[酷壳](http://coolshell.cn/)|耗子叔，业内知名博主，每一篇博文都是经典，15年开发经验的老码农，曾在Amazon，阿里等处做过资深专家|\n|[王之琳](https://willin.wang/)|12年本科毕业前端交互工程师，能力很强，简历很炫，写的项目非常多，也特别喜欢逛各种论坛|\n|[litten](http://litten.me/)|毕业于华科的前端工程师，非常文青，我这个博客主题就是他写的，现在鹅厂工作|\n|[Oilbeater](http://oilbeater.com/)|北大毕业的研究生，曾在阿里任职，现在灵雀云搞Docker，挺有想法的人|\n|[羡辙](http://zhangwenli.com/)|毕业于上交的研究生，现在是一个非常出色的前端工程师，目前在百度ECharts团队做可视化的相关工作。博客非常有特点，博文质量很高，而且GITHUB的Follower高达4k|\n|[DIYgod](https://www.anotherhome.net/)|15年毕业的前端工程师，非常二次元，博客也很另类，个人能力也是很强的，喜欢玩GITHUB很棒，也是掘金的联合小编|\n|[龙哥盟](http://flygon.net/)|16年毕业于上交，项目经验很丰富，而且非常喜欢搞各种教程，GITHUB的Follower也很多|\n|[闵聪](https://congm.in/)|17年毕业于重邮，项目和实习经验都很丰富，现在似乎去了鹅厂|\n|[byvoid](https://www.byvoid.com/)|牛x的大佬，搞NOIP进的清华，能力超强，奇闻逸事网上流传了很多，最有名的大概就是报阿里星时候的评价表。。。|\n|[谢益辉](https://yihui.name/)|在美帝工作的经济学PhD,双语博客从05年更到现在，文笔也牛的不行，现在在RStudio做软件工程师|\n|[MartinRGB](http://www.martinrgb.com/)|13年西电毕业的交互设计师以及GUI设计师，看了眼博客，没啥说的，不愧是设计师。。。|\n|[魏楚阳](http://brianway.github.io/)|18年毕业的华科研究生，webporter的开发者，爬虫和数据分析的高端玩家，BAT随便进。。。|\n|[VoidKing](http://www.voidking.com/)|16级东北师大的软件工程硕士研究生，是个很勤奋的博主，有梦想有想法。|\n|[颜开](http://www.yankay.com/)|对Java以及分布式数据库等有着非常深厚的积淀，现在任职于EMC，可惜的是博客不怎么更了|\n|[李钊](https://livc.io/)|东北大学14级同届本科，能力很强，现在百度深度学习实验室。|\n|[马壮](http://mazhuang.org/)|努力高产的全栈工程师|","source":"social/index.md","raw":"---\ntitle: 我的博客圈\n---\n\n> 这些是我在刷博客圈的时候发现的大犇们，有的技术超群，有的思维活跃，有的生活优雅，而且还都在努力的进步。都是我十分羡慕的dalao。\n\n|人物|简介|\n|-|-|\n|[纯洁的微笑](http://www.ityouknow.com)|资深码农博主，对Spring框架的总结非常不错，现在在一家互联网金融公司做技术经理兼技术负责人|\n|[Raysmond](http://raysmond.com/)|复旦的计算机研究生，现在在北京工作，生活很精彩，工程能力也非常强，看到他在与我同龄时写的一些代码，非常佩服|\n|[Yikun](http://yikun.github.io/)|西电毕业的通信领域研究生，去年好像去了菊厂，手绘很棒，生活也很精彩，也是个技术牛人|\n|[酷壳](http://coolshell.cn/)|耗子叔，业内知名博主，每一篇博文都是经典，15年开发经验的老码农，曾在Amazon，阿里等处做过资深专家|\n|[王之琳](https://willin.wang/)|12年本科毕业前端交互工程师，能力很强，简历很炫，写的项目非常多，也特别喜欢逛各种论坛|\n|[litten](http://litten.me/)|毕业于华科的前端工程师，非常文青，我这个博客主题就是他写的，现在鹅厂工作|\n|[Oilbeater](http://oilbeater.com/)|北大毕业的研究生，曾在阿里任职，现在灵雀云搞Docker，挺有想法的人|\n|[羡辙](http://zhangwenli.com/)|毕业于上交的研究生，现在是一个非常出色的前端工程师，目前在百度ECharts团队做可视化的相关工作。博客非常有特点，博文质量很高，而且GITHUB的Follower高达4k|\n|[DIYgod](https://www.anotherhome.net/)|15年毕业的前端工程师，非常二次元，博客也很另类，个人能力也是很强的，喜欢玩GITHUB很棒，也是掘金的联合小编|\n|[龙哥盟](http://flygon.net/)|16年毕业于上交，项目经验很丰富，而且非常喜欢搞各种教程，GITHUB的Follower也很多|\n|[闵聪](https://congm.in/)|17年毕业于重邮，项目和实习经验都很丰富，现在似乎去了鹅厂|\n|[byvoid](https://www.byvoid.com/)|牛x的大佬，搞NOIP进的清华，能力超强，奇闻逸事网上流传了很多，最有名的大概就是报阿里星时候的评价表。。。|\n|[谢益辉](https://yihui.name/)|在美帝工作的经济学PhD,双语博客从05年更到现在，文笔也牛的不行，现在在RStudio做软件工程师|\n|[MartinRGB](http://www.martinrgb.com/)|13年西电毕业的交互设计师以及GUI设计师，看了眼博客，没啥说的，不愧是设计师。。。|\n|[魏楚阳](http://brianway.github.io/)|18年毕业的华科研究生，webporter的开发者，爬虫和数据分析的高端玩家，BAT随便进。。。|\n|[VoidKing](http://www.voidking.com/)|16级东北师大的软件工程硕士研究生，是个很勤奋的博主，有梦想有想法。|\n|[颜开](http://www.yankay.com/)|对Java以及分布式数据库等有着非常深厚的积淀，现在任职于EMC，可惜的是博客不怎么更了|\n|[李钊](https://livc.io/)|东北大学14级同届本科，能力很强，现在百度深度学习实验室。|\n|[马壮](http://mazhuang.org/)|努力高产的全栈工程师|","date":"2017-12-29T13:36:41.605Z","updated":"2017-12-28T14:51:32.449Z","path":"social/index.html","comments":1,"layout":"page","_id":"cjbz6hd4h000nosmmvkanprxs","content":"<blockquote>\n<p>这些是我在刷博客圈的时候发现的大犇们，有的技术超群，有的思维活跃，有的生活优雅，而且还都在努力的进步。都是我十分羡慕的dalao。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>人物</th>\n<th>简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://www.ityouknow.com\" target=\"_blank\" rel=\"external\">纯洁的微笑</a></td>\n<td>资深码农博主，对Spring框架的总结非常不错，现在在一家互联网金融公司做技术经理兼技术负责人</td>\n</tr>\n<tr>\n<td><a href=\"http://raysmond.com/\" target=\"_blank\" rel=\"external\">Raysmond</a></td>\n<td>复旦的计算机研究生，现在在北京工作，生活很精彩，工程能力也非常强，看到他在与我同龄时写的一些代码，非常佩服</td>\n</tr>\n<tr>\n<td><a href=\"http://yikun.github.io/\" target=\"_blank\" rel=\"external\">Yikun</a></td>\n<td>西电毕业的通信领域研究生，去年好像去了菊厂，手绘很棒，生活也很精彩，也是个技术牛人</td>\n</tr>\n<tr>\n<td><a href=\"http://coolshell.cn/\" target=\"_blank\" rel=\"external\">酷壳</a></td>\n<td>耗子叔，业内知名博主，每一篇博文都是经典，15年开发经验的老码农，曾在Amazon，阿里等处做过资深专家</td>\n</tr>\n<tr>\n<td><a href=\"https://willin.wang/\" target=\"_blank\" rel=\"external\">王之琳</a></td>\n<td>12年本科毕业前端交互工程师，能力很强，简历很炫，写的项目非常多，也特别喜欢逛各种论坛</td>\n</tr>\n<tr>\n<td><a href=\"http://litten.me/\" target=\"_blank\" rel=\"external\">litten</a></td>\n<td>毕业于华科的前端工程师，非常文青，我这个博客主题就是他写的，现在鹅厂工作</td>\n</tr>\n<tr>\n<td><a href=\"http://oilbeater.com/\" target=\"_blank\" rel=\"external\">Oilbeater</a></td>\n<td>北大毕业的研究生，曾在阿里任职，现在灵雀云搞Docker，挺有想法的人</td>\n</tr>\n<tr>\n<td><a href=\"http://zhangwenli.com/\" target=\"_blank\" rel=\"external\">羡辙</a></td>\n<td>毕业于上交的研究生，现在是一个非常出色的前端工程师，目前在百度ECharts团队做可视化的相关工作。博客非常有特点，博文质量很高，而且GITHUB的Follower高达4k</td>\n</tr>\n<tr>\n<td><a href=\"https://www.anotherhome.net/\" target=\"_blank\" rel=\"external\">DIYgod</a></td>\n<td>15年毕业的前端工程师，非常二次元，博客也很另类，个人能力也是很强的，喜欢玩GITHUB很棒，也是掘金的联合小编</td>\n</tr>\n<tr>\n<td><a href=\"http://flygon.net/\" target=\"_blank\" rel=\"external\">龙哥盟</a></td>\n<td>16年毕业于上交，项目经验很丰富，而且非常喜欢搞各种教程，GITHUB的Follower也很多</td>\n</tr>\n<tr>\n<td><a href=\"https://congm.in/\" target=\"_blank\" rel=\"external\">闵聪</a></td>\n<td>17年毕业于重邮，项目和实习经验都很丰富，现在似乎去了鹅厂</td>\n</tr>\n<tr>\n<td><a href=\"https://www.byvoid.com/\" target=\"_blank\" rel=\"external\">byvoid</a></td>\n<td>牛x的大佬，搞NOIP进的清华，能力超强，奇闻逸事网上流传了很多，最有名的大概就是报阿里星时候的评价表。。。</td>\n</tr>\n<tr>\n<td><a href=\"https://yihui.name/\" target=\"_blank\" rel=\"external\">谢益辉</a></td>\n<td>在美帝工作的经济学PhD,双语博客从05年更到现在，文笔也牛的不行，现在在RStudio做软件工程师</td>\n</tr>\n<tr>\n<td><a href=\"http://www.martinrgb.com/\" target=\"_blank\" rel=\"external\">MartinRGB</a></td>\n<td>13年西电毕业的交互设计师以及GUI设计师，看了眼博客，没啥说的，不愧是设计师。。。</td>\n</tr>\n<tr>\n<td><a href=\"http://brianway.github.io/\" target=\"_blank\" rel=\"external\">魏楚阳</a></td>\n<td>18年毕业的华科研究生，webporter的开发者，爬虫和数据分析的高端玩家，BAT随便进。。。</td>\n</tr>\n<tr>\n<td><a href=\"http://www.voidking.com/\" target=\"_blank\" rel=\"external\">VoidKing</a></td>\n<td>16级东北师大的软件工程硕士研究生，是个很勤奋的博主，有梦想有想法。</td>\n</tr>\n<tr>\n<td><a href=\"http://www.yankay.com/\" target=\"_blank\" rel=\"external\">颜开</a></td>\n<td>对Java以及分布式数据库等有着非常深厚的积淀，现在任职于EMC，可惜的是博客不怎么更了</td>\n</tr>\n<tr>\n<td><a href=\"https://livc.io/\" target=\"_blank\" rel=\"external\">李钊</a></td>\n<td>东北大学14级同届本科，能力很强，现在百度深度学习实验室。</td>\n</tr>\n<tr>\n<td><a href=\"http://mazhuang.org/\" target=\"_blank\" rel=\"external\">马壮</a></td>\n<td>努力高产的全栈工程师</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>这些是我在刷博客圈的时候发现的大犇们，有的技术超群，有的思维活跃，有的生活优雅，而且还都在努力的进步。都是我十分羡慕的dalao。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>人物</th>\n<th>简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://www.ityouknow.com\" target=\"_blank\" rel=\"external\">纯洁的微笑</a></td>\n<td>资深码农博主，对Spring框架的总结非常不错，现在在一家互联网金融公司做技术经理兼技术负责人</td>\n</tr>\n<tr>\n<td><a href=\"http://raysmond.com/\" target=\"_blank\" rel=\"external\">Raysmond</a></td>\n<td>复旦的计算机研究生，现在在北京工作，生活很精彩，工程能力也非常强，看到他在与我同龄时写的一些代码，非常佩服</td>\n</tr>\n<tr>\n<td><a href=\"http://yikun.github.io/\" target=\"_blank\" rel=\"external\">Yikun</a></td>\n<td>西电毕业的通信领域研究生，去年好像去了菊厂，手绘很棒，生活也很精彩，也是个技术牛人</td>\n</tr>\n<tr>\n<td><a href=\"http://coolshell.cn/\" target=\"_blank\" rel=\"external\">酷壳</a></td>\n<td>耗子叔，业内知名博主，每一篇博文都是经典，15年开发经验的老码农，曾在Amazon，阿里等处做过资深专家</td>\n</tr>\n<tr>\n<td><a href=\"https://willin.wang/\" target=\"_blank\" rel=\"external\">王之琳</a></td>\n<td>12年本科毕业前端交互工程师，能力很强，简历很炫，写的项目非常多，也特别喜欢逛各种论坛</td>\n</tr>\n<tr>\n<td><a href=\"http://litten.me/\" target=\"_blank\" rel=\"external\">litten</a></td>\n<td>毕业于华科的前端工程师，非常文青，我这个博客主题就是他写的，现在鹅厂工作</td>\n</tr>\n<tr>\n<td><a href=\"http://oilbeater.com/\" target=\"_blank\" rel=\"external\">Oilbeater</a></td>\n<td>北大毕业的研究生，曾在阿里任职，现在灵雀云搞Docker，挺有想法的人</td>\n</tr>\n<tr>\n<td><a href=\"http://zhangwenli.com/\" target=\"_blank\" rel=\"external\">羡辙</a></td>\n<td>毕业于上交的研究生，现在是一个非常出色的前端工程师，目前在百度ECharts团队做可视化的相关工作。博客非常有特点，博文质量很高，而且GITHUB的Follower高达4k</td>\n</tr>\n<tr>\n<td><a href=\"https://www.anotherhome.net/\" target=\"_blank\" rel=\"external\">DIYgod</a></td>\n<td>15年毕业的前端工程师，非常二次元，博客也很另类，个人能力也是很强的，喜欢玩GITHUB很棒，也是掘金的联合小编</td>\n</tr>\n<tr>\n<td><a href=\"http://flygon.net/\" target=\"_blank\" rel=\"external\">龙哥盟</a></td>\n<td>16年毕业于上交，项目经验很丰富，而且非常喜欢搞各种教程，GITHUB的Follower也很多</td>\n</tr>\n<tr>\n<td><a href=\"https://congm.in/\" target=\"_blank\" rel=\"external\">闵聪</a></td>\n<td>17年毕业于重邮，项目和实习经验都很丰富，现在似乎去了鹅厂</td>\n</tr>\n<tr>\n<td><a href=\"https://www.byvoid.com/\" target=\"_blank\" rel=\"external\">byvoid</a></td>\n<td>牛x的大佬，搞NOIP进的清华，能力超强，奇闻逸事网上流传了很多，最有名的大概就是报阿里星时候的评价表。。。</td>\n</tr>\n<tr>\n<td><a href=\"https://yihui.name/\" target=\"_blank\" rel=\"external\">谢益辉</a></td>\n<td>在美帝工作的经济学PhD,双语博客从05年更到现在，文笔也牛的不行，现在在RStudio做软件工程师</td>\n</tr>\n<tr>\n<td><a href=\"http://www.martinrgb.com/\" target=\"_blank\" rel=\"external\">MartinRGB</a></td>\n<td>13年西电毕业的交互设计师以及GUI设计师，看了眼博客，没啥说的，不愧是设计师。。。</td>\n</tr>\n<tr>\n<td><a href=\"http://brianway.github.io/\" target=\"_blank\" rel=\"external\">魏楚阳</a></td>\n<td>18年毕业的华科研究生，webporter的开发者，爬虫和数据分析的高端玩家，BAT随便进。。。</td>\n</tr>\n<tr>\n<td><a href=\"http://www.voidking.com/\" target=\"_blank\" rel=\"external\">VoidKing</a></td>\n<td>16级东北师大的软件工程硕士研究生，是个很勤奋的博主，有梦想有想法。</td>\n</tr>\n<tr>\n<td><a href=\"http://www.yankay.com/\" target=\"_blank\" rel=\"external\">颜开</a></td>\n<td>对Java以及分布式数据库等有着非常深厚的积淀，现在任职于EMC，可惜的是博客不怎么更了</td>\n</tr>\n<tr>\n<td><a href=\"https://livc.io/\" target=\"_blank\" rel=\"external\">李钊</a></td>\n<td>东北大学14级同届本科，能力很强，现在百度深度学习实验室。</td>\n</tr>\n<tr>\n<td><a href=\"http://mazhuang.org/\" target=\"_blank\" rel=\"external\">马壮</a></td>\n<td>努力高产的全栈工程师</td>\n</tr>\n</tbody>\n</table>\n"}],"Post":[{"title":"PHP中array_slice()的用法","date":"2018-01-02T13:25:19.000Z","_content":"<img src=\"http://otbcgjn6c.bkt.clouddn.com/timgadas.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### 理解\n\n1.个人理解：获取一个数组中任意相邻的几个元素\n例如1：获取$list数组前两位数组元素\n\n```\n$list = array(\n\t\"a\" => \"你\",\n\t\"b\" => \"好\",\n\t\"c\" => \"啊\",\n\t\"d\" => \"我\",\n\t\"e\" => \"是\",\n\t\"f\" => \"小\",\n\t\"g\" => \"明\",\n\t\"h\" => \"山东\",\n\t\"i\" => \"士大夫\",\n\t\"j\" => \"阿斯蒂芬\",\n\t\"k\" => \"士大夫山东\",\n\t\"l\" => \"发过火\",\n\t\"m\" => \"更好\",\n\t\"n\" => \"大公会\",\n\t\"o\" => \"sad\",\n\t\"p\" => \"国家\",\n\t\"q\" => \"任天野\"\n);\n$slicelist = array_slice($list,0,2);\nprint_r($slicelist);\n```\n\n打印结果：\n```\nArray\n(\n    [a] => 你\n    [b] => 好\n)\n\n```\n例如2：获取$list数组第三位和第四位元素\n\n```\n$slicelist = array_slice($list,2,2);\nprint_r($slicelist);\n```\n\n打印结果:\n```\nArray\n(\n    [c] => 啊\n    [d] => 我\n)\n```\n例如3：获取$list数组第五位和第六位元素\n```\n$slicelist = array_slice($list,4,2);\nprint_r($slicelist);\n```\n打印结果:\n```\nArray\n(\n    [e] => 是\n    [f] => 小\n)\n\n```\n\n整体理解：\n截取数组的相邻的几位元素，\n第5位和第6位，array_slice($list,5-1,6-5+1)；\n第10位和第12位，array_slice($list,10-1,12-10+1)；\n第10位和第15位，array_slice($list,10-1,15-10+1)；\n····\n···\n··","source":"_posts/array_slice的用法.md","raw":"---\ntitle: PHP中array_slice()的用法\ndate: 2018-1-2 21:25:19\ntags:\n - GIT\n---\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/timgadas.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### 理解\n\n1.个人理解：获取一个数组中任意相邻的几个元素\n例如1：获取$list数组前两位数组元素\n\n```\n$list = array(\n\t\"a\" => \"你\",\n\t\"b\" => \"好\",\n\t\"c\" => \"啊\",\n\t\"d\" => \"我\",\n\t\"e\" => \"是\",\n\t\"f\" => \"小\",\n\t\"g\" => \"明\",\n\t\"h\" => \"山东\",\n\t\"i\" => \"士大夫\",\n\t\"j\" => \"阿斯蒂芬\",\n\t\"k\" => \"士大夫山东\",\n\t\"l\" => \"发过火\",\n\t\"m\" => \"更好\",\n\t\"n\" => \"大公会\",\n\t\"o\" => \"sad\",\n\t\"p\" => \"国家\",\n\t\"q\" => \"任天野\"\n);\n$slicelist = array_slice($list,0,2);\nprint_r($slicelist);\n```\n\n打印结果：\n```\nArray\n(\n    [a] => 你\n    [b] => 好\n)\n\n```\n例如2：获取$list数组第三位和第四位元素\n\n```\n$slicelist = array_slice($list,2,2);\nprint_r($slicelist);\n```\n\n打印结果:\n```\nArray\n(\n    [c] => 啊\n    [d] => 我\n)\n```\n例如3：获取$list数组第五位和第六位元素\n```\n$slicelist = array_slice($list,4,2);\nprint_r($slicelist);\n```\n打印结果:\n```\nArray\n(\n    [e] => 是\n    [f] => 小\n)\n\n```\n\n整体理解：\n截取数组的相邻的几位元素，\n第5位和第6位，array_slice($list,5-1,6-5+1)；\n第10位和第12位，array_slice($list,10-1,12-10+1)；\n第10位和第15位，array_slice($list,10-1,15-10+1)；\n····\n···\n··","slug":"array_slice的用法","published":1,"updated":"2018-01-02T14:29:06.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hcww0002osmmgrctmy0a","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timgadas.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"理解\"><a href=\"#理解\" class=\"headerlink\" title=\"理解\"></a>理解</h3><p>1.个人理解：获取一个数组中任意相邻的几个元素<br>例如1：获取$list数组前两位数组元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">$list = array(</div><div class=\"line\">\t&quot;a&quot; =&gt; &quot;你&quot;,</div><div class=\"line\">\t&quot;b&quot; =&gt; &quot;好&quot;,</div><div class=\"line\">\t&quot;c&quot; =&gt; &quot;啊&quot;,</div><div class=\"line\">\t&quot;d&quot; =&gt; &quot;我&quot;,</div><div class=\"line\">\t&quot;e&quot; =&gt; &quot;是&quot;,</div><div class=\"line\">\t&quot;f&quot; =&gt; &quot;小&quot;,</div><div class=\"line\">\t&quot;g&quot; =&gt; &quot;明&quot;,</div><div class=\"line\">\t&quot;h&quot; =&gt; &quot;山东&quot;,</div><div class=\"line\">\t&quot;i&quot; =&gt; &quot;士大夫&quot;,</div><div class=\"line\">\t&quot;j&quot; =&gt; &quot;阿斯蒂芬&quot;,</div><div class=\"line\">\t&quot;k&quot; =&gt; &quot;士大夫山东&quot;,</div><div class=\"line\">\t&quot;l&quot; =&gt; &quot;发过火&quot;,</div><div class=\"line\">\t&quot;m&quot; =&gt; &quot;更好&quot;,</div><div class=\"line\">\t&quot;n&quot; =&gt; &quot;大公会&quot;,</div><div class=\"line\">\t&quot;o&quot; =&gt; &quot;sad&quot;,</div><div class=\"line\">\t&quot;p&quot; =&gt; &quot;国家&quot;,</div><div class=\"line\">\t&quot;q&quot; =&gt; &quot;任天野&quot;</div><div class=\"line\">);</div><div class=\"line\">$slicelist = array_slice($list,0,2);</div><div class=\"line\">print_r($slicelist);</div></pre></td></tr></table></figure>\n<p>打印结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Array</div><div class=\"line\">(</div><div class=\"line\">    [a] =&gt; 你</div><div class=\"line\">    [b] =&gt; 好</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>例如2：获取$list数组第三位和第四位元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$slicelist = array_slice($list,2,2);</div><div class=\"line\">print_r($slicelist);</div></pre></td></tr></table></figure>\n<p>打印结果:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Array</div><div class=\"line\">(</div><div class=\"line\">    [c] =&gt; 啊</div><div class=\"line\">    [d] =&gt; 我</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>例如3：获取$list数组第五位和第六位元素<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$slicelist = array_slice($list,4,2);</div><div class=\"line\">print_r($slicelist);</div></pre></td></tr></table></figure></p>\n<p>打印结果:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Array</div><div class=\"line\">(</div><div class=\"line\">    [e] =&gt; 是</div><div class=\"line\">    [f] =&gt; 小</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>整体理解：<br>截取数组的相邻的几位元素，<br>第5位和第6位，array_slice($list,5-1,6-5+1)；<br>第10位和第12位，array_slice($list,10-1,12-10+1)；<br>第10位和第15位，array_slice($list,10-1,15-10+1)；<br>····<br>···<br>··</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timgadas.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"理解\"><a href=\"#理解\" class=\"headerlink\" title=\"理解\"></a>理解</h3><p>1.个人理解：获取一个数组中任意相邻的几个元素<br>例如1：获取$list数组前两位数组元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">$list = array(</div><div class=\"line\">\t&quot;a&quot; =&gt; &quot;你&quot;,</div><div class=\"line\">\t&quot;b&quot; =&gt; &quot;好&quot;,</div><div class=\"line\">\t&quot;c&quot; =&gt; &quot;啊&quot;,</div><div class=\"line\">\t&quot;d&quot; =&gt; &quot;我&quot;,</div><div class=\"line\">\t&quot;e&quot; =&gt; &quot;是&quot;,</div><div class=\"line\">\t&quot;f&quot; =&gt; &quot;小&quot;,</div><div class=\"line\">\t&quot;g&quot; =&gt; &quot;明&quot;,</div><div class=\"line\">\t&quot;h&quot; =&gt; &quot;山东&quot;,</div><div class=\"line\">\t&quot;i&quot; =&gt; &quot;士大夫&quot;,</div><div class=\"line\">\t&quot;j&quot; =&gt; &quot;阿斯蒂芬&quot;,</div><div class=\"line\">\t&quot;k&quot; =&gt; &quot;士大夫山东&quot;,</div><div class=\"line\">\t&quot;l&quot; =&gt; &quot;发过火&quot;,</div><div class=\"line\">\t&quot;m&quot; =&gt; &quot;更好&quot;,</div><div class=\"line\">\t&quot;n&quot; =&gt; &quot;大公会&quot;,</div><div class=\"line\">\t&quot;o&quot; =&gt; &quot;sad&quot;,</div><div class=\"line\">\t&quot;p&quot; =&gt; &quot;国家&quot;,</div><div class=\"line\">\t&quot;q&quot; =&gt; &quot;任天野&quot;</div><div class=\"line\">);</div><div class=\"line\">$slicelist = array_slice($list,0,2);</div><div class=\"line\">print_r($slicelist);</div></pre></td></tr></table></figure>\n<p>打印结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Array</div><div class=\"line\">(</div><div class=\"line\">    [a] =&gt; 你</div><div class=\"line\">    [b] =&gt; 好</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>例如2：获取$list数组第三位和第四位元素</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$slicelist = array_slice($list,2,2);</div><div class=\"line\">print_r($slicelist);</div></pre></td></tr></table></figure>\n<p>打印结果:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Array</div><div class=\"line\">(</div><div class=\"line\">    [c] =&gt; 啊</div><div class=\"line\">    [d] =&gt; 我</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>例如3：获取$list数组第五位和第六位元素<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$slicelist = array_slice($list,4,2);</div><div class=\"line\">print_r($slicelist);</div></pre></td></tr></table></figure></p>\n<p>打印结果:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Array</div><div class=\"line\">(</div><div class=\"line\">    [e] =&gt; 是</div><div class=\"line\">    [f] =&gt; 小</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>整体理解：<br>截取数组的相邻的几位元素，<br>第5位和第6位，array_slice($list,5-1,6-5+1)；<br>第10位和第12位，array_slice($list,10-1,12-10+1)；<br>第10位和第15位，array_slice($list,10-1,15-10+1)；<br>····<br>···<br>··</p>\n"},{"title":"find()的用法","date":"2017-07-20T07:17:01.000Z","_content":"<img src=\"http://otbcgjn6c.bkt.clouddn.com/dab590448925ab0dc729a38bbfc2599cafb3dbb2157db-5AQiSw_fw658.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### find():\n<font color=\"#F44336\">find() 方法返回被选元素的后代元素,一直找到最后一个后台元素(也就是找到所有find(\"xxx\")的元素).</font>\n\n例如我代码里面有篇文章,$soft['content']代表文章内容(包括文字和图片):\n```\n<div class=\"col-xs-12 mt3\" id=\"content_product\" >\n\t<?=$soft['content'] ?>\n</div>\n```\n在页面的上所显示内容:\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-25_145115.jpg)\n以上内容里面的图片很大而且不规律.然后通过浏览器F12调试可以看到有<font color=\"#F44336\">p</font>标签和<font color=\"#F44336\">img</font>标签;这里的<font color=\"#F44336\">img</font>图片是没有经过处理的所以图片是原比例展示出来的,在手机页面端是很难看的;\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-25_145536.jpg)\n\n### 利用jQ find()方法解决此问题;也就是把内容里面的所有图片通过遍历时图片自适应\n```\n//将图片自适应\n$(function(){\n\t$(\"#content_product\").find(\"img\").each(function(i,j){\n\t\t$(this).attr(\"width\", \"100%\");\n\t});\n});\n```\n### 现在再看页面显示效果\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-25_144907.jpg)\n","source":"_posts/find().md","raw":"---\ntitle: find()的用法\ndate: 2017-7-20 15:17:01\ntags:\n - jQery\n---\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/dab590448925ab0dc729a38bbfc2599cafb3dbb2157db-5AQiSw_fw658.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### find():\n<font color=\"#F44336\">find() 方法返回被选元素的后代元素,一直找到最后一个后台元素(也就是找到所有find(\"xxx\")的元素).</font>\n\n例如我代码里面有篇文章,$soft['content']代表文章内容(包括文字和图片):\n```\n<div class=\"col-xs-12 mt3\" id=\"content_product\" >\n\t<?=$soft['content'] ?>\n</div>\n```\n在页面的上所显示内容:\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-25_145115.jpg)\n以上内容里面的图片很大而且不规律.然后通过浏览器F12调试可以看到有<font color=\"#F44336\">p</font>标签和<font color=\"#F44336\">img</font>标签;这里的<font color=\"#F44336\">img</font>图片是没有经过处理的所以图片是原比例展示出来的,在手机页面端是很难看的;\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-25_145536.jpg)\n\n### 利用jQ find()方法解决此问题;也就是把内容里面的所有图片通过遍历时图片自适应\n```\n//将图片自适应\n$(function(){\n\t$(\"#content_product\").find(\"img\").each(function(i,j){\n\t\t$(this).attr(\"width\", \"100%\");\n\t});\n});\n```\n### 现在再看页面显示效果\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-25_144907.jpg)\n","slug":"find()","published":1,"updated":"2017-12-29T12:51:03.951Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd360006osmmcc9ayw15","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/dab590448925ab0dc729a38bbfc2599cafb3dbb2157db-5AQiSw_fw658.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find():\"></a>find():</h3><font color=\"#F44336\">find() 方法返回被选元素的后代元素,一直找到最后一个后台元素(也就是找到所有find(“xxx”)的元素).</font>\n\n<p>例如我代码里面有篇文章,$soft[‘content’]代表文章内容(包括文字和图片):<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;col-xs-12 mt3&quot; id=&quot;content_product&quot; &gt;</div><div class=\"line\">\t&lt;?=$soft[&apos;content&apos;] ?&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<p>在页面的上所显示内容:<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-25_145115.jpg\" alt=\"\"><br>以上内容里面的图片很大而且不规律.然后通过浏览器F12调试可以看到有<font color=\"#F44336\">p</font>标签和<font color=\"#F44336\">img</font>标签;这里的<font color=\"#F44336\">img</font>图片是没有经过处理的所以图片是原比例展示出来的,在手机页面端是很难看的;<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-25_145536.jpg\" alt=\"\"></p>\n<h3 id=\"利用jQ-find-方法解决此问题-也就是把内容里面的所有图片通过遍历时图片自适应\"><a href=\"#利用jQ-find-方法解决此问题-也就是把内容里面的所有图片通过遍历时图片自适应\" class=\"headerlink\" title=\"利用jQ find()方法解决此问题;也就是把内容里面的所有图片通过遍历时图片自适应\"></a>利用jQ find()方法解决此问题;也就是把内容里面的所有图片通过遍历时图片自适应</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">//将图片自适应</div><div class=\"line\">$(function()&#123;</div><div class=\"line\">\t$(&quot;#content_product&quot;).find(&quot;img&quot;).each(function(i,j)&#123;</div><div class=\"line\">\t\t$(this).attr(&quot;width&quot;, &quot;100%&quot;);</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"现在再看页面显示效果\"><a href=\"#现在再看页面显示效果\" class=\"headerlink\" title=\"现在再看页面显示效果\"></a>现在再看页面显示效果</h3><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-25_144907.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/dab590448925ab0dc729a38bbfc2599cafb3dbb2157db-5AQiSw_fw658.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find():\"></a>find():</h3><font color=\"#F44336\">find() 方法返回被选元素的后代元素,一直找到最后一个后台元素(也就是找到所有find(“xxx”)的元素).</font>\n\n<p>例如我代码里面有篇文章,$soft[‘content’]代表文章内容(包括文字和图片):<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;col-xs-12 mt3&quot; id=&quot;content_product&quot; &gt;</div><div class=\"line\">\t&lt;?=$soft[&apos;content&apos;] ?&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<p>在页面的上所显示内容:<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-25_145115.jpg\" alt=\"\"><br>以上内容里面的图片很大而且不规律.然后通过浏览器F12调试可以看到有<font color=\"#F44336\">p</font>标签和<font color=\"#F44336\">img</font>标签;这里的<font color=\"#F44336\">img</font>图片是没有经过处理的所以图片是原比例展示出来的,在手机页面端是很难看的;<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-25_145536.jpg\" alt=\"\"></p>\n<h3 id=\"利用jQ-find-方法解决此问题-也就是把内容里面的所有图片通过遍历时图片自适应\"><a href=\"#利用jQ-find-方法解决此问题-也就是把内容里面的所有图片通过遍历时图片自适应\" class=\"headerlink\" title=\"利用jQ find()方法解决此问题;也就是把内容里面的所有图片通过遍历时图片自适应\"></a>利用jQ find()方法解决此问题;也就是把内容里面的所有图片通过遍历时图片自适应</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">//将图片自适应</div><div class=\"line\">$(function()&#123;</div><div class=\"line\">\t$(&quot;#content_product&quot;).find(&quot;img&quot;).each(function(i,j)&#123;</div><div class=\"line\">\t\t$(this).attr(&quot;width&quot;, &quot;100%&quot;);</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"现在再看页面显示效果\"><a href=\"#现在再看页面显示效果\" class=\"headerlink\" title=\"现在再看页面显示效果\"></a>现在再看页面显示效果</h3><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-25_144907.jpg\" alt=\"\"></p>\n"},{"title":"Git常用命令","date":"2017-12-29T14:10:14.000Z","_content":"<img src=\"http://otbcgjn6c.bkt.clouddn.com/u=1103434515,3403775097&fm=27&gp=0.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### git常用命令\n\n1.从github/gitlab/码云克隆项目\n```\ngit clone 链接地址\n\n```\n2.本地创建git版本库\n```\ngit init\n#初始化本地仓库\n\n```\n3.如何将本地代码上传到github 请看：[详细步骤](http://www.yybblog.cn/2017/07/31/%E5%A6%82%E4%BD%95%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0GitHub/)\n\n4.提交本地代码到缓存区\n```\ngit add .\n\ngit commit -m \"注释\"\n\n```\n5.推动到远端\n```\ngit push origin master\n```\n6.创建本地分支\n```\ngit branch 分支名称\n```\n\n7.查看分支\n```\n#本地分支\ngit branch\n#远端分支\ngit branch -r\n\n```\n8.切换分支\n```\ngit checkout 分支名字\n\n```\n9.git版本回退\n```\ngit reset --hard HEAD\n# 将当前版本重置为HEAD（通常用于清空缓存区,或merge失败回退）\n\ngit reset --hard HEAD^   # 回退上一个版本\ngit reset --hard HEAD^^  # 回退上两个版本\ngit reset --hard HEAD~n  # 回退上n个版本\n\ngit reset --hard <commitid>\n# 回退到指定版本，commitid根据log获取\n\n```\n### svn 和 git 相比\n个人更喜欢用github","source":"_posts/git常用命令.md","raw":"---\ntitle: Git常用命令\ndate: 2017-12-29 22:10:14\ntags:\n - GIT\n---\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/u=1103434515,3403775097&fm=27&gp=0.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### git常用命令\n\n1.从github/gitlab/码云克隆项目\n```\ngit clone 链接地址\n\n```\n2.本地创建git版本库\n```\ngit init\n#初始化本地仓库\n\n```\n3.如何将本地代码上传到github 请看：[详细步骤](http://www.yybblog.cn/2017/07/31/%E5%A6%82%E4%BD%95%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0GitHub/)\n\n4.提交本地代码到缓存区\n```\ngit add .\n\ngit commit -m \"注释\"\n\n```\n5.推动到远端\n```\ngit push origin master\n```\n6.创建本地分支\n```\ngit branch 分支名称\n```\n\n7.查看分支\n```\n#本地分支\ngit branch\n#远端分支\ngit branch -r\n\n```\n8.切换分支\n```\ngit checkout 分支名字\n\n```\n9.git版本回退\n```\ngit reset --hard HEAD\n# 将当前版本重置为HEAD（通常用于清空缓存区,或merge失败回退）\n\ngit reset --hard HEAD^   # 回退上一个版本\ngit reset --hard HEAD^^  # 回退上两个版本\ngit reset --hard HEAD~n  # 回退上n个版本\n\ngit reset --hard <commitid>\n# 回退到指定版本，commitid根据log获取\n\n```\n### svn 和 git 相比\n个人更喜欢用github","slug":"git常用命令","published":1,"updated":"2017-12-29T15:07:05.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd3e0008osmmw99b0k16","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/u=1103434515,3403775097&fm=27&gp=0.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"git常用命令\"><a href=\"#git常用命令\" class=\"headerlink\" title=\"git常用命令\"></a>git常用命令</h3><p>1.从github/gitlab/码云克隆项目<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone 链接地址</div></pre></td></tr></table></figure></p>\n<p>2.本地创建git版本库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div><div class=\"line\">#初始化本地仓库</div></pre></td></tr></table></figure></p>\n<p>3.如何将本地代码上传到github 请看：<a href=\"http://www.yybblog.cn/2017/07/31/%E5%A6%82%E4%BD%95%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0GitHub/\">详细步骤</a></p>\n<p>4.提交本地代码到缓存区<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div><div class=\"line\"></div><div class=\"line\">git commit -m &quot;注释&quot;</div></pre></td></tr></table></figure></p>\n<p>5.推动到远端<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master</div></pre></td></tr></table></figure></p>\n<p>6.创建本地分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch 分支名称</div></pre></td></tr></table></figure></p>\n<p>7.查看分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#本地分支</div><div class=\"line\">git branch</div><div class=\"line\">#远端分支</div><div class=\"line\">git branch -r</div></pre></td></tr></table></figure></p>\n<p>8.切换分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout 分支名字</div></pre></td></tr></table></figure></p>\n<p>9.git版本回退<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset --hard HEAD</div><div class=\"line\"># 将当前版本重置为HEAD（通常用于清空缓存区,或merge失败回退）</div><div class=\"line\"></div><div class=\"line\">git reset --hard HEAD^   # 回退上一个版本</div><div class=\"line\">git reset --hard HEAD^^  # 回退上两个版本</div><div class=\"line\">git reset --hard HEAD~n  # 回退上n个版本</div><div class=\"line\"></div><div class=\"line\">git reset --hard &lt;commitid&gt;</div><div class=\"line\"># 回退到指定版本，commitid根据log获取</div></pre></td></tr></table></figure></p>\n<h3 id=\"svn-和-git-相比\"><a href=\"#svn-和-git-相比\" class=\"headerlink\" title=\"svn 和 git 相比\"></a>svn 和 git 相比</h3><p>个人更喜欢用github</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/u=1103434515,3403775097&fm=27&gp=0.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"git常用命令\"><a href=\"#git常用命令\" class=\"headerlink\" title=\"git常用命令\"></a>git常用命令</h3><p>1.从github/gitlab/码云克隆项目<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone 链接地址</div></pre></td></tr></table></figure></p>\n<p>2.本地创建git版本库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div><div class=\"line\">#初始化本地仓库</div></pre></td></tr></table></figure></p>\n<p>3.如何将本地代码上传到github 请看：<a href=\"http://www.yybblog.cn/2017/07/31/%E5%A6%82%E4%BD%95%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0GitHub/\">详细步骤</a></p>\n<p>4.提交本地代码到缓存区<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div><div class=\"line\"></div><div class=\"line\">git commit -m &quot;注释&quot;</div></pre></td></tr></table></figure></p>\n<p>5.推动到远端<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master</div></pre></td></tr></table></figure></p>\n<p>6.创建本地分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch 分支名称</div></pre></td></tr></table></figure></p>\n<p>7.查看分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#本地分支</div><div class=\"line\">git branch</div><div class=\"line\">#远端分支</div><div class=\"line\">git branch -r</div></pre></td></tr></table></figure></p>\n<p>8.切换分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout 分支名字</div></pre></td></tr></table></figure></p>\n<p>9.git版本回退<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset --hard HEAD</div><div class=\"line\"># 将当前版本重置为HEAD（通常用于清空缓存区,或merge失败回退）</div><div class=\"line\"></div><div class=\"line\">git reset --hard HEAD^   # 回退上一个版本</div><div class=\"line\">git reset --hard HEAD^^  # 回退上两个版本</div><div class=\"line\">git reset --hard HEAD~n  # 回退上n个版本</div><div class=\"line\"></div><div class=\"line\">git reset --hard &lt;commitid&gt;</div><div class=\"line\"># 回退到指定版本，commitid根据log获取</div></pre></td></tr></table></figure></p>\n<h3 id=\"svn-和-git-相比\"><a href=\"#svn-和-git-相比\" class=\"headerlink\" title=\"svn 和 git 相比\"></a>svn 和 git 相比</h3><p>个人更喜欢用github</p>\n"},{"title":"Nginx的配置","date":"2017-11-15T07:17:01.000Z","_content":"\n```\n include enable-php.conf;\n location / {\n    index  index.html index.htm index.php;                                                                                                                                                                      \n    rewrite ^/$ /index.php last;\n    rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;\n  }\n\n```\n<font color=\"red\">以上代码是重点部分</font>\n\n### 前言\n1.前段时间临近双十一在阿里云9.9买了半年服务器，想着弄个网站部署在线上。之前在nginx上部署过，不过那是别人弄的。什么事都是还要靠自己，是真理。\n2.为此写下步骤，以便下次部署直接来找教程。\n3.为了能让CI框架在nginx上跑起来。废了我两三天时间。不过还是配置好了。\n\n### 安装linux\n1.我这里用的是lnmp一键安装包 教程地址：https://lnmp.org/\n\n### 安装好之后\n1.开始部署你的web网站，如果在本地可以运行。那直接克隆到服务器上\n2.我的线上项目地址\n![](http://otbcgjn6c.bkt.clouddn.com/1510737091%281%29.jpg)\n3.当你以域名去范文访问的时候回出现以类似下错误，这是nginx禁止程序跨目录访问\n```\nWarning: require(): open_basedir restriction in effect. File(/home/wwwroot/***/bootstrap/autoload.php) is not within the allowed path(s): (/home/wwwroot/***/public/:/tmp/:/proc/) in /home/wwwroot/***/public/index.php on \n\n```\n解决办法将 /usr/local/nginx/conf/fastcgi.conf 里面的fastcgi_param PHP_ADMIN_VALUE \"open_basedir=$document_root/:/tmp/:/proc/\"; 在该行行前添加 # 或删除改行，需要重启nginx。 lnmp nginx reload\n\n4.以上弄好以后，继续访问线上ip地址。可能会出现404，特别是ci框架里面的site_url()方法和redirect()方法。\n\n### 重点介绍\n1.在server项里面：nginx引入了月一个 文件 include enable-php.conf;这个文件里面就包含了，解析php，运行php文件。我配置如下\n\n```\nlocation ~ [^/]\\.php(/|$)\n{                                                                     \n   try_files $uri =404;\n   fastcgi_pass  unix:/tmp/php-cgi.sock;\n   fastcgi_param PATH_INFO $fastcgi_path_info;\n   if ($uri ~ \"^(.+?\\.php)(/.*)$\") {\n           set $script     $1;\n           set $path_info  $2;\n       }   \n  fastcgi_split_path_info ^(.+\\.php)(.*)$;\n  fastcgi_index index.php;\n  include fastcgi.conf;\n}\n```\n在原来基础上加了这几段代码\n```\nfastcgi_param PATH_INFO $fastcgi_path_info;\n   if ($uri ~ \"^(.+?\\.php)(/.*)$\") {\n           set $script     $1;\n           set $path_info  $2;\n       }   \n  fastcgi_split_path_info ^(.+\\.php)(.*)$;\n```\n以上是enable-php.conf文件配置\n\n3.在你的框架中可能会有redirect()方法,我的一只是404错误，原因就是这个,后来在server包含中 include enable-php.conf下行添加如下代码\n```\nlocation / {\n    index  index.html index.htm index.php;                                                 \n    rewrite ^/$ /index.php last;\n    rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;\n }\n```\n4.在以ip地址访问成功访问到。\n\n5.将nginx.conf代码全部贴出\n\n```\nuser  www www;\n\nworker_processes auto;\n\nerror_log  /home/wwwlogs/nginx_error.log  crit;\n\npid        /usr/local/nginx/logs/nginx.pid;\n\n#Specifies the value for maximum file descriptors that can be opened by this process.\nworker_rlimit_nofile 51200;\n\nevents\n    {\n        use epoll;\n        worker_connections 51200;\n        multi_accept on;\n    }\n\nhttp\n    {\n        include       mime.types;\n        default_type  application/octet-stream;\n\n        server_names_hash_bucket_size 128;\n        client_header_buffer_size 32k;\n        large_client_header_buffers 4 32k;\n        client_max_body_size 50m;\n\n        sendfile   on;\n        tcp_nopush on;\n\n        keepalive_timeout 60;\n\n        tcp_nodelay on;\n\n        fastcgi_connect_timeout 300;\n        fastcgi_send_timeout 300;\n        fastcgi_read_timeout 300;\n        fastcgi_buffer_size 64k;\n        fastcgi_buffers 4 64k;\n        fastcgi_busy_buffers_size 128k;\n        fastcgi_temp_file_write_size 256k;\n\n        gzip on;\n        gzip_min_length  1k;\n        gzip_buffers     4 16k;\n        gzip_http_version 1.1;\n        gzip_comp_level 2;\n        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;\n        gzip_vary on;\n        gzip_proxied   expired no-cache no-store private auth;\n        gzip_disable   \"MSIE [1-6]\\.\";\n\n        #limit_conn_zone $binary_remote_addr zone=perip:10m;\n        ##If enable limit_conn_zone,add \"limit_conn perip 10;\" to server section.\n\n        server_tokens off;\n        access_log off;\n\nserver\n    {\n        listen 80 default_server;\n        #listen [::]:80 default_server ipv6only=on;\n        server_name 106.14.117.93;\n        index index.html index.htm index.php;\n        root /data/www/min/www; \n\n        #error_page   404   /404.html;\n\n        # Deny access to PHP files in specific directory\n        #location ~ /(wp-content|uploads|wp-includes|images)/.*\\.php$ { deny all; }\n\n       include enable-php.conf;\n       location / {\n          index  index.html index.htm index.php;\n          rewrite ^/$ /index.php last;\n          rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;\n        }\n        location /nginx_status\n        {\n            stub_status on;\n            access_log   off;\n        }\n\n        location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$\n        {\n            expires      30d;\n        }\n\n        location ~ .*\\.(js|css)?$\n        {\n            expires      12h;\n        }\n\n        location ~ /.well-known {\n            allow all;\n        }\n\n        location ~ /\\.\n        {\n            deny all;\n        }\n\n        access_log  /home/wwwlogs/access.log;\n    }\ninclude vhost/*.conf;\n}\n\n```","source":"_posts/ci框架配置nginx.md","raw":"---\ntitle: Nginx的配置\ndate: 2017-11-15 15:17:01\ntags:\n - PHP\n - Nginx\n---\n\n```\n include enable-php.conf;\n location / {\n    index  index.html index.htm index.php;                                                                                                                                                                      \n    rewrite ^/$ /index.php last;\n    rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;\n  }\n\n```\n<font color=\"red\">以上代码是重点部分</font>\n\n### 前言\n1.前段时间临近双十一在阿里云9.9买了半年服务器，想着弄个网站部署在线上。之前在nginx上部署过，不过那是别人弄的。什么事都是还要靠自己，是真理。\n2.为此写下步骤，以便下次部署直接来找教程。\n3.为了能让CI框架在nginx上跑起来。废了我两三天时间。不过还是配置好了。\n\n### 安装linux\n1.我这里用的是lnmp一键安装包 教程地址：https://lnmp.org/\n\n### 安装好之后\n1.开始部署你的web网站，如果在本地可以运行。那直接克隆到服务器上\n2.我的线上项目地址\n![](http://otbcgjn6c.bkt.clouddn.com/1510737091%281%29.jpg)\n3.当你以域名去范文访问的时候回出现以类似下错误，这是nginx禁止程序跨目录访问\n```\nWarning: require(): open_basedir restriction in effect. File(/home/wwwroot/***/bootstrap/autoload.php) is not within the allowed path(s): (/home/wwwroot/***/public/:/tmp/:/proc/) in /home/wwwroot/***/public/index.php on \n\n```\n解决办法将 /usr/local/nginx/conf/fastcgi.conf 里面的fastcgi_param PHP_ADMIN_VALUE \"open_basedir=$document_root/:/tmp/:/proc/\"; 在该行行前添加 # 或删除改行，需要重启nginx。 lnmp nginx reload\n\n4.以上弄好以后，继续访问线上ip地址。可能会出现404，特别是ci框架里面的site_url()方法和redirect()方法。\n\n### 重点介绍\n1.在server项里面：nginx引入了月一个 文件 include enable-php.conf;这个文件里面就包含了，解析php，运行php文件。我配置如下\n\n```\nlocation ~ [^/]\\.php(/|$)\n{                                                                     \n   try_files $uri =404;\n   fastcgi_pass  unix:/tmp/php-cgi.sock;\n   fastcgi_param PATH_INFO $fastcgi_path_info;\n   if ($uri ~ \"^(.+?\\.php)(/.*)$\") {\n           set $script     $1;\n           set $path_info  $2;\n       }   \n  fastcgi_split_path_info ^(.+\\.php)(.*)$;\n  fastcgi_index index.php;\n  include fastcgi.conf;\n}\n```\n在原来基础上加了这几段代码\n```\nfastcgi_param PATH_INFO $fastcgi_path_info;\n   if ($uri ~ \"^(.+?\\.php)(/.*)$\") {\n           set $script     $1;\n           set $path_info  $2;\n       }   \n  fastcgi_split_path_info ^(.+\\.php)(.*)$;\n```\n以上是enable-php.conf文件配置\n\n3.在你的框架中可能会有redirect()方法,我的一只是404错误，原因就是这个,后来在server包含中 include enable-php.conf下行添加如下代码\n```\nlocation / {\n    index  index.html index.htm index.php;                                                 \n    rewrite ^/$ /index.php last;\n    rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;\n }\n```\n4.在以ip地址访问成功访问到。\n\n5.将nginx.conf代码全部贴出\n\n```\nuser  www www;\n\nworker_processes auto;\n\nerror_log  /home/wwwlogs/nginx_error.log  crit;\n\npid        /usr/local/nginx/logs/nginx.pid;\n\n#Specifies the value for maximum file descriptors that can be opened by this process.\nworker_rlimit_nofile 51200;\n\nevents\n    {\n        use epoll;\n        worker_connections 51200;\n        multi_accept on;\n    }\n\nhttp\n    {\n        include       mime.types;\n        default_type  application/octet-stream;\n\n        server_names_hash_bucket_size 128;\n        client_header_buffer_size 32k;\n        large_client_header_buffers 4 32k;\n        client_max_body_size 50m;\n\n        sendfile   on;\n        tcp_nopush on;\n\n        keepalive_timeout 60;\n\n        tcp_nodelay on;\n\n        fastcgi_connect_timeout 300;\n        fastcgi_send_timeout 300;\n        fastcgi_read_timeout 300;\n        fastcgi_buffer_size 64k;\n        fastcgi_buffers 4 64k;\n        fastcgi_busy_buffers_size 128k;\n        fastcgi_temp_file_write_size 256k;\n\n        gzip on;\n        gzip_min_length  1k;\n        gzip_buffers     4 16k;\n        gzip_http_version 1.1;\n        gzip_comp_level 2;\n        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;\n        gzip_vary on;\n        gzip_proxied   expired no-cache no-store private auth;\n        gzip_disable   \"MSIE [1-6]\\.\";\n\n        #limit_conn_zone $binary_remote_addr zone=perip:10m;\n        ##If enable limit_conn_zone,add \"limit_conn perip 10;\" to server section.\n\n        server_tokens off;\n        access_log off;\n\nserver\n    {\n        listen 80 default_server;\n        #listen [::]:80 default_server ipv6only=on;\n        server_name 106.14.117.93;\n        index index.html index.htm index.php;\n        root /data/www/min/www; \n\n        #error_page   404   /404.html;\n\n        # Deny access to PHP files in specific directory\n        #location ~ /(wp-content|uploads|wp-includes|images)/.*\\.php$ { deny all; }\n\n       include enable-php.conf;\n       location / {\n          index  index.html index.htm index.php;\n          rewrite ^/$ /index.php last;\n          rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;\n        }\n        location /nginx_status\n        {\n            stub_status on;\n            access_log   off;\n        }\n\n        location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$\n        {\n            expires      30d;\n        }\n\n        location ~ .*\\.(js|css)?$\n        {\n            expires      12h;\n        }\n\n        location ~ /.well-known {\n            allow all;\n        }\n\n        location ~ /\\.\n        {\n            deny all;\n        }\n\n        access_log  /home/wwwlogs/access.log;\n    }\ninclude vhost/*.conf;\n}\n\n```","slug":"ci框架配置nginx","published":1,"updated":"2017-12-29T13:56:38.272Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd3s000bosmm9qqurpq5","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">include enable-php.conf;</div><div class=\"line\">location / &#123;</div><div class=\"line\">   index  index.html index.htm index.php;                                                                                                                                                                      </div><div class=\"line\">   rewrite ^/$ /index.php last;</div><div class=\"line\">   rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<font color=\"red\">以上代码是重点部分</font>\n\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>1.前段时间临近双十一在阿里云9.9买了半年服务器，想着弄个网站部署在线上。之前在nginx上部署过，不过那是别人弄的。什么事都是还要靠自己，是真理。<br>2.为此写下步骤，以便下次部署直接来找教程。<br>3.为了能让CI框架在nginx上跑起来。废了我两三天时间。不过还是配置好了。</p>\n<h3 id=\"安装linux\"><a href=\"#安装linux\" class=\"headerlink\" title=\"安装linux\"></a>安装linux</h3><p>1.我这里用的是lnmp一键安装包 教程地址：<a href=\"https://lnmp.org/\" target=\"_blank\" rel=\"external\">https://lnmp.org/</a></p>\n<h3 id=\"安装好之后\"><a href=\"#安装好之后\" class=\"headerlink\" title=\"安装好之后\"></a>安装好之后</h3><p>1.开始部署你的web网站，如果在本地可以运行。那直接克隆到服务器上<br>2.我的线上项目地址<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/1510737091%281%29.jpg\" alt=\"\"><br>3.当你以域名去范文访问的时候回出现以类似下错误，这是nginx禁止程序跨目录访问<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Warning: require(): open_basedir restriction in effect. File(/home/wwwroot/***/bootstrap/autoload.php) is not within the allowed path(s): (/home/wwwroot/***/public/:/tmp/:/proc/) in /home/wwwroot/***/public/index.php on</div></pre></td></tr></table></figure></p>\n<p>解决办法将 /usr/local/nginx/conf/fastcgi.conf 里面的fastcgi_param PHP_ADMIN_VALUE “open_basedir=$document_root/:/tmp/:/proc/“; 在该行行前添加 # 或删除改行，需要重启nginx。 lnmp nginx reload</p>\n<p>4.以上弄好以后，继续访问线上ip地址。可能会出现404，特别是ci框架里面的site_url()方法和redirect()方法。</p>\n<h3 id=\"重点介绍\"><a href=\"#重点介绍\" class=\"headerlink\" title=\"重点介绍\"></a>重点介绍</h3><p>1.在server项里面：nginx引入了月一个 文件 include enable-php.conf;这个文件里面就包含了，解析php，运行php文件。我配置如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">location ~ [^/]\\.php(/|$)</div><div class=\"line\">&#123;                                                                     </div><div class=\"line\">   try_files $uri =404;</div><div class=\"line\">   fastcgi_pass  unix:/tmp/php-cgi.sock;</div><div class=\"line\">   fastcgi_param PATH_INFO $fastcgi_path_info;</div><div class=\"line\">   if ($uri ~ &quot;^(.+?\\.php)(/.*)$&quot;) &#123;</div><div class=\"line\">           set $script     $1;</div><div class=\"line\">           set $path_info  $2;</div><div class=\"line\">       &#125;   </div><div class=\"line\">  fastcgi_split_path_info ^(.+\\.php)(.*)$;</div><div class=\"line\">  fastcgi_index index.php;</div><div class=\"line\">  include fastcgi.conf;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在原来基础上加了这几段代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">fastcgi_param PATH_INFO $fastcgi_path_info;</div><div class=\"line\">   if ($uri ~ &quot;^(.+?\\.php)(/.*)$&quot;) &#123;</div><div class=\"line\">           set $script     $1;</div><div class=\"line\">           set $path_info  $2;</div><div class=\"line\">       &#125;   </div><div class=\"line\">  fastcgi_split_path_info ^(.+\\.php)(.*)$;</div></pre></td></tr></table></figure></p>\n<p>以上是enable-php.conf文件配置</p>\n<p>3.在你的框架中可能会有redirect()方法,我的一只是404错误，原因就是这个,后来在server包含中 include enable-php.conf下行添加如下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">location / &#123;</div><div class=\"line\">    index  index.html index.htm index.php;                                                 </div><div class=\"line\">    rewrite ^/$ /index.php last;</div><div class=\"line\">    rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure></p>\n<p>4.在以ip地址访问成功访问到。</p>\n<p>5.将nginx.conf代码全部贴出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div></pre></td><td class=\"code\"><pre><div class=\"line\">user  www www;</div><div class=\"line\"></div><div class=\"line\">worker_processes auto;</div><div class=\"line\"></div><div class=\"line\">error_log  /home/wwwlogs/nginx_error.log  crit;</div><div class=\"line\"></div><div class=\"line\">pid        /usr/local/nginx/logs/nginx.pid;</div><div class=\"line\"></div><div class=\"line\">#Specifies the value for maximum file descriptors that can be opened by this process.</div><div class=\"line\">worker_rlimit_nofile 51200;</div><div class=\"line\"></div><div class=\"line\">events</div><div class=\"line\">    &#123;</div><div class=\"line\">        use epoll;</div><div class=\"line\">        worker_connections 51200;</div><div class=\"line\">        multi_accept on;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">http</div><div class=\"line\">    &#123;</div><div class=\"line\">        include       mime.types;</div><div class=\"line\">        default_type  application/octet-stream;</div><div class=\"line\"></div><div class=\"line\">        server_names_hash_bucket_size 128;</div><div class=\"line\">        client_header_buffer_size 32k;</div><div class=\"line\">        large_client_header_buffers 4 32k;</div><div class=\"line\">        client_max_body_size 50m;</div><div class=\"line\"></div><div class=\"line\">        sendfile   on;</div><div class=\"line\">        tcp_nopush on;</div><div class=\"line\"></div><div class=\"line\">        keepalive_timeout 60;</div><div class=\"line\"></div><div class=\"line\">        tcp_nodelay on;</div><div class=\"line\"></div><div class=\"line\">        fastcgi_connect_timeout 300;</div><div class=\"line\">        fastcgi_send_timeout 300;</div><div class=\"line\">        fastcgi_read_timeout 300;</div><div class=\"line\">        fastcgi_buffer_size 64k;</div><div class=\"line\">        fastcgi_buffers 4 64k;</div><div class=\"line\">        fastcgi_busy_buffers_size 128k;</div><div class=\"line\">        fastcgi_temp_file_write_size 256k;</div><div class=\"line\"></div><div class=\"line\">        gzip on;</div><div class=\"line\">        gzip_min_length  1k;</div><div class=\"line\">        gzip_buffers     4 16k;</div><div class=\"line\">        gzip_http_version 1.1;</div><div class=\"line\">        gzip_comp_level 2;</div><div class=\"line\">        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;</div><div class=\"line\">        gzip_vary on;</div><div class=\"line\">        gzip_proxied   expired no-cache no-store private auth;</div><div class=\"line\">        gzip_disable   &quot;MSIE [1-6]\\.&quot;;</div><div class=\"line\"></div><div class=\"line\">        #limit_conn_zone $binary_remote_addr zone=perip:10m;</div><div class=\"line\">        ##If enable limit_conn_zone,add &quot;limit_conn perip 10;&quot; to server section.</div><div class=\"line\"></div><div class=\"line\">        server_tokens off;</div><div class=\"line\">        access_log off;</div><div class=\"line\"></div><div class=\"line\">server</div><div class=\"line\">    &#123;</div><div class=\"line\">        listen 80 default_server;</div><div class=\"line\">        #listen [::]:80 default_server ipv6only=on;</div><div class=\"line\">        server_name 106.14.117.93;</div><div class=\"line\">        index index.html index.htm index.php;</div><div class=\"line\">        root /data/www/min/www; </div><div class=\"line\"></div><div class=\"line\">        #error_page   404   /404.html;</div><div class=\"line\"></div><div class=\"line\">        # Deny access to PHP files in specific directory</div><div class=\"line\">        #location ~ /(wp-content|uploads|wp-includes|images)/.*\\.php$ &#123; deny all; &#125;</div><div class=\"line\"></div><div class=\"line\">       include enable-php.conf;</div><div class=\"line\">       location / &#123;</div><div class=\"line\">          index  index.html index.htm index.php;</div><div class=\"line\">          rewrite ^/$ /index.php last;</div><div class=\"line\">          rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;</div><div class=\"line\">        &#125;</div><div class=\"line\">        location /nginx_status</div><div class=\"line\">        &#123;</div><div class=\"line\">            stub_status on;</div><div class=\"line\">            access_log   off;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$</div><div class=\"line\">        &#123;</div><div class=\"line\">            expires      30d;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location ~ .*\\.(js|css)?$</div><div class=\"line\">        &#123;</div><div class=\"line\">            expires      12h;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location ~ /.well-known &#123;</div><div class=\"line\">            allow all;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location ~ /\\.</div><div class=\"line\">        &#123;</div><div class=\"line\">            deny all;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        access_log  /home/wwwlogs/access.log;</div><div class=\"line\">    &#125;</div><div class=\"line\">include vhost/*.conf;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">include enable-php.conf;</div><div class=\"line\">location / &#123;</div><div class=\"line\">   index  index.html index.htm index.php;                                                                                                                                                                      </div><div class=\"line\">   rewrite ^/$ /index.php last;</div><div class=\"line\">   rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<font color=\"red\">以上代码是重点部分</font>\n\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>1.前段时间临近双十一在阿里云9.9买了半年服务器，想着弄个网站部署在线上。之前在nginx上部署过，不过那是别人弄的。什么事都是还要靠自己，是真理。<br>2.为此写下步骤，以便下次部署直接来找教程。<br>3.为了能让CI框架在nginx上跑起来。废了我两三天时间。不过还是配置好了。</p>\n<h3 id=\"安装linux\"><a href=\"#安装linux\" class=\"headerlink\" title=\"安装linux\"></a>安装linux</h3><p>1.我这里用的是lnmp一键安装包 教程地址：<a href=\"https://lnmp.org/\" target=\"_blank\" rel=\"external\">https://lnmp.org/</a></p>\n<h3 id=\"安装好之后\"><a href=\"#安装好之后\" class=\"headerlink\" title=\"安装好之后\"></a>安装好之后</h3><p>1.开始部署你的web网站，如果在本地可以运行。那直接克隆到服务器上<br>2.我的线上项目地址<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/1510737091%281%29.jpg\" alt=\"\"><br>3.当你以域名去范文访问的时候回出现以类似下错误，这是nginx禁止程序跨目录访问<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Warning: require(): open_basedir restriction in effect. File(/home/wwwroot/***/bootstrap/autoload.php) is not within the allowed path(s): (/home/wwwroot/***/public/:/tmp/:/proc/) in /home/wwwroot/***/public/index.php on</div></pre></td></tr></table></figure></p>\n<p>解决办法将 /usr/local/nginx/conf/fastcgi.conf 里面的fastcgi_param PHP_ADMIN_VALUE “open_basedir=$document_root/:/tmp/:/proc/“; 在该行行前添加 # 或删除改行，需要重启nginx。 lnmp nginx reload</p>\n<p>4.以上弄好以后，继续访问线上ip地址。可能会出现404，特别是ci框架里面的site_url()方法和redirect()方法。</p>\n<h3 id=\"重点介绍\"><a href=\"#重点介绍\" class=\"headerlink\" title=\"重点介绍\"></a>重点介绍</h3><p>1.在server项里面：nginx引入了月一个 文件 include enable-php.conf;这个文件里面就包含了，解析php，运行php文件。我配置如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">location ~ [^/]\\.php(/|$)</div><div class=\"line\">&#123;                                                                     </div><div class=\"line\">   try_files $uri =404;</div><div class=\"line\">   fastcgi_pass  unix:/tmp/php-cgi.sock;</div><div class=\"line\">   fastcgi_param PATH_INFO $fastcgi_path_info;</div><div class=\"line\">   if ($uri ~ &quot;^(.+?\\.php)(/.*)$&quot;) &#123;</div><div class=\"line\">           set $script     $1;</div><div class=\"line\">           set $path_info  $2;</div><div class=\"line\">       &#125;   </div><div class=\"line\">  fastcgi_split_path_info ^(.+\\.php)(.*)$;</div><div class=\"line\">  fastcgi_index index.php;</div><div class=\"line\">  include fastcgi.conf;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在原来基础上加了这几段代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">fastcgi_param PATH_INFO $fastcgi_path_info;</div><div class=\"line\">   if ($uri ~ &quot;^(.+?\\.php)(/.*)$&quot;) &#123;</div><div class=\"line\">           set $script     $1;</div><div class=\"line\">           set $path_info  $2;</div><div class=\"line\">       &#125;   </div><div class=\"line\">  fastcgi_split_path_info ^(.+\\.php)(.*)$;</div></pre></td></tr></table></figure></p>\n<p>以上是enable-php.conf文件配置</p>\n<p>3.在你的框架中可能会有redirect()方法,我的一只是404错误，原因就是这个,后来在server包含中 include enable-php.conf下行添加如下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">location / &#123;</div><div class=\"line\">    index  index.html index.htm index.php;                                                 </div><div class=\"line\">    rewrite ^/$ /index.php last;</div><div class=\"line\">    rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure></p>\n<p>4.在以ip地址访问成功访问到。</p>\n<p>5.将nginx.conf代码全部贴出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div></pre></td><td class=\"code\"><pre><div class=\"line\">user  www www;</div><div class=\"line\"></div><div class=\"line\">worker_processes auto;</div><div class=\"line\"></div><div class=\"line\">error_log  /home/wwwlogs/nginx_error.log  crit;</div><div class=\"line\"></div><div class=\"line\">pid        /usr/local/nginx/logs/nginx.pid;</div><div class=\"line\"></div><div class=\"line\">#Specifies the value for maximum file descriptors that can be opened by this process.</div><div class=\"line\">worker_rlimit_nofile 51200;</div><div class=\"line\"></div><div class=\"line\">events</div><div class=\"line\">    &#123;</div><div class=\"line\">        use epoll;</div><div class=\"line\">        worker_connections 51200;</div><div class=\"line\">        multi_accept on;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">http</div><div class=\"line\">    &#123;</div><div class=\"line\">        include       mime.types;</div><div class=\"line\">        default_type  application/octet-stream;</div><div class=\"line\"></div><div class=\"line\">        server_names_hash_bucket_size 128;</div><div class=\"line\">        client_header_buffer_size 32k;</div><div class=\"line\">        large_client_header_buffers 4 32k;</div><div class=\"line\">        client_max_body_size 50m;</div><div class=\"line\"></div><div class=\"line\">        sendfile   on;</div><div class=\"line\">        tcp_nopush on;</div><div class=\"line\"></div><div class=\"line\">        keepalive_timeout 60;</div><div class=\"line\"></div><div class=\"line\">        tcp_nodelay on;</div><div class=\"line\"></div><div class=\"line\">        fastcgi_connect_timeout 300;</div><div class=\"line\">        fastcgi_send_timeout 300;</div><div class=\"line\">        fastcgi_read_timeout 300;</div><div class=\"line\">        fastcgi_buffer_size 64k;</div><div class=\"line\">        fastcgi_buffers 4 64k;</div><div class=\"line\">        fastcgi_busy_buffers_size 128k;</div><div class=\"line\">        fastcgi_temp_file_write_size 256k;</div><div class=\"line\"></div><div class=\"line\">        gzip on;</div><div class=\"line\">        gzip_min_length  1k;</div><div class=\"line\">        gzip_buffers     4 16k;</div><div class=\"line\">        gzip_http_version 1.1;</div><div class=\"line\">        gzip_comp_level 2;</div><div class=\"line\">        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;</div><div class=\"line\">        gzip_vary on;</div><div class=\"line\">        gzip_proxied   expired no-cache no-store private auth;</div><div class=\"line\">        gzip_disable   &quot;MSIE [1-6]\\.&quot;;</div><div class=\"line\"></div><div class=\"line\">        #limit_conn_zone $binary_remote_addr zone=perip:10m;</div><div class=\"line\">        ##If enable limit_conn_zone,add &quot;limit_conn perip 10;&quot; to server section.</div><div class=\"line\"></div><div class=\"line\">        server_tokens off;</div><div class=\"line\">        access_log off;</div><div class=\"line\"></div><div class=\"line\">server</div><div class=\"line\">    &#123;</div><div class=\"line\">        listen 80 default_server;</div><div class=\"line\">        #listen [::]:80 default_server ipv6only=on;</div><div class=\"line\">        server_name 106.14.117.93;</div><div class=\"line\">        index index.html index.htm index.php;</div><div class=\"line\">        root /data/www/min/www; </div><div class=\"line\"></div><div class=\"line\">        #error_page   404   /404.html;</div><div class=\"line\"></div><div class=\"line\">        # Deny access to PHP files in specific directory</div><div class=\"line\">        #location ~ /(wp-content|uploads|wp-includes|images)/.*\\.php$ &#123; deny all; &#125;</div><div class=\"line\"></div><div class=\"line\">       include enable-php.conf;</div><div class=\"line\">       location / &#123;</div><div class=\"line\">          index  index.html index.htm index.php;</div><div class=\"line\">          rewrite ^/$ /index.php last;</div><div class=\"line\">          rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last;</div><div class=\"line\">        &#125;</div><div class=\"line\">        location /nginx_status</div><div class=\"line\">        &#123;</div><div class=\"line\">            stub_status on;</div><div class=\"line\">            access_log   off;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$</div><div class=\"line\">        &#123;</div><div class=\"line\">            expires      30d;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location ~ .*\\.(js|css)?$</div><div class=\"line\">        &#123;</div><div class=\"line\">            expires      12h;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location ~ /.well-known &#123;</div><div class=\"line\">            allow all;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location ~ /\\.</div><div class=\"line\">        &#123;</div><div class=\"line\">            deny all;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        access_log  /home/wwwlogs/access.log;</div><div class=\"line\">    &#125;</div><div class=\"line\">include vhost/*.conf;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"PHP简单爬虫抓取新闻","date":"2017-11-09T08:59:27.000Z","_content":"\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n前段时间有写过简单Python爬虫（文章有代码）\n\n### PHP爬虫基于QuerList\n 1.我这里用的是QueryList3.0版本都是手动下载，官网是通过composer方法安装的，具体步骤不是很了解，感觉挺麻烦。\n 2.QueryListV3.2.1版本下载地址:https://github.com/jae-jae/QueryList/tree/V3.2.1 这里有个坑如果你通过github克隆到本地不会是v3.2.1 而是4.0版本；需要打包下载 如下图：\n <img src=\"http://otbcgjn6c.bkt.clouddn.com/1510219317%281%29.png\"alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n 3.下载完QueryListV3.2.1 还要下载PHPQuery，QueryList是基于PHPQuery。下载地址：https://github.com/jae-jae/phpQuery-single\n 4.手动下载完成后可引入到项目中。\n\n### 上代码\n\n```\nrequire 'phpQuery.php';\nrequire 'QueryList.php';\nuse QL\\QueryList;\n\n```\n\n这里使用了命名空间，这里我们已经引入了QueryList.php，QueryList.php使用了命名空间 namespace QL;如果要实例化QueryList，就要使用use QL\\QueryList;\n1.抓取腾讯新闻新闻标题\n```\n//获取标题\n$rules = array(\n    //采集id为one这个元素里面的纯文本内容\n    'text' => array('.linkto','text'),\n);\n\n$url = 'http://news.qq.com/';\n$data = QueryList::Query($url,$rules,'','UTF-8','GB2312',true)->getData(function($item) use($url){\n        return $item;\n});\n\nprint_r($data);\n\n```\n2.打印结果\n\n```\narray\n(\n    [0] => Array\n        (\n            [text] => 138万人通过国考审核创7年之最 119个职位无人报\n        )\n\n    [1] => Array\n        (\n            [text] => 俄媒：中国第3艘航母最终轮廓确定 或用电磁弹射\n        )\n\n    [2] => Array\n        (\n            [text] => 巴西众院弹劾总统案获通过 罗塞夫政党承认落败\n        )\n\n    [3] => Array\n        (\n            [text] => 10月CPI同比增长1.9% 涨幅连续9个月低于2%\n        )\n    ....\n\n\n```","source":"_posts/PHP简单爬虫.md","raw":"---\ntitle: PHP简单爬虫抓取新闻\ndate: 2017-11-9 16:59:27\ntags:\n - PHP\n - QueryList\n---\n\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n前段时间有写过简单Python爬虫（文章有代码）\n\n### PHP爬虫基于QuerList\n 1.我这里用的是QueryList3.0版本都是手动下载，官网是通过composer方法安装的，具体步骤不是很了解，感觉挺麻烦。\n 2.QueryListV3.2.1版本下载地址:https://github.com/jae-jae/QueryList/tree/V3.2.1 这里有个坑如果你通过github克隆到本地不会是v3.2.1 而是4.0版本；需要打包下载 如下图：\n <img src=\"http://otbcgjn6c.bkt.clouddn.com/1510219317%281%29.png\"alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n 3.下载完QueryListV3.2.1 还要下载PHPQuery，QueryList是基于PHPQuery。下载地址：https://github.com/jae-jae/phpQuery-single\n 4.手动下载完成后可引入到项目中。\n\n### 上代码\n\n```\nrequire 'phpQuery.php';\nrequire 'QueryList.php';\nuse QL\\QueryList;\n\n```\n\n这里使用了命名空间，这里我们已经引入了QueryList.php，QueryList.php使用了命名空间 namespace QL;如果要实例化QueryList，就要使用use QL\\QueryList;\n1.抓取腾讯新闻新闻标题\n```\n//获取标题\n$rules = array(\n    //采集id为one这个元素里面的纯文本内容\n    'text' => array('.linkto','text'),\n);\n\n$url = 'http://news.qq.com/';\n$data = QueryList::Query($url,$rules,'','UTF-8','GB2312',true)->getData(function($item) use($url){\n        return $item;\n});\n\nprint_r($data);\n\n```\n2.打印结果\n\n```\narray\n(\n    [0] => Array\n        (\n            [text] => 138万人通过国考审核创7年之最 119个职位无人报\n        )\n\n    [1] => Array\n        (\n            [text] => 俄媒：中国第3艘航母最终轮廓确定 或用电磁弹射\n        )\n\n    [2] => Array\n        (\n            [text] => 巴西众院弹劾总统案获通过 罗塞夫政党承认落败\n        )\n\n    [3] => Array\n        (\n            [text] => 10月CPI同比增长1.9% 涨幅连续9个月低于2%\n        )\n    ....\n\n\n```","slug":"PHP简单爬虫","published":1,"updated":"2017-12-29T12:51:32.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd3x000eosmmlkt96f2j","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<p>前段时间有写过简单Python爬虫（文章有代码）</p>\n<h3 id=\"PHP爬虫基于QuerList\"><a href=\"#PHP爬虫基于QuerList\" class=\"headerlink\" title=\"PHP爬虫基于QuerList\"></a>PHP爬虫基于QuerList</h3><p> 1.我这里用的是QueryList3.0版本都是手动下载，官网是通过composer方法安装的，具体步骤不是很了解，感觉挺麻烦。<br> 2.QueryListV3.2.1版本下载地址:<a href=\"https://github.com/jae-jae/QueryList/tree/V3.2.1\" target=\"_blank\" rel=\"external\">https://github.com/jae-jae/QueryList/tree/V3.2.1</a> 这里有个坑如果你通过github克隆到本地不会是v3.2.1 而是4.0版本；需要打包下载 如下图：<br> <img src=\"http://otbcgjn6c.bkt.clouddn.com/1510219317%281%29.png\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br> 3.下载完QueryListV3.2.1 还要下载PHPQuery，QueryList是基于PHPQuery。下载地址：<a href=\"https://github.com/jae-jae/phpQuery-single\" target=\"_blank\" rel=\"external\">https://github.com/jae-jae/phpQuery-single</a><br> 4.手动下载完成后可引入到项目中。</p>\n<h3 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">require &apos;phpQuery.php&apos;;</div><div class=\"line\">require &apos;QueryList.php&apos;;</div><div class=\"line\">use QL\\QueryList;</div></pre></td></tr></table></figure>\n<p>这里使用了命名空间，这里我们已经引入了QueryList.php，QueryList.php使用了命名空间 namespace QL;如果要实例化QueryList，就要使用use QL\\QueryList;<br>1.抓取腾讯新闻新闻标题<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">//获取标题</div><div class=\"line\">$rules = array(</div><div class=\"line\">    //采集id为one这个元素里面的纯文本内容</div><div class=\"line\">    &apos;text&apos; =&gt; array(&apos;.linkto&apos;,&apos;text&apos;),</div><div class=\"line\">);</div><div class=\"line\"></div><div class=\"line\">$url = &apos;http://news.qq.com/&apos;;</div><div class=\"line\">$data = QueryList::Query($url,$rules,&apos;&apos;,&apos;UTF-8&apos;,&apos;GB2312&apos;,true)-&gt;getData(function($item) use($url)&#123;</div><div class=\"line\">        return $item;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">print_r($data);</div></pre></td></tr></table></figure></p>\n<p>2.打印结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">array</div><div class=\"line\">(</div><div class=\"line\">    [0] =&gt; Array</div><div class=\"line\">        (</div><div class=\"line\">            [text] =&gt; 138万人通过国考审核创7年之最 119个职位无人报</div><div class=\"line\">        )</div><div class=\"line\"></div><div class=\"line\">    [1] =&gt; Array</div><div class=\"line\">        (</div><div class=\"line\">            [text] =&gt; 俄媒：中国第3艘航母最终轮廓确定 或用电磁弹射</div><div class=\"line\">        )</div><div class=\"line\"></div><div class=\"line\">    [2] =&gt; Array</div><div class=\"line\">        (</div><div class=\"line\">            [text] =&gt; 巴西众院弹劾总统案获通过 罗塞夫政党承认落败</div><div class=\"line\">        )</div><div class=\"line\"></div><div class=\"line\">    [3] =&gt; Array</div><div class=\"line\">        (</div><div class=\"line\">            [text] =&gt; 10月CPI同比增长1.9% 涨幅连续9个月低于2%</div><div class=\"line\">        )</div><div class=\"line\">    ....</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<p>前段时间有写过简单Python爬虫（文章有代码）</p>\n<h3 id=\"PHP爬虫基于QuerList\"><a href=\"#PHP爬虫基于QuerList\" class=\"headerlink\" title=\"PHP爬虫基于QuerList\"></a>PHP爬虫基于QuerList</h3><p> 1.我这里用的是QueryList3.0版本都是手动下载，官网是通过composer方法安装的，具体步骤不是很了解，感觉挺麻烦。<br> 2.QueryListV3.2.1版本下载地址:<a href=\"https://github.com/jae-jae/QueryList/tree/V3.2.1\" target=\"_blank\" rel=\"external\">https://github.com/jae-jae/QueryList/tree/V3.2.1</a> 这里有个坑如果你通过github克隆到本地不会是v3.2.1 而是4.0版本；需要打包下载 如下图：<br> <img src=\"http://otbcgjn6c.bkt.clouddn.com/1510219317%281%29.png\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br> 3.下载完QueryListV3.2.1 还要下载PHPQuery，QueryList是基于PHPQuery。下载地址：<a href=\"https://github.com/jae-jae/phpQuery-single\" target=\"_blank\" rel=\"external\">https://github.com/jae-jae/phpQuery-single</a><br> 4.手动下载完成后可引入到项目中。</p>\n<h3 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">require &apos;phpQuery.php&apos;;</div><div class=\"line\">require &apos;QueryList.php&apos;;</div><div class=\"line\">use QL\\QueryList;</div></pre></td></tr></table></figure>\n<p>这里使用了命名空间，这里我们已经引入了QueryList.php，QueryList.php使用了命名空间 namespace QL;如果要实例化QueryList，就要使用use QL\\QueryList;<br>1.抓取腾讯新闻新闻标题<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">//获取标题</div><div class=\"line\">$rules = array(</div><div class=\"line\">    //采集id为one这个元素里面的纯文本内容</div><div class=\"line\">    &apos;text&apos; =&gt; array(&apos;.linkto&apos;,&apos;text&apos;),</div><div class=\"line\">);</div><div class=\"line\"></div><div class=\"line\">$url = &apos;http://news.qq.com/&apos;;</div><div class=\"line\">$data = QueryList::Query($url,$rules,&apos;&apos;,&apos;UTF-8&apos;,&apos;GB2312&apos;,true)-&gt;getData(function($item) use($url)&#123;</div><div class=\"line\">        return $item;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">print_r($data);</div></pre></td></tr></table></figure></p>\n<p>2.打印结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">array</div><div class=\"line\">(</div><div class=\"line\">    [0] =&gt; Array</div><div class=\"line\">        (</div><div class=\"line\">            [text] =&gt; 138万人通过国考审核创7年之最 119个职位无人报</div><div class=\"line\">        )</div><div class=\"line\"></div><div class=\"line\">    [1] =&gt; Array</div><div class=\"line\">        (</div><div class=\"line\">            [text] =&gt; 俄媒：中国第3艘航母最终轮廓确定 或用电磁弹射</div><div class=\"line\">        )</div><div class=\"line\"></div><div class=\"line\">    [2] =&gt; Array</div><div class=\"line\">        (</div><div class=\"line\">            [text] =&gt; 巴西众院弹劾总统案获通过 罗塞夫政党承认落败</div><div class=\"line\">        )</div><div class=\"line\"></div><div class=\"line\">    [3] =&gt; Array</div><div class=\"line\">        (</div><div class=\"line\">            [text] =&gt; 10月CPI同比增长1.9% 涨幅连续9个月低于2%</div><div class=\"line\">        )</div><div class=\"line\">    ....</div></pre></td></tr></table></figure>"},{"title":"Mysql为什么加索引","date":"2018-01-03T14:37:41.000Z","_content":"<img src=\"http://otbcgjn6c.bkt.clouddn.com/timg222222.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### 使用索引的理由\n\n1.由于mysql在默认情况下，表中的数据记录是没有顺序可言的。\n2.数据检索过程中，符合条件的数据存储在哪里，我们是完全不知情的。\n3.如果使用select语句进行查询，数据库会从第一条记录开始检索，即使找到第一条符合条件的数据，数据库的搜索也并不会因此而停止，毕竟符合条件的数据可能并不止一条，也就是说此时检索会把表中的数据全部检索一遍才结束，这样的检索方式也称为全表扫描。\n4.但假设表中存在上百上千万条数据呢？这样的检索效率就十分低了。\n\n### Mysql 索引诞生\n\n1.索引就如同一本书的目录一样\n2.指明了某个关键字在正文中的出现的页码位置或章节的位置，这样只要找到对应页面就能找到要搜索的内容了。\n3.数据库的索引也是类似书本目录一样，通过创建某个字段或者多个字段的索引，在搜索该字段时就可以根据对应的索引进行快速检索出相应内容而无需全表扫描了。","source":"_posts/mysql索引.md","raw":"---\ntitle: Mysql为什么加索引\ndate: 2018-1-3 22:37:41\ntags:\n - Mysql\n---\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/timg222222.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### 使用索引的理由\n\n1.由于mysql在默认情况下，表中的数据记录是没有顺序可言的。\n2.数据检索过程中，符合条件的数据存储在哪里，我们是完全不知情的。\n3.如果使用select语句进行查询，数据库会从第一条记录开始检索，即使找到第一条符合条件的数据，数据库的搜索也并不会因此而停止，毕竟符合条件的数据可能并不止一条，也就是说此时检索会把表中的数据全部检索一遍才结束，这样的检索方式也称为全表扫描。\n4.但假设表中存在上百上千万条数据呢？这样的检索效率就十分低了。\n\n### Mysql 索引诞生\n\n1.索引就如同一本书的目录一样\n2.指明了某个关键字在正文中的出现的页码位置或章节的位置，这样只要找到对应页面就能找到要搜索的内容了。\n3.数据库的索引也是类似书本目录一样，通过创建某个字段或者多个字段的索引，在搜索该字段时就可以根据对应的索引进行快速检索出相应内容而无需全表扫描了。","slug":"mysql索引","published":1,"updated":"2018-01-03T14:47:15.783Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd42000gosmmpro18ppu","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timg222222.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"使用索引的理由\"><a href=\"#使用索引的理由\" class=\"headerlink\" title=\"使用索引的理由\"></a>使用索引的理由</h3><p>1.由于mysql在默认情况下，表中的数据记录是没有顺序可言的。<br>2.数据检索过程中，符合条件的数据存储在哪里，我们是完全不知情的。<br>3.如果使用select语句进行查询，数据库会从第一条记录开始检索，即使找到第一条符合条件的数据，数据库的搜索也并不会因此而停止，毕竟符合条件的数据可能并不止一条，也就是说此时检索会把表中的数据全部检索一遍才结束，这样的检索方式也称为全表扫描。<br>4.但假设表中存在上百上千万条数据呢？这样的检索效率就十分低了。</p>\n<h3 id=\"Mysql-索引诞生\"><a href=\"#Mysql-索引诞生\" class=\"headerlink\" title=\"Mysql 索引诞生\"></a>Mysql 索引诞生</h3><p>1.索引就如同一本书的目录一样<br>2.指明了某个关键字在正文中的出现的页码位置或章节的位置，这样只要找到对应页面就能找到要搜索的内容了。<br>3.数据库的索引也是类似书本目录一样，通过创建某个字段或者多个字段的索引，在搜索该字段时就可以根据对应的索引进行快速检索出相应内容而无需全表扫描了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timg222222.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"使用索引的理由\"><a href=\"#使用索引的理由\" class=\"headerlink\" title=\"使用索引的理由\"></a>使用索引的理由</h3><p>1.由于mysql在默认情况下，表中的数据记录是没有顺序可言的。<br>2.数据检索过程中，符合条件的数据存储在哪里，我们是完全不知情的。<br>3.如果使用select语句进行查询，数据库会从第一条记录开始检索，即使找到第一条符合条件的数据，数据库的搜索也并不会因此而停止，毕竟符合条件的数据可能并不止一条，也就是说此时检索会把表中的数据全部检索一遍才结束，这样的检索方式也称为全表扫描。<br>4.但假设表中存在上百上千万条数据呢？这样的检索效率就十分低了。</p>\n<h3 id=\"Mysql-索引诞生\"><a href=\"#Mysql-索引诞生\" class=\"headerlink\" title=\"Mysql 索引诞生\"></a>Mysql 索引诞生</h3><p>1.索引就如同一本书的目录一样<br>2.指明了某个关键字在正文中的出现的页码位置或章节的位置，这样只要找到对应页面就能找到要搜索的内容了。<br>3.数据库的索引也是类似书本目录一样，通过创建某个字段或者多个字段的索引，在搜索该字段时就可以根据对应的索引进行快速检索出相应内容而无需全表扫描了。</p>\n"},{"title":"json_decode和json_encode的使用方法","date":"2017-07-20T00:47:38.000Z","_content":"<img src=\"http://otbcgjn6c.bkt.clouddn.com/b7d99088a8590acb40452860b6869c9668cad7751c128-xK4ZJh_fw658.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### json_decode对json格式的字符串进行编码也就是转化成PHP变量\n\n```\n$content = $this->curl->get(\"http://sj.apidata.cn/?mobile={$phone}\");\n$contents = json_decode($content);\nprint_r(contents);\n\n```\n打印结果(结果是一个对象,如果要取出里面的数值,这样是不好取的):\n```\nstdClass Object\n(\n    [status] => 1\n    [data] => stdClass Object\n        (\n            [prefix] => 131\n            [province] => 山东\n            [city] => 威海\n            [isp] => 联通\n            [code] => 631\n            [zipcode] => 264200\n            [types] => 中国联通 GSM\n            [mobile] => 13181891701\n        )\n\n    [message] => success\n)\n```\n<font color=\"#2FA3F6\">当json_decode($contents,true)时会直接打印出PHP数组.</font>\n\n\n```\n$content = $this->curl->get(\"http://sj.apidata.cn/?mobile={$phone}\");\n$contents = json_decode($content,true);\nprint_r($contents);\n\n```\n\n<font color=\"#2FA3F6\">打印结果 PHP数组:</font>\n\n```\nArray\n(\n    [status] => 1\n    [data] => Array\n        (\n            [prefix] => 131\n            [province] => 山东\n            [city] => 威海\n            [isp] => 联通\n            [code] => 631\n            [zipcode] => 264200\n            [types] => 中国联通 GSM\n            [mobile] => 13181891701\n        )\n\n    [message] => success\n)\n\n```\n<font color=\"#FF4081\">可以看出 json_decode($contents,true)输出的一个关联数组,由此可知json_decode($contents）输出的是对象,而json_decode(\"$contents\",true)是把它强制生成PHP关联数组</font>\n\n### json_decode 对PHP变量进行 JSON 编码\n\n```\n<?php\n$arr = array ('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5);\n\necho json_encode($arr);\n?>\n```\n<font color=\"#2FA3F6\">打印结果 PHP数组:</font>\n```\n{\"a\":1,\"b\":2,\"c\":3,\"d\":4,\"e\":5}\n\n```\n### 最后:\n\n可以看出json_encode()和json_decode()是编译和反编译过程，注意json只接受utf-8编码的字符，所以json_encode()的参数必须是utf-8编码，否则会得到空字符或者null。\n","source":"_posts/json_decode和json_encode的使用方法.md","raw":"---\ntitle: json_decode和json_encode的使用方法\ndate: 2017-7-20 08:47:38\ntags:\n\t- PHP\n---\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/b7d99088a8590acb40452860b6869c9668cad7751c128-xK4ZJh_fw658.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### json_decode对json格式的字符串进行编码也就是转化成PHP变量\n\n```\n$content = $this->curl->get(\"http://sj.apidata.cn/?mobile={$phone}\");\n$contents = json_decode($content);\nprint_r(contents);\n\n```\n打印结果(结果是一个对象,如果要取出里面的数值,这样是不好取的):\n```\nstdClass Object\n(\n    [status] => 1\n    [data] => stdClass Object\n        (\n            [prefix] => 131\n            [province] => 山东\n            [city] => 威海\n            [isp] => 联通\n            [code] => 631\n            [zipcode] => 264200\n            [types] => 中国联通 GSM\n            [mobile] => 13181891701\n        )\n\n    [message] => success\n)\n```\n<font color=\"#2FA3F6\">当json_decode($contents,true)时会直接打印出PHP数组.</font>\n\n\n```\n$content = $this->curl->get(\"http://sj.apidata.cn/?mobile={$phone}\");\n$contents = json_decode($content,true);\nprint_r($contents);\n\n```\n\n<font color=\"#2FA3F6\">打印结果 PHP数组:</font>\n\n```\nArray\n(\n    [status] => 1\n    [data] => Array\n        (\n            [prefix] => 131\n            [province] => 山东\n            [city] => 威海\n            [isp] => 联通\n            [code] => 631\n            [zipcode] => 264200\n            [types] => 中国联通 GSM\n            [mobile] => 13181891701\n        )\n\n    [message] => success\n)\n\n```\n<font color=\"#FF4081\">可以看出 json_decode($contents,true)输出的一个关联数组,由此可知json_decode($contents）输出的是对象,而json_decode(\"$contents\",true)是把它强制生成PHP关联数组</font>\n\n### json_decode 对PHP变量进行 JSON 编码\n\n```\n<?php\n$arr = array ('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5);\n\necho json_encode($arr);\n?>\n```\n<font color=\"#2FA3F6\">打印结果 PHP数组:</font>\n```\n{\"a\":1,\"b\":2,\"c\":3,\"d\":4,\"e\":5}\n\n```\n### 最后:\n\n可以看出json_encode()和json_decode()是编译和反编译过程，注意json只接受utf-8编码的字符，所以json_encode()的参数必须是utf-8编码，否则会得到空字符或者null。\n","slug":"json_decode和json_encode的使用方法","published":1,"updated":"2017-12-29T12:51:15.419Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd48000kosmmcjf213ou","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/b7d99088a8590acb40452860b6869c9668cad7751c128-xK4ZJh_fw658.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"json-decode对json格式的字符串进行编码也就是转化成PHP变量\"><a href=\"#json-decode对json格式的字符串进行编码也就是转化成PHP变量\" class=\"headerlink\" title=\"json_decode对json格式的字符串进行编码也就是转化成PHP变量\"></a>json_decode对json格式的字符串进行编码也就是转化成PHP变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$content = $this-&gt;curl-&gt;get(&quot;http://sj.apidata.cn/?mobile=&#123;$phone&#125;&quot;);</div><div class=\"line\">$contents = json_decode($content);</div><div class=\"line\">print_r(contents);</div></pre></td></tr></table></figure>\n<p>打印结果(结果是一个对象,如果要取出里面的数值,这样是不好取的):<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">stdClass Object</div><div class=\"line\">(</div><div class=\"line\">    [status] =&gt; 1</div><div class=\"line\">    [data] =&gt; stdClass Object</div><div class=\"line\">        (</div><div class=\"line\">            [prefix] =&gt; 131</div><div class=\"line\">            [province] =&gt; 山东</div><div class=\"line\">            [city] =&gt; 威海</div><div class=\"line\">            [isp] =&gt; 联通</div><div class=\"line\">            [code] =&gt; 631</div><div class=\"line\">            [zipcode] =&gt; 264200</div><div class=\"line\">            [types] =&gt; 中国联通 GSM</div><div class=\"line\">            [mobile] =&gt; 13181891701</div><div class=\"line\">        )</div><div class=\"line\"></div><div class=\"line\">    [message] =&gt; success</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<font color=\"#2FA3F6\">当json_decode($contents,true)时会直接打印出PHP数组.</font>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$content = $this-&gt;curl-&gt;get(&quot;http://sj.apidata.cn/?mobile=&#123;$phone&#125;&quot;);</div><div class=\"line\">$contents = json_decode($content,true);</div><div class=\"line\">print_r($contents);</div></pre></td></tr></table></figure>\n<font color=\"#2FA3F6\">打印结果 PHP数组:</font>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">Array</div><div class=\"line\">(</div><div class=\"line\">    [status] =&gt; 1</div><div class=\"line\">    [data] =&gt; Array</div><div class=\"line\">        (</div><div class=\"line\">            [prefix] =&gt; 131</div><div class=\"line\">            [province] =&gt; 山东</div><div class=\"line\">            [city] =&gt; 威海</div><div class=\"line\">            [isp] =&gt; 联通</div><div class=\"line\">            [code] =&gt; 631</div><div class=\"line\">            [zipcode] =&gt; 264200</div><div class=\"line\">            [types] =&gt; 中国联通 GSM</div><div class=\"line\">            [mobile] =&gt; 13181891701</div><div class=\"line\">        )</div><div class=\"line\"></div><div class=\"line\">    [message] =&gt; success</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<font color=\"#FF4081\">可以看出 json_decode($contents,true)输出的一个关联数组,由此可知json_decode($contents）输出的是对象,而json_decode(“$contents”,true)是把它强制生成PHP关联数组</font>\n\n<h3 id=\"json-decode-对PHP变量进行-JSON-编码\"><a href=\"#json-decode-对PHP变量进行-JSON-编码\" class=\"headerlink\" title=\"json_decode 对PHP变量进行 JSON 编码\"></a>json_decode 对PHP变量进行 JSON 编码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">$arr = array (&apos;a&apos;=&gt;1,&apos;b&apos;=&gt;2,&apos;c&apos;=&gt;3,&apos;d&apos;=&gt;4,&apos;e&apos;=&gt;5);</div><div class=\"line\"></div><div class=\"line\">echo json_encode($arr);</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<p><font color=\"#2FA3F6\">打印结果 PHP数组:</font><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后:\"></a>最后:</h3><p>可以看出json_encode()和json_decode()是编译和反编译过程，注意json只接受utf-8编码的字符，所以json_encode()的参数必须是utf-8编码，否则会得到空字符或者null。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/b7d99088a8590acb40452860b6869c9668cad7751c128-xK4ZJh_fw658.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"json-decode对json格式的字符串进行编码也就是转化成PHP变量\"><a href=\"#json-decode对json格式的字符串进行编码也就是转化成PHP变量\" class=\"headerlink\" title=\"json_decode对json格式的字符串进行编码也就是转化成PHP变量\"></a>json_decode对json格式的字符串进行编码也就是转化成PHP变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$content = $this-&gt;curl-&gt;get(&quot;http://sj.apidata.cn/?mobile=&#123;$phone&#125;&quot;);</div><div class=\"line\">$contents = json_decode($content);</div><div class=\"line\">print_r(contents);</div></pre></td></tr></table></figure>\n<p>打印结果(结果是一个对象,如果要取出里面的数值,这样是不好取的):<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">stdClass Object</div><div class=\"line\">(</div><div class=\"line\">    [status] =&gt; 1</div><div class=\"line\">    [data] =&gt; stdClass Object</div><div class=\"line\">        (</div><div class=\"line\">            [prefix] =&gt; 131</div><div class=\"line\">            [province] =&gt; 山东</div><div class=\"line\">            [city] =&gt; 威海</div><div class=\"line\">            [isp] =&gt; 联通</div><div class=\"line\">            [code] =&gt; 631</div><div class=\"line\">            [zipcode] =&gt; 264200</div><div class=\"line\">            [types] =&gt; 中国联通 GSM</div><div class=\"line\">            [mobile] =&gt; 13181891701</div><div class=\"line\">        )</div><div class=\"line\"></div><div class=\"line\">    [message] =&gt; success</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<font color=\"#2FA3F6\">当json_decode($contents,true)时会直接打印出PHP数组.</font>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$content = $this-&gt;curl-&gt;get(&quot;http://sj.apidata.cn/?mobile=&#123;$phone&#125;&quot;);</div><div class=\"line\">$contents = json_decode($content,true);</div><div class=\"line\">print_r($contents);</div></pre></td></tr></table></figure>\n<font color=\"#2FA3F6\">打印结果 PHP数组:</font>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">Array</div><div class=\"line\">(</div><div class=\"line\">    [status] =&gt; 1</div><div class=\"line\">    [data] =&gt; Array</div><div class=\"line\">        (</div><div class=\"line\">            [prefix] =&gt; 131</div><div class=\"line\">            [province] =&gt; 山东</div><div class=\"line\">            [city] =&gt; 威海</div><div class=\"line\">            [isp] =&gt; 联通</div><div class=\"line\">            [code] =&gt; 631</div><div class=\"line\">            [zipcode] =&gt; 264200</div><div class=\"line\">            [types] =&gt; 中国联通 GSM</div><div class=\"line\">            [mobile] =&gt; 13181891701</div><div class=\"line\">        )</div><div class=\"line\"></div><div class=\"line\">    [message] =&gt; success</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<font color=\"#FF4081\">可以看出 json_decode($contents,true)输出的一个关联数组,由此可知json_decode($contents）输出的是对象,而json_decode(“$contents”,true)是把它强制生成PHP关联数组</font>\n\n<h3 id=\"json-decode-对PHP变量进行-JSON-编码\"><a href=\"#json-decode-对PHP变量进行-JSON-编码\" class=\"headerlink\" title=\"json_decode 对PHP变量进行 JSON 编码\"></a>json_decode 对PHP变量进行 JSON 编码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">$arr = array (&apos;a&apos;=&gt;1,&apos;b&apos;=&gt;2,&apos;c&apos;=&gt;3,&apos;d&apos;=&gt;4,&apos;e&apos;=&gt;5);</div><div class=\"line\"></div><div class=\"line\">echo json_encode($arr);</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<p><font color=\"#2FA3F6\">打印结果 PHP数组:</font><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后:\"></a>最后:</h3><p>可以看出json_encode()和json_decode()是编译和反编译过程，注意json只接受utf-8编码的字符，所以json_encode()的参数必须是utf-8编码，否则会得到空字符或者null。</p>\n"},{"title":"stripos()的用法","date":"2017-07-20T07:17:01.000Z","_content":"这个函数经常用到,并且能快速判断,某字符串是否在另一字符串中出现,常用在条件判断中;\n\n### 定义和用法\n\nstripos(string,find)\n参一:另一串字符\n参二:要查找的字符\n\n例子:\n```\n$content = 'Hello World MyBlog';\n$appear = stripos($content,'my');\nprint_r($appear);\n\n```\n结果:\n`12`\n\n说明: 返回字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。\n\n```\n$content = 'Hello World MyBlog';\n$appear = stripos($content,'kk');\nif (stripos($content,'kk')){\n\techo '存在';\n}else{\n\techo '不存在';\n}\n\nif (stripos($content,'lo')){\n\techo '存在';\n}else{\n\techo '不存在';\n}\n```\n结果分别是:\n`不存在`\n`存在`\n","source":"_posts/stripos的用法.md","raw":"---\ntitle: stripos()的用法\ndate: 2017-7-20 15:17:01\ntags:\n -  \n - PHP\n---\n这个函数经常用到,并且能快速判断,某字符串是否在另一字符串中出现,常用在条件判断中;\n\n### 定义和用法\n\nstripos(string,find)\n参一:另一串字符\n参二:要查找的字符\n\n例子:\n```\n$content = 'Hello World MyBlog';\n$appear = stripos($content,'my');\nprint_r($appear);\n\n```\n结果:\n`12`\n\n说明: 返回字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。\n\n```\n$content = 'Hello World MyBlog';\n$appear = stripos($content,'kk');\nif (stripos($content,'kk')){\n\techo '存在';\n}else{\n\techo '不存在';\n}\n\nif (stripos($content,'lo')){\n\techo '存在';\n}else{\n\techo '不存在';\n}\n```\n结果分别是:\n`不存在`\n`存在`\n","slug":"stripos的用法","published":1,"updated":"2017-12-29T12:52:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd4f000mosmm9tfe4j2e","content":"<p>这个函数经常用到,并且能快速判断,某字符串是否在另一字符串中出现,常用在条件判断中;</p>\n<h3 id=\"定义和用法\"><a href=\"#定义和用法\" class=\"headerlink\" title=\"定义和用法\"></a>定义和用法</h3><p>stripos(string,find)<br>参一:另一串字符<br>参二:要查找的字符</p>\n<p>例子:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$content = &apos;Hello World MyBlog&apos;;</div><div class=\"line\">$appear = stripos($content,&apos;my&apos;);</div><div class=\"line\">print_r($appear);</div></pre></td></tr></table></figure></p>\n<p>结果:<br><code>12</code></p>\n<p>说明: 返回字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">$content = &apos;Hello World MyBlog&apos;;</div><div class=\"line\">$appear = stripos($content,&apos;kk&apos;);</div><div class=\"line\">if (stripos($content,&apos;kk&apos;))&#123;</div><div class=\"line\">\techo &apos;存在&apos;;</div><div class=\"line\">&#125;else&#123;</div><div class=\"line\">\techo &apos;不存在&apos;;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">if (stripos($content,&apos;lo&apos;))&#123;</div><div class=\"line\">\techo &apos;存在&apos;;</div><div class=\"line\">&#125;else&#123;</div><div class=\"line\">\techo &apos;不存在&apos;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>结果分别是:<br><code>不存在</code><br><code>存在</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p>这个函数经常用到,并且能快速判断,某字符串是否在另一字符串中出现,常用在条件判断中;</p>\n<h3 id=\"定义和用法\"><a href=\"#定义和用法\" class=\"headerlink\" title=\"定义和用法\"></a>定义和用法</h3><p>stripos(string,find)<br>参一:另一串字符<br>参二:要查找的字符</p>\n<p>例子:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$content = &apos;Hello World MyBlog&apos;;</div><div class=\"line\">$appear = stripos($content,&apos;my&apos;);</div><div class=\"line\">print_r($appear);</div></pre></td></tr></table></figure></p>\n<p>结果:<br><code>12</code></p>\n<p>说明: 返回字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">$content = &apos;Hello World MyBlog&apos;;</div><div class=\"line\">$appear = stripos($content,&apos;kk&apos;);</div><div class=\"line\">if (stripos($content,&apos;kk&apos;))&#123;</div><div class=\"line\">\techo &apos;存在&apos;;</div><div class=\"line\">&#125;else&#123;</div><div class=\"line\">\techo &apos;不存在&apos;;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">if (stripos($content,&apos;lo&apos;))&#123;</div><div class=\"line\">\techo &apos;存在&apos;;</div><div class=\"line\">&#125;else&#123;</div><div class=\"line\">\techo &apos;不存在&apos;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>结果分别是:<br><code>不存在</code><br><code>存在</code></p>\n"},{"title":"Hello World","date":"2016-10-17T01:28:16.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n### Quick Start\n\n#### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n#### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n#### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n#### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2016-10-17 09:28:16\ntags: PHP\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n### Quick Start\n\n#### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n#### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n#### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n#### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2017-12-28T14:51:32.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd4j000qosmmnp6xbkin","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h3 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h3><h4 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h4 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h4 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h4 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h3 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h3><h4 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h4 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h4 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h4 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"各种轮播图插件","date":"2017-08-25T09:18:48.000Z","_content":"<img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-22.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### 查看网址\n\nhttp://www.swiper.com.cn/demo/index.html\n","source":"_posts/各种轮播图.md","raw":"---\ntitle: 各种轮播图插件\ndate: 2017-8-25 17:18:48\ntags:\n - Swiper\n---\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-22.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### 查看网址\n\nhttp://www.swiper.com.cn/demo/index.html\n","slug":"各种轮播图","published":1,"updated":"2017-12-29T12:52:27.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd4m000sosmmijk2pjul","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-22.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"查看网址\"><a href=\"#查看网址\" class=\"headerlink\" title=\"查看网址\"></a>查看网址</h3><p><a href=\"http://www.swiper.com.cn/demo/index.html\" target=\"_blank\" rel=\"external\">http://www.swiper.com.cn/demo/index.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-22.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"查看网址\"><a href=\"#查看网址\" class=\"headerlink\" title=\"查看网址\"></a>查看网址</h3><p><a href=\"http://www.swiper.com.cn/demo/index.html\" target=\"_blank\" rel=\"external\">http://www.swiper.com.cn/demo/index.html</a></p>\n"},{"title":"Python爬虫爬取校花网图片","date":"2017-09-13T09:20:43.000Z","_content":"\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n\n基于Python3.5爬虫\n\n```\nimport requests\nimport re\nfrom bs4 import BeautifulSoup\n\n```\n1.首先要引入包\n2.如有缺包请 pip install requests 等\n\n### 直接上爬虫代码\n\n```\nimport requests\nimport re\nfrom bs4 import BeautifulSoup\n\ndef gethtml(num):\n    header = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36'}\n    try:\n        if num == 1:\n            url = 'http://www.xiaohuar.com/hua/'\n        else:\n            url = 'http://www.xiaohuar.com/list-1-'+str(num)+'.html'\n        res = requests.get(url,headers = header,timeout=10)\n        res.raise_for_status()\n        res.encoding = res.apparent_encoding#转码\n        print('爬取第{}页:'.format(num))\n        return res.text\n    except:\n        print(\"链接异常！！！\")\n        return ''\n\ndef findhtml(text,ulist):\n    soup = BeautifulSoup(text,'lxml')\n    links = soup.find_all('div',class_='item')\n    mainurl = 'http://www.xiaohuar.com'\n    for link in links:\n        #获取标题\n        title = link.find('img')['alt']\n        #获取图片链接\n        imgurl = link.find('img')['src']\n        #获取后缀\n        zhui = imgurl[-4:]\n        #拼接图片名称\n        imgname = title + zhui\n        print(imgname)\n        #图片下载地址\n        imgurlinfo = mainurl + imgurl\n        img = requests.get(imgurlinfo)\n        with open('./xiaohua/'+imgname,\"wb\") as code:\n            code.write(img.content)\n    \nif __name__ == '__main__':\n    ulist = []\n    for i in range(1,5):\n        text = gethtml(i)\n        findhtml(text,ulist)\n\n\n```\n### ","source":"_posts/python小花网爬虫.md","raw":"---\ntitle: Python爬虫爬取校花网图片\ndate: 2017-9-13 17:20:43\ntags:\n - Python\n---\n\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n\n基于Python3.5爬虫\n\n```\nimport requests\nimport re\nfrom bs4 import BeautifulSoup\n\n```\n1.首先要引入包\n2.如有缺包请 pip install requests 等\n\n### 直接上爬虫代码\n\n```\nimport requests\nimport re\nfrom bs4 import BeautifulSoup\n\ndef gethtml(num):\n    header = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36'}\n    try:\n        if num == 1:\n            url = 'http://www.xiaohuar.com/hua/'\n        else:\n            url = 'http://www.xiaohuar.com/list-1-'+str(num)+'.html'\n        res = requests.get(url,headers = header,timeout=10)\n        res.raise_for_status()\n        res.encoding = res.apparent_encoding#转码\n        print('爬取第{}页:'.format(num))\n        return res.text\n    except:\n        print(\"链接异常！！！\")\n        return ''\n\ndef findhtml(text,ulist):\n    soup = BeautifulSoup(text,'lxml')\n    links = soup.find_all('div',class_='item')\n    mainurl = 'http://www.xiaohuar.com'\n    for link in links:\n        #获取标题\n        title = link.find('img')['alt']\n        #获取图片链接\n        imgurl = link.find('img')['src']\n        #获取后缀\n        zhui = imgurl[-4:]\n        #拼接图片名称\n        imgname = title + zhui\n        print(imgname)\n        #图片下载地址\n        imgurlinfo = mainurl + imgurl\n        img = requests.get(imgurlinfo)\n        with open('./xiaohua/'+imgname,\"wb\") as code:\n            code.write(img.content)\n    \nif __name__ == '__main__':\n    ulist = []\n    for i in range(1,5):\n        text = gethtml(i)\n        findhtml(text,ulist)\n\n\n```\n### ","slug":"python小花网爬虫","published":1,"updated":"2017-12-29T12:51:50.302Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd4s000vosmmftiomj12","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<p>基于Python3.5爬虫</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">import requests</div><div class=\"line\">import re</div><div class=\"line\">from bs4 import BeautifulSoup</div></pre></td></tr></table></figure>\n<p>1.首先要引入包<br>2.如有缺包请 pip install requests 等</p>\n<h3 id=\"直接上爬虫代码\"><a href=\"#直接上爬虫代码\" class=\"headerlink\" title=\"直接上爬虫代码\"></a>直接上爬虫代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">import requests</div><div class=\"line\">import re</div><div class=\"line\">from bs4 import BeautifulSoup</div><div class=\"line\"></div><div class=\"line\">def gethtml(num):</div><div class=\"line\">    header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36&apos;&#125;</div><div class=\"line\">    try:</div><div class=\"line\">        if num == 1:</div><div class=\"line\">            url = &apos;http://www.xiaohuar.com/hua/&apos;</div><div class=\"line\">        else:</div><div class=\"line\">            url = &apos;http://www.xiaohuar.com/list-1-&apos;+str(num)+&apos;.html&apos;</div><div class=\"line\">        res = requests.get(url,headers = header,timeout=10)</div><div class=\"line\">        res.raise_for_status()</div><div class=\"line\">        res.encoding = res.apparent_encoding#转码</div><div class=\"line\">        print(&apos;爬取第&#123;&#125;页:&apos;.format(num))</div><div class=\"line\">        return res.text</div><div class=\"line\">    except:</div><div class=\"line\">        print(&quot;链接异常！！！&quot;)</div><div class=\"line\">        return &apos;&apos;</div><div class=\"line\"></div><div class=\"line\">def findhtml(text,ulist):</div><div class=\"line\">    soup = BeautifulSoup(text,&apos;lxml&apos;)</div><div class=\"line\">    links = soup.find_all(&apos;div&apos;,class_=&apos;item&apos;)</div><div class=\"line\">    mainurl = &apos;http://www.xiaohuar.com&apos;</div><div class=\"line\">    for link in links:</div><div class=\"line\">        #获取标题</div><div class=\"line\">        title = link.find(&apos;img&apos;)[&apos;alt&apos;]</div><div class=\"line\">        #获取图片链接</div><div class=\"line\">        imgurl = link.find(&apos;img&apos;)[&apos;src&apos;]</div><div class=\"line\">        #获取后缀</div><div class=\"line\">        zhui = imgurl[-4:]</div><div class=\"line\">        #拼接图片名称</div><div class=\"line\">        imgname = title + zhui</div><div class=\"line\">        print(imgname)</div><div class=\"line\">        #图片下载地址</div><div class=\"line\">        imgurlinfo = mainurl + imgurl</div><div class=\"line\">        img = requests.get(imgurlinfo)</div><div class=\"line\">        with open(&apos;./xiaohua/&apos;+imgname,&quot;wb&quot;) as code:</div><div class=\"line\">            code.write(img.content)</div><div class=\"line\">    </div><div class=\"line\">if __name__ == &apos;__main__&apos;:</div><div class=\"line\">    ulist = []</div><div class=\"line\">    for i in range(1,5):</div><div class=\"line\">        text = gethtml(i)</div><div class=\"line\">        findhtml(text,ulist)</div></pre></td></tr></table></figure>\n<p>### </p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<p>基于Python3.5爬虫</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">import requests</div><div class=\"line\">import re</div><div class=\"line\">from bs4 import BeautifulSoup</div></pre></td></tr></table></figure>\n<p>1.首先要引入包<br>2.如有缺包请 pip install requests 等</p>\n<h3 id=\"直接上爬虫代码\"><a href=\"#直接上爬虫代码\" class=\"headerlink\" title=\"直接上爬虫代码\"></a>直接上爬虫代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">import requests</div><div class=\"line\">import re</div><div class=\"line\">from bs4 import BeautifulSoup</div><div class=\"line\"></div><div class=\"line\">def gethtml(num):</div><div class=\"line\">    header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36&apos;&#125;</div><div class=\"line\">    try:</div><div class=\"line\">        if num == 1:</div><div class=\"line\">            url = &apos;http://www.xiaohuar.com/hua/&apos;</div><div class=\"line\">        else:</div><div class=\"line\">            url = &apos;http://www.xiaohuar.com/list-1-&apos;+str(num)+&apos;.html&apos;</div><div class=\"line\">        res = requests.get(url,headers = header,timeout=10)</div><div class=\"line\">        res.raise_for_status()</div><div class=\"line\">        res.encoding = res.apparent_encoding#转码</div><div class=\"line\">        print(&apos;爬取第&#123;&#125;页:&apos;.format(num))</div><div class=\"line\">        return res.text</div><div class=\"line\">    except:</div><div class=\"line\">        print(&quot;链接异常！！！&quot;)</div><div class=\"line\">        return &apos;&apos;</div><div class=\"line\"></div><div class=\"line\">def findhtml(text,ulist):</div><div class=\"line\">    soup = BeautifulSoup(text,&apos;lxml&apos;)</div><div class=\"line\">    links = soup.find_all(&apos;div&apos;,class_=&apos;item&apos;)</div><div class=\"line\">    mainurl = &apos;http://www.xiaohuar.com&apos;</div><div class=\"line\">    for link in links:</div><div class=\"line\">        #获取标题</div><div class=\"line\">        title = link.find(&apos;img&apos;)[&apos;alt&apos;]</div><div class=\"line\">        #获取图片链接</div><div class=\"line\">        imgurl = link.find(&apos;img&apos;)[&apos;src&apos;]</div><div class=\"line\">        #获取后缀</div><div class=\"line\">        zhui = imgurl[-4:]</div><div class=\"line\">        #拼接图片名称</div><div class=\"line\">        imgname = title + zhui</div><div class=\"line\">        print(imgname)</div><div class=\"line\">        #图片下载地址</div><div class=\"line\">        imgurlinfo = mainurl + imgurl</div><div class=\"line\">        img = requests.get(imgurlinfo)</div><div class=\"line\">        with open(&apos;./xiaohua/&apos;+imgname,&quot;wb&quot;) as code:</div><div class=\"line\">            code.write(img.content)</div><div class=\"line\">    </div><div class=\"line\">if __name__ == &apos;__main__&apos;:</div><div class=\"line\">    ulist = []</div><div class=\"line\">    for i in range(1,5):</div><div class=\"line\">        text = gethtml(i)</div><div class=\"line\">        findhtml(text,ulist)</div></pre></td></tr></table></figure>\n<p>### </p>\n"},{"title":"setTimeout()的使用方法","date":"2017-07-27T13:26:27.000Z","_content":"\n### 定义:\n<font color=\"#FF4081\">setTimeout()方法在很多文档中是说 \"用于在指定的毫秒数后调用函数或计算表达式\",比较含糊;其实就是规定在一段时间内,调用一个函数进行延时操作;比如从一个页面2秒后跳转到另一个页面;</font>\n\n### 用法:\n\n<font color=\"#FF4081\">我这有个ajax方法:</font>\n```\n //要跳转的页面地址\n var url = \"<?=site_url(\"smallshop/shopcart/dosave?key={$key}&cmid={$cmid}\")?>\";\n   $.post(url,dt,function(data){\n\t\t  if (data.status == 0){//表示请求成功,返回成功状态\n\t\t      //成功后利用layer弹窗插件进行提示说明\n\t\t\t  layer.open({content: data.info,skin: 'msg',time: 2 });\n\t\t\t  //根据倒计时函数在两秒后跳转到指定的页面\n\t\t\t  setTimeout(function () {\n\t\t\t  \twindow.location.href = '<?=site_url(\"smallshop/channel/index?key={$key}&cmid={$cmid}\")?>';\n\t\t\t  },2000);\n\t\t  }else{//表示请求失败,并提示失败信息\n\t\t\t  layer.open({content: data.info,skin: 'msg',time: 2 });\n\t\t  }\n\t  },'json');\n\n```\n### 总结:\n\n<font color=\"#FF4081\"> setTimeout() 通常是与 function 一起使用</font>\n","source":"_posts/setTimeout().md","raw":"---\ntitle: setTimeout()的使用方法\ndate: 2017-7-27 21:26:27\ntags:\n\t- jQery\n\t- PHP\n---\n\n### 定义:\n<font color=\"#FF4081\">setTimeout()方法在很多文档中是说 \"用于在指定的毫秒数后调用函数或计算表达式\",比较含糊;其实就是规定在一段时间内,调用一个函数进行延时操作;比如从一个页面2秒后跳转到另一个页面;</font>\n\n### 用法:\n\n<font color=\"#FF4081\">我这有个ajax方法:</font>\n```\n //要跳转的页面地址\n var url = \"<?=site_url(\"smallshop/shopcart/dosave?key={$key}&cmid={$cmid}\")?>\";\n   $.post(url,dt,function(data){\n\t\t  if (data.status == 0){//表示请求成功,返回成功状态\n\t\t      //成功后利用layer弹窗插件进行提示说明\n\t\t\t  layer.open({content: data.info,skin: 'msg',time: 2 });\n\t\t\t  //根据倒计时函数在两秒后跳转到指定的页面\n\t\t\t  setTimeout(function () {\n\t\t\t  \twindow.location.href = '<?=site_url(\"smallshop/channel/index?key={$key}&cmid={$cmid}\")?>';\n\t\t\t  },2000);\n\t\t  }else{//表示请求失败,并提示失败信息\n\t\t\t  layer.open({content: data.info,skin: 'msg',time: 2 });\n\t\t  }\n\t  },'json');\n\n```\n### 总结:\n\n<font color=\"#FF4081\"> setTimeout() 通常是与 function 一起使用</font>\n","slug":"setTimeout()","published":1,"updated":"2017-12-29T12:51:58.575Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd4x000xosmmwakr9cuu","content":"<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义:\"></a>定义:</h3><font color=\"#FF4081\">setTimeout()方法在很多文档中是说 “用于在指定的毫秒数后调用函数或计算表达式”,比较含糊;其实就是规定在一段时间内,调用一个函数进行延时操作;比如从一个页面2秒后跳转到另一个页面;</font>\n\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法:\"></a>用法:</h3><font color=\"#FF4081\">我这有个ajax方法:</font><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">//要跳转的页面地址</div><div class=\"line\">var url = &quot;&lt;?=site_url(&quot;smallshop/shopcart/dosave?key=&#123;$key&#125;&amp;cmid=&#123;$cmid&#125;&quot;)?&gt;&quot;;</div><div class=\"line\">  $.post(url,dt,function(data)&#123;</div><div class=\"line\">\t  if (data.status == 0)&#123;//表示请求成功,返回成功状态</div><div class=\"line\">\t      //成功后利用layer弹窗插件进行提示说明</div><div class=\"line\">\t\t  layer.open(&#123;content: data.info,skin: &apos;msg&apos;,time: 2 &#125;);</div><div class=\"line\">\t\t  //根据倒计时函数在两秒后跳转到指定的页面</div><div class=\"line\">\t\t  setTimeout(function () &#123;</div><div class=\"line\">\t\t  \twindow.location.href = &apos;&lt;?=site_url(&quot;smallshop/channel/index?key=&#123;$key&#125;&amp;cmid=&#123;$cmid&#125;&quot;)?&gt;&apos;;</div><div class=\"line\">\t\t  &#125;,2000);</div><div class=\"line\">\t  &#125;else&#123;//表示请求失败,并提示失败信息</div><div class=\"line\">\t\t  layer.open(&#123;content: data.info,skin: &apos;msg&apos;,time: 2 &#125;);</div><div class=\"line\">\t  &#125;</div><div class=\"line\">  &#125;,&apos;json&apos;);</div></pre></td></tr></table></figure><br><br>### 总结:<br><br><font color=\"#FF4081\"> setTimeout() 通常是与 function 一起使用</font>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义:\"></a>定义:</h3><font color=\"#FF4081\">setTimeout()方法在很多文档中是说 “用于在指定的毫秒数后调用函数或计算表达式”,比较含糊;其实就是规定在一段时间内,调用一个函数进行延时操作;比如从一个页面2秒后跳转到另一个页面;</font>\n\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法:\"></a>用法:</h3><font color=\"#FF4081\">我这有个ajax方法:</font><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">//要跳转的页面地址</div><div class=\"line\">var url = &quot;&lt;?=site_url(&quot;smallshop/shopcart/dosave?key=&#123;$key&#125;&amp;cmid=&#123;$cmid&#125;&quot;)?&gt;&quot;;</div><div class=\"line\">  $.post(url,dt,function(data)&#123;</div><div class=\"line\">\t  if (data.status == 0)&#123;//表示请求成功,返回成功状态</div><div class=\"line\">\t      //成功后利用layer弹窗插件进行提示说明</div><div class=\"line\">\t\t  layer.open(&#123;content: data.info,skin: &apos;msg&apos;,time: 2 &#125;);</div><div class=\"line\">\t\t  //根据倒计时函数在两秒后跳转到指定的页面</div><div class=\"line\">\t\t  setTimeout(function () &#123;</div><div class=\"line\">\t\t  \twindow.location.href = &apos;&lt;?=site_url(&quot;smallshop/channel/index?key=&#123;$key&#125;&amp;cmid=&#123;$cmid&#125;&quot;)?&gt;&apos;;</div><div class=\"line\">\t\t  &#125;,2000);</div><div class=\"line\">\t  &#125;else&#123;//表示请求失败,并提示失败信息</div><div class=\"line\">\t\t  layer.open(&#123;content: data.info,skin: &apos;msg&apos;,time: 2 &#125;);</div><div class=\"line\">\t  &#125;</div><div class=\"line\">  &#125;,&apos;json&apos;);</div></pre></td></tr></table></figure><br><br>### 总结:<br><br><font color=\"#FF4081\"> setTimeout() 通常是与 function 一起使用</font>\n"},{"title":"多PC更新博客","date":"2017-10-23T15:00:37.000Z","_content":"测试多个pc同时发布文章\n","source":"_posts/多pc跟新博客.md","raw":"---\ntitle: 多PC更新博客\ndate: 2017-10-23 23:00:37\ntags:\n - GIthub\n---\n测试多个pc同时发布文章\n","slug":"多pc跟新博客","published":1,"updated":"2017-12-29T12:52:20.648Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd500010osmm45xa1kts","content":"<p>测试多个pc同时发布文章</p>\n","site":{"data":{}},"excerpt":"","more":"<p>测试多个pc同时发布文章</p>\n"},{"title":"Python爬虫爬取校花网图片","date":"2017-09-13T09:20:43.000Z","_content":"\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n\n基于Python3.5爬虫\n\n```\nimport requests\nimport re\nfrom bs4 import BeautifulSoup\n\n```\n1.首先要引入包\n2.如有缺包请 pip install requests 等\n\n### 直接上爬虫代码\n\n```\nimport requests\nimport re\nfrom bs4 import BeautifulSoup\n\ndef gethtml(num):\n    header = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36'}\n    try:\n        if num == 1:\n            url = 'http://www.xiaohuar.com/hua/'\n        else:\n            url = 'http://www.xiaohuar.com/list-1-'+str(num)+'.html'\n        res = requests.get(url,headers = header,timeout=10)\n        res.raise_for_status()\n        res.encoding = res.apparent_encoding#转码\n        print('爬取第{}页:'.format(num))\n        return res.text\n    except:\n        print(\"链接异常！！！\")\n        return ''\n\ndef findhtml(text,ulist):\n    soup = BeautifulSoup(text,'lxml')\n    links = soup.find_all('div',class_='item')\n    mainurl = 'http://www.xiaohuar.com'\n    for link in links:\n        #获取标题\n        title = link.find('img')['alt']\n        #获取图片链接\n        imgurl = link.find('img')['src']\n        #获取后缀\n        zhui = imgurl[-4:]\n        #拼接图片名称\n        imgname = title + zhui\n        print(imgname)\n        #图片下载地址\n        imgurlinfo = mainurl + imgurl\n        img = requests.get(imgurlinfo)\n        with open('./xiaohua/'+imgname,\"wb\") as code:\n            code.write(img.content)\n    \nif __name__ == '__main__':\n    ulist = []\n    for i in range(1,5):\n        text = gethtml(i)\n        findhtml(text,ulist)\n\n\n```\n### ","source":"_posts/python爬虫.md","raw":"---\ntitle: Python爬虫爬取校花网图片\ndate: 2017-9-13 17:20:43\ntags:\n - Python\n---\n\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n\n基于Python3.5爬虫\n\n```\nimport requests\nimport re\nfrom bs4 import BeautifulSoup\n\n```\n1.首先要引入包\n2.如有缺包请 pip install requests 等\n\n### 直接上爬虫代码\n\n```\nimport requests\nimport re\nfrom bs4 import BeautifulSoup\n\ndef gethtml(num):\n    header = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36'}\n    try:\n        if num == 1:\n            url = 'http://www.xiaohuar.com/hua/'\n        else:\n            url = 'http://www.xiaohuar.com/list-1-'+str(num)+'.html'\n        res = requests.get(url,headers = header,timeout=10)\n        res.raise_for_status()\n        res.encoding = res.apparent_encoding#转码\n        print('爬取第{}页:'.format(num))\n        return res.text\n    except:\n        print(\"链接异常！！！\")\n        return ''\n\ndef findhtml(text,ulist):\n    soup = BeautifulSoup(text,'lxml')\n    links = soup.find_all('div',class_='item')\n    mainurl = 'http://www.xiaohuar.com'\n    for link in links:\n        #获取标题\n        title = link.find('img')['alt']\n        #获取图片链接\n        imgurl = link.find('img')['src']\n        #获取后缀\n        zhui = imgurl[-4:]\n        #拼接图片名称\n        imgname = title + zhui\n        print(imgname)\n        #图片下载地址\n        imgurlinfo = mainurl + imgurl\n        img = requests.get(imgurlinfo)\n        with open('./xiaohua/'+imgname,\"wb\") as code:\n            code.write(img.content)\n    \nif __name__ == '__main__':\n    ulist = []\n    for i in range(1,5):\n        text = gethtml(i)\n        findhtml(text,ulist)\n\n\n```\n### ","slug":"python爬虫","published":1,"updated":"2017-12-29T12:51:40.140Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd560012osmmto3o3pg2","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<p>基于Python3.5爬虫</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">import requests</div><div class=\"line\">import re</div><div class=\"line\">from bs4 import BeautifulSoup</div></pre></td></tr></table></figure>\n<p>1.首先要引入包<br>2.如有缺包请 pip install requests 等</p>\n<h3 id=\"直接上爬虫代码\"><a href=\"#直接上爬虫代码\" class=\"headerlink\" title=\"直接上爬虫代码\"></a>直接上爬虫代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">import requests</div><div class=\"line\">import re</div><div class=\"line\">from bs4 import BeautifulSoup</div><div class=\"line\"></div><div class=\"line\">def gethtml(num):</div><div class=\"line\">    header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36&apos;&#125;</div><div class=\"line\">    try:</div><div class=\"line\">        if num == 1:</div><div class=\"line\">            url = &apos;http://www.xiaohuar.com/hua/&apos;</div><div class=\"line\">        else:</div><div class=\"line\">            url = &apos;http://www.xiaohuar.com/list-1-&apos;+str(num)+&apos;.html&apos;</div><div class=\"line\">        res = requests.get(url,headers = header,timeout=10)</div><div class=\"line\">        res.raise_for_status()</div><div class=\"line\">        res.encoding = res.apparent_encoding#转码</div><div class=\"line\">        print(&apos;爬取第&#123;&#125;页:&apos;.format(num))</div><div class=\"line\">        return res.text</div><div class=\"line\">    except:</div><div class=\"line\">        print(&quot;链接异常！！！&quot;)</div><div class=\"line\">        return &apos;&apos;</div><div class=\"line\"></div><div class=\"line\">def findhtml(text,ulist):</div><div class=\"line\">    soup = BeautifulSoup(text,&apos;lxml&apos;)</div><div class=\"line\">    links = soup.find_all(&apos;div&apos;,class_=&apos;item&apos;)</div><div class=\"line\">    mainurl = &apos;http://www.xiaohuar.com&apos;</div><div class=\"line\">    for link in links:</div><div class=\"line\">        #获取标题</div><div class=\"line\">        title = link.find(&apos;img&apos;)[&apos;alt&apos;]</div><div class=\"line\">        #获取图片链接</div><div class=\"line\">        imgurl = link.find(&apos;img&apos;)[&apos;src&apos;]</div><div class=\"line\">        #获取后缀</div><div class=\"line\">        zhui = imgurl[-4:]</div><div class=\"line\">        #拼接图片名称</div><div class=\"line\">        imgname = title + zhui</div><div class=\"line\">        print(imgname)</div><div class=\"line\">        #图片下载地址</div><div class=\"line\">        imgurlinfo = mainurl + imgurl</div><div class=\"line\">        img = requests.get(imgurlinfo)</div><div class=\"line\">        with open(&apos;./xiaohua/&apos;+imgname,&quot;wb&quot;) as code:</div><div class=\"line\">            code.write(img.content)</div><div class=\"line\">    </div><div class=\"line\">if __name__ == &apos;__main__&apos;:</div><div class=\"line\">    ulist = []</div><div class=\"line\">    for i in range(1,5):</div><div class=\"line\">        text = gethtml(i)</div><div class=\"line\">        findhtml(text,ulist)</div></pre></td></tr></table></figure>\n<p>### </p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timg.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<p>基于Python3.5爬虫</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">import requests</div><div class=\"line\">import re</div><div class=\"line\">from bs4 import BeautifulSoup</div></pre></td></tr></table></figure>\n<p>1.首先要引入包<br>2.如有缺包请 pip install requests 等</p>\n<h3 id=\"直接上爬虫代码\"><a href=\"#直接上爬虫代码\" class=\"headerlink\" title=\"直接上爬虫代码\"></a>直接上爬虫代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">import requests</div><div class=\"line\">import re</div><div class=\"line\">from bs4 import BeautifulSoup</div><div class=\"line\"></div><div class=\"line\">def gethtml(num):</div><div class=\"line\">    header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36&apos;&#125;</div><div class=\"line\">    try:</div><div class=\"line\">        if num == 1:</div><div class=\"line\">            url = &apos;http://www.xiaohuar.com/hua/&apos;</div><div class=\"line\">        else:</div><div class=\"line\">            url = &apos;http://www.xiaohuar.com/list-1-&apos;+str(num)+&apos;.html&apos;</div><div class=\"line\">        res = requests.get(url,headers = header,timeout=10)</div><div class=\"line\">        res.raise_for_status()</div><div class=\"line\">        res.encoding = res.apparent_encoding#转码</div><div class=\"line\">        print(&apos;爬取第&#123;&#125;页:&apos;.format(num))</div><div class=\"line\">        return res.text</div><div class=\"line\">    except:</div><div class=\"line\">        print(&quot;链接异常！！！&quot;)</div><div class=\"line\">        return &apos;&apos;</div><div class=\"line\"></div><div class=\"line\">def findhtml(text,ulist):</div><div class=\"line\">    soup = BeautifulSoup(text,&apos;lxml&apos;)</div><div class=\"line\">    links = soup.find_all(&apos;div&apos;,class_=&apos;item&apos;)</div><div class=\"line\">    mainurl = &apos;http://www.xiaohuar.com&apos;</div><div class=\"line\">    for link in links:</div><div class=\"line\">        #获取标题</div><div class=\"line\">        title = link.find(&apos;img&apos;)[&apos;alt&apos;]</div><div class=\"line\">        #获取图片链接</div><div class=\"line\">        imgurl = link.find(&apos;img&apos;)[&apos;src&apos;]</div><div class=\"line\">        #获取后缀</div><div class=\"line\">        zhui = imgurl[-4:]</div><div class=\"line\">        #拼接图片名称</div><div class=\"line\">        imgname = title + zhui</div><div class=\"line\">        print(imgname)</div><div class=\"line\">        #图片下载地址</div><div class=\"line\">        imgurlinfo = mainurl + imgurl</div><div class=\"line\">        img = requests.get(imgurlinfo)</div><div class=\"line\">        with open(&apos;./xiaohua/&apos;+imgname,&quot;wb&quot;) as code:</div><div class=\"line\">            code.write(img.content)</div><div class=\"line\">    </div><div class=\"line\">if __name__ == &apos;__main__&apos;:</div><div class=\"line\">    ulist = []</div><div class=\"line\">    for i in range(1,5):</div><div class=\"line\">        text = gethtml(i)</div><div class=\"line\">        findhtml(text,ulist)</div></pre></td></tr></table></figure>\n<p>### </p>\n"},{"title":"如何在七牛云储存创建及使用空间","date":"2017-07-18T01:28:16.000Z","_content":"\n\n### 为什么选择七牛云\n1.直接在网页管理后台上传图片\n2.直接获取复制完整外链即可（注意右侧的图片预览功能，这个对于图片多了之后防止误操作很是实用）\n3.免费的使用空间和流量\n4.对于新用户，七牛云存储免费赠送10G 的使用空间+10G/月的流量，对于小博客来说，是完全够用了。\n\n### 如何新建空间\n\n[七牛云官网](https://portal.qiniu.com/bucket/myqiniu/resource)\n\n1.如果未注册请进行注册,注册完成之后(不实名认证也可以使用免费空间)点击左边一栏<font color=\"#1989FA\">新建存储空间</font>:\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_085754.png)\n\n2.然后填写:存储空间名称,存储区域,访问控制\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091204.png)\n\n3.填写好信息以后选择存储空间列表选择:内容管理,上传文件\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091248.png)\n\n4.选择文件\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091832.png)\n\n5.上传完成之后会有文件显示\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091900.png)\n\n6.可以预览和复制外链\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091940.png)\n\n> 是不是很简单啊.注:如果未实名是不允许创建私有空间的\n","source":"_posts/如何在七牛云储存创建及使用空间.md","raw":"---\ntitle: 如何在七牛云储存创建及使用空间\ndate: 2017-07-18 09:28:16\ntags:\n\t- 七牛云\n---\n\n\n### 为什么选择七牛云\n1.直接在网页管理后台上传图片\n2.直接获取复制完整外链即可（注意右侧的图片预览功能，这个对于图片多了之后防止误操作很是实用）\n3.免费的使用空间和流量\n4.对于新用户，七牛云存储免费赠送10G 的使用空间+10G/月的流量，对于小博客来说，是完全够用了。\n\n### 如何新建空间\n\n[七牛云官网](https://portal.qiniu.com/bucket/myqiniu/resource)\n\n1.如果未注册请进行注册,注册完成之后(不实名认证也可以使用免费空间)点击左边一栏<font color=\"#1989FA\">新建存储空间</font>:\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_085754.png)\n\n2.然后填写:存储空间名称,存储区域,访问控制\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091204.png)\n\n3.填写好信息以后选择存储空间列表选择:内容管理,上传文件\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091248.png)\n\n4.选择文件\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091832.png)\n\n5.上传完成之后会有文件显示\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091900.png)\n\n6.可以预览和复制外链\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091940.png)\n\n> 是不是很简单啊.注:如果未实名是不允许创建私有空间的\n","slug":"如何在七牛云储存创建及使用空间","published":1,"updated":"2017-12-28T14:51:32.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd580015osmm07ulbzf0","content":"<h3 id=\"为什么选择七牛云\"><a href=\"#为什么选择七牛云\" class=\"headerlink\" title=\"为什么选择七牛云\"></a>为什么选择七牛云</h3><p>1.直接在网页管理后台上传图片<br>2.直接获取复制完整外链即可（注意右侧的图片预览功能，这个对于图片多了之后防止误操作很是实用）<br>3.免费的使用空间和流量<br>4.对于新用户，七牛云存储免费赠送10G 的使用空间+10G/月的流量，对于小博客来说，是完全够用了。</p>\n<h3 id=\"如何新建空间\"><a href=\"#如何新建空间\" class=\"headerlink\" title=\"如何新建空间\"></a>如何新建空间</h3><p><a href=\"https://portal.qiniu.com/bucket/myqiniu/resource\" target=\"_blank\" rel=\"external\">七牛云官网</a></p>\n<p>1.如果未注册请进行注册,注册完成之后(不实名认证也可以使用免费空间)点击左边一栏<font color=\"#1989FA\">新建存储空间</font>:</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_085754.png\" alt=\"\"></p>\n<p>2.然后填写:存储空间名称,存储区域,访问控制</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091204.png\" alt=\"\"></p>\n<p>3.填写好信息以后选择存储空间列表选择:内容管理,上传文件</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091248.png\" alt=\"\"></p>\n<p>4.选择文件</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091832.png\" alt=\"\"></p>\n<p>5.上传完成之后会有文件显示</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091900.png\" alt=\"\"></p>\n<p>6.可以预览和复制外链<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091940.png\" alt=\"\"></p>\n<blockquote>\n<p>是不是很简单啊.注:如果未实名是不允许创建私有空间的</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"为什么选择七牛云\"><a href=\"#为什么选择七牛云\" class=\"headerlink\" title=\"为什么选择七牛云\"></a>为什么选择七牛云</h3><p>1.直接在网页管理后台上传图片<br>2.直接获取复制完整外链即可（注意右侧的图片预览功能，这个对于图片多了之后防止误操作很是实用）<br>3.免费的使用空间和流量<br>4.对于新用户，七牛云存储免费赠送10G 的使用空间+10G/月的流量，对于小博客来说，是完全够用了。</p>\n<h3 id=\"如何新建空间\"><a href=\"#如何新建空间\" class=\"headerlink\" title=\"如何新建空间\"></a>如何新建空间</h3><p><a href=\"https://portal.qiniu.com/bucket/myqiniu/resource\" target=\"_blank\" rel=\"external\">七牛云官网</a></p>\n<p>1.如果未注册请进行注册,注册完成之后(不实名认证也可以使用免费空间)点击左边一栏<font color=\"#1989FA\">新建存储空间</font>:</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_085754.png\" alt=\"\"></p>\n<p>2.然后填写:存储空间名称,存储区域,访问控制</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091204.png\" alt=\"\"></p>\n<p>3.填写好信息以后选择存储空间列表选择:内容管理,上传文件</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091248.png\" alt=\"\"></p>\n<p>4.选择文件</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091832.png\" alt=\"\"></p>\n<p>5.上传完成之后会有文件显示</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091900.png\" alt=\"\"></p>\n<p>6.可以预览和复制外链<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-19_091940.png\" alt=\"\"></p>\n<blockquote>\n<p>是不是很简单啊.注:如果未实名是不允许创建私有空间的</p>\n</blockquote>\n"},{"title":"window下wamp开发环境如何安装redis","date":"2017-08-21T08:06:38.000Z","_content":"<img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-13.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n\n### php安装redis扩展\n1.PHP必须要安装redis扩展\n\n2.在安装之前一定要看PHP版本信息（ps：由于我没有看，导致一直安装不成功）。查看方法在wamp/www下新建info.php文件内容如下:\n\n```\n<?php\nphpinfo();\n\n```\n3.查看版本信息:\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_161536.jpg)\n\n4.下载redis扩展php_redis.dll和php_igbinary.dll:\n\nhttp://pecl.php.net/package/redis/2.2.7/windows\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_161921.jpg)\n\nhttp://windows.php.net/downloads/pecl/releases/igbinary/1.2.1/\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162003.jpg)\n\n5.下载完解压缩后，将php_redis.dll和php_igbinary.dll拷贝至php的ext目录下:\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162552.jpg)\n\n6.然后修改wamp/bin/apache/apache2.4.9/bin/php.ini，在该文件中加入：\n\n```\n; php_redis\nextension=php_igbinary.dll\nextension=php_redis.dll\n\n```\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162910.jpg)\n\n7.重启Apache后，使用phpinfo查看扩展是否成功安装\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162020.jpg)\n\n8.开启redis服务。进入redis的目录我的是在（d:/redis）开启服务\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_165739.jpg)\n\n9.开启成功会显示：\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_165912.jpg)\n\n10.新建一个redistest.php测试\n```\n<?php\n    $redis = new Redis();\n    $redis->connect('127.0.0.1',6379);\n    $redis->auth('123456');\n    $redis->set('test','hello redis');\n    echo $redis->get('test');\n?>\n\n```\n11.最后得到结果\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_170114.jpg)\n","source":"_posts/wamp下如何安装redis.md","raw":"---\ntitle: window下wamp开发环境如何安装redis\ndate: 2017-8-21 16:06:38\ntags:\n - redis\n---\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-13.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n\n### php安装redis扩展\n1.PHP必须要安装redis扩展\n\n2.在安装之前一定要看PHP版本信息（ps：由于我没有看，导致一直安装不成功）。查看方法在wamp/www下新建info.php文件内容如下:\n\n```\n<?php\nphpinfo();\n\n```\n3.查看版本信息:\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_161536.jpg)\n\n4.下载redis扩展php_redis.dll和php_igbinary.dll:\n\nhttp://pecl.php.net/package/redis/2.2.7/windows\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_161921.jpg)\n\nhttp://windows.php.net/downloads/pecl/releases/igbinary/1.2.1/\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162003.jpg)\n\n5.下载完解压缩后，将php_redis.dll和php_igbinary.dll拷贝至php的ext目录下:\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162552.jpg)\n\n6.然后修改wamp/bin/apache/apache2.4.9/bin/php.ini，在该文件中加入：\n\n```\n; php_redis\nextension=php_igbinary.dll\nextension=php_redis.dll\n\n```\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162910.jpg)\n\n7.重启Apache后，使用phpinfo查看扩展是否成功安装\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162020.jpg)\n\n8.开启redis服务。进入redis的目录我的是在（d:/redis）开启服务\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_165739.jpg)\n\n9.开启成功会显示：\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_165912.jpg)\n\n10.新建一个redistest.php测试\n```\n<?php\n    $redis = new Redis();\n    $redis->connect('127.0.0.1',6379);\n    $redis->auth('123456');\n    $redis->set('test','hello redis');\n    echo $redis->get('test');\n?>\n\n```\n11.最后得到结果\n![](http://otbcgjn6c.bkt.clouddn.com/2017-08-21_170114.jpg)\n","slug":"wamp下如何安装redis","published":1,"updated":"2017-12-29T12:52:13.301Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd5a0017osmm22dw95zf","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-13.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"php安装redis扩展\"><a href=\"#php安装redis扩展\" class=\"headerlink\" title=\"php安装redis扩展\"></a>php安装redis扩展</h3><p>1.PHP必须要安装redis扩展</p>\n<p>2.在安装之前一定要看PHP版本信息（ps：由于我没有看，导致一直安装不成功）。查看方法在wamp/www下新建info.php文件内容如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">phpinfo();</div></pre></td></tr></table></figure>\n<p>3.查看版本信息:<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_161536.jpg\" alt=\"\"></p>\n<p>4.下载redis扩展php_redis.dll和php_igbinary.dll:</p>\n<p><a href=\"http://pecl.php.net/package/redis/2.2.7/windows\" target=\"_blank\" rel=\"external\">http://pecl.php.net/package/redis/2.2.7/windows</a></p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_161921.jpg\" alt=\"\"></p>\n<p><a href=\"http://windows.php.net/downloads/pecl/releases/igbinary/1.2.1/\" target=\"_blank\" rel=\"external\">http://windows.php.net/downloads/pecl/releases/igbinary/1.2.1/</a><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162003.jpg\" alt=\"\"></p>\n<p>5.下载完解压缩后，将php_redis.dll和php_igbinary.dll拷贝至php的ext目录下:<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162552.jpg\" alt=\"\"></p>\n<p>6.然后修改wamp/bin/apache/apache2.4.9/bin/php.ini，在该文件中加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">; php_redis</div><div class=\"line\">extension=php_igbinary.dll</div><div class=\"line\">extension=php_redis.dll</div></pre></td></tr></table></figure>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162910.jpg\" alt=\"\"></p>\n<p>7.重启Apache后，使用phpinfo查看扩展是否成功安装<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162020.jpg\" alt=\"\"></p>\n<p>8.开启redis服务。进入redis的目录我的是在（d:/redis）开启服务<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_165739.jpg\" alt=\"\"></p>\n<p>9.开启成功会显示：<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_165912.jpg\" alt=\"\"></p>\n<p>10.新建一个redistest.php测试<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $redis = new Redis();</div><div class=\"line\">    $redis-&gt;connect(&apos;127.0.0.1&apos;,6379);</div><div class=\"line\">    $redis-&gt;auth(&apos;123456&apos;);</div><div class=\"line\">    $redis-&gt;set(&apos;test&apos;,&apos;hello redis&apos;);</div><div class=\"line\">    echo $redis-&gt;get(&apos;test&apos;);</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p>11.最后得到结果<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_170114.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-13.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"php安装redis扩展\"><a href=\"#php安装redis扩展\" class=\"headerlink\" title=\"php安装redis扩展\"></a>php安装redis扩展</h3><p>1.PHP必须要安装redis扩展</p>\n<p>2.在安装之前一定要看PHP版本信息（ps：由于我没有看，导致一直安装不成功）。查看方法在wamp/www下新建info.php文件内容如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">phpinfo();</div></pre></td></tr></table></figure>\n<p>3.查看版本信息:<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_161536.jpg\" alt=\"\"></p>\n<p>4.下载redis扩展php_redis.dll和php_igbinary.dll:</p>\n<p><a href=\"http://pecl.php.net/package/redis/2.2.7/windows\" target=\"_blank\" rel=\"external\">http://pecl.php.net/package/redis/2.2.7/windows</a></p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_161921.jpg\" alt=\"\"></p>\n<p><a href=\"http://windows.php.net/downloads/pecl/releases/igbinary/1.2.1/\" target=\"_blank\" rel=\"external\">http://windows.php.net/downloads/pecl/releases/igbinary/1.2.1/</a><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162003.jpg\" alt=\"\"></p>\n<p>5.下载完解压缩后，将php_redis.dll和php_igbinary.dll拷贝至php的ext目录下:<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162552.jpg\" alt=\"\"></p>\n<p>6.然后修改wamp/bin/apache/apache2.4.9/bin/php.ini，在该文件中加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">; php_redis</div><div class=\"line\">extension=php_igbinary.dll</div><div class=\"line\">extension=php_redis.dll</div></pre></td></tr></table></figure>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162910.jpg\" alt=\"\"></p>\n<p>7.重启Apache后，使用phpinfo查看扩展是否成功安装<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162020.jpg\" alt=\"\"></p>\n<p>8.开启redis服务。进入redis的目录我的是在（d:/redis）开启服务<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_165739.jpg\" alt=\"\"></p>\n<p>9.开启成功会显示：<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_165912.jpg\" alt=\"\"></p>\n<p>10.新建一个redistest.php测试<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $redis = new Redis();</div><div class=\"line\">    $redis-&gt;connect(&apos;127.0.0.1&apos;,6379);</div><div class=\"line\">    $redis-&gt;auth(&apos;123456&apos;);</div><div class=\"line\">    $redis-&gt;set(&apos;test&apos;,&apos;hello redis&apos;);</div><div class=\"line\">    echo $redis-&gt;get(&apos;test&apos;);</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p>11.最后得到结果<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-08-21_170114.jpg\" alt=\"\"></p>\n"},{"title":"手游H5页面","date":"2017-08-10T09:26:37.000Z","_content":"<img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-20.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### 手机演示地址\n\nhttps://github.com/yyb568/webgm\n\n> 前几天写了两张H5页面，自我感觉还不错，就趁着有时间又写了一张。\n\n### 效果图\n\n图一：\n<div align=center >\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/20170810173947.png\"  height = \"650\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n</div>\n\n图二：\n<div align=center >\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/20170810174010.png\"  height = \"650\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n</div>\n<br>\n > 以后会运用到实际工作中去。\n","source":"_posts/手游H5页面.md","raw":"---\ntitle: 手游H5页面\ndate: 2017-8-10 17:26:37\ntags:\n\t- HTML\n---\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-20.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n### 手机演示地址\n\nhttps://github.com/yyb568/webgm\n\n> 前几天写了两张H5页面，自我感觉还不错，就趁着有时间又写了一张。\n\n### 效果图\n\n图一：\n<div align=center >\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/20170810173947.png\"  height = \"650\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n</div>\n\n图二：\n<div align=center >\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/20170810174010.png\"  height = \"650\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n</div>\n<br>\n > 以后会运用到实际工作中去。\n","slug":"手游H5页面","published":1,"updated":"2017-12-29T12:53:02.513Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd5d0019osmm2y8eylgy","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-20.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"手机演示地址\"><a href=\"#手机演示地址\" class=\"headerlink\" title=\"手机演示地址\"></a>手机演示地址</h3><p><a href=\"https://github.com/yyb568/webgm\" target=\"_blank\" rel=\"external\">https://github.com/yyb568/webgm</a></p>\n<blockquote>\n<p>前几天写了两张H5页面，自我感觉还不错，就趁着有时间又写了一张。</p>\n</blockquote>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>图一：</p>\n<div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/20170810173947.png\" height=\"650\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div>\n\n<p>图二：</p>\n<p><div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/20170810174010.png\" height=\"650\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div><br><br></p>\n<blockquote>\n<p>以后会运用到实际工作中去。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-20.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"手机演示地址\"><a href=\"#手机演示地址\" class=\"headerlink\" title=\"手机演示地址\"></a>手机演示地址</h3><p><a href=\"https://github.com/yyb568/webgm\" target=\"_blank\" rel=\"external\">https://github.com/yyb568/webgm</a></p>\n<blockquote>\n<p>前几天写了两张H5页面，自我感觉还不错，就趁着有时间又写了一张。</p>\n</blockquote>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>图一：</p>\n<div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/20170810173947.png\" height=\"650\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div>\n\n<p>图二：</p>\n<p><div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/20170810174010.png\" height=\"650\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div><br><br></p>\n<blockquote>\n<p>以后会运用到实际工作中去。</p>\n</blockquote>\n"},{"title":"我的手机端H5页面","date":"2017-08-06T01:27:31.000Z","_content":"\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_131016.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n\n### 手机演示地址\n\nhttps://github.com/yyb568/webapp.git\n\n> 由于在工作中一直做后台和服务端,前端页面也有专门的人员来写,以至于前端代码忘得的快差不多了,就突然想起来写个页面看看效果咋样\n\n### 效果图\n1.图一:\n\n<div align=center >\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094909.png\"  height = \"650\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n</div>\n2.图二:\n<div align=center>\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094914.png\"  height = \"600\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\" />\n</div>\n\n3.图三\n<div align=center>\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094917.png\n\"  height = \"600\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n</div>\n\n4.图四\n\n<div align=center>\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094920.png\n\"  height = \"600\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n</div>\n","source":"_posts/我的H5页面.md","raw":"---\ntitle: 我的手机端H5页面\ndate: 2017-8 6 09:27:31\ntags:\n\t- HTML\n---\n\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_131016.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n\n### 手机演示地址\n\nhttps://github.com/yyb568/webapp.git\n\n> 由于在工作中一直做后台和服务端,前端页面也有专门的人员来写,以至于前端代码忘得的快差不多了,就突然想起来写个页面看看效果咋样\n\n### 效果图\n1.图一:\n\n<div align=center >\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094909.png\"  height = \"650\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n</div>\n2.图二:\n<div align=center>\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094914.png\"  height = \"600\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\" />\n</div>\n\n3.图三\n<div align=center>\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094917.png\n\"  height = \"600\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n</div>\n\n4.图四\n\n<div align=center>\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094920.png\n\"  height = \"600\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n</div>\n","slug":"我的H5页面","published":1,"updated":"2017-12-29T12:53:34.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd5f001cosmm498777lv","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_131016.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"手机演示地址\"><a href=\"#手机演示地址\" class=\"headerlink\" title=\"手机演示地址\"></a>手机演示地址</h3><p><a href=\"https://github.com/yyb568/webapp.git\" target=\"_blank\" rel=\"external\">https://github.com/yyb568/webapp.git</a></p>\n<blockquote>\n<p>由于在工作中一直做后台和服务端,前端页面也有专门的人员来写,以至于前端代码忘得的快差不多了,就突然想起来写个页面看看效果咋样</p>\n</blockquote>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>1.图一:</p>\n<div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094909.png\" height=\"650\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div><br>2.图二:<br><div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094914.png\" height=\"600\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div>\n\n<p>3.图三</p>\n<div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094917.png\n\" height=\"600\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div>\n\n<p>4.图四</p>\n<div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094920.png\n\" height=\"600\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_131016.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"手机演示地址\"><a href=\"#手机演示地址\" class=\"headerlink\" title=\"手机演示地址\"></a>手机演示地址</h3><p><a href=\"https://github.com/yyb568/webapp.git\" target=\"_blank\" rel=\"external\">https://github.com/yyb568/webapp.git</a></p>\n<blockquote>\n<p>由于在工作中一直做后台和服务端,前端页面也有专门的人员来写,以至于前端代码忘得的快差不多了,就突然想起来写个页面看看效果咋样</p>\n</blockquote>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>1.图一:</p>\n<div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094909.png\" height=\"650\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div><br>2.图二:<br><div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094914.png\" height=\"600\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div>\n\n<p>3.图三</p>\n<div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094917.png\n\" height=\"600\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div>\n\n<p>4.图四</p>\n<div align=\"center\"><br><img src=\"http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094920.png\n\" height=\"600\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"><br></div>\n"},{"title":"如何将本地代码上传到GitHub","date":"2017-07-31T07:35:46.000Z","_content":"\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-14.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n\n### 第一步\n\n安装Git Bash版本控制器: https://git-for-windows.github.io/\n\n### 第二步\n\n安装好之后进入到你的本地项目根目录,右击鼠标点击 Git Bash Here\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_154306.jpg)\n\n### 第三步\n\n执行git命令\n\n> git init\n\n### 第四步\n\n将项目的所有文件添加到仓库中\n如果想添加某个特定的文件，只需把.换成特定的文件名即可\n\n> git add .\n\n### 第五步\n\n将add的文件commit到仓库\n\n> git commit -m \"注释语句\"\n\n### 第六步\n\n去github上创建自己的仓库地址,如下图所示：\n##### 1.点击New repository\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_154916.jpg)\n##### 2.填写好仓库信息后点击Create repository创建\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_155434.jpg)\n##### 3.如下就是所创建的仓库,红圈是克隆下载地址暂时先不用\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_155806.jpg)\n##### 4.拿到创建的仓库的https地址,也就是url地址\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_160114.jpg)\n\n### 第七步：重点来了，将本地的仓库关联到github上\n> git remote add origin https://github.com/yyb568/WeatherDemo\n\n### 第八步：上传github之前，要先pull一下，执行如下命令：\n\n> git pull origin master\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_160818.jpg)\n\n### 第九步，也就是最后一步，上传代码到github远程仓库\n> git push -u origin master\n执行完后，如果没有异常，等待执行完就上传成功了，中间可能会让你输入Username和Password，你只要输入github的账号和密码就行了\n\n### 最后GitHub成功后截图\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_161307.jpg)\n","source":"_posts/如何将本地代码上传到GitHub.md","raw":"---\ntitle: 如何将本地代码上传到GitHub\ndate: 2017-7-31 15:35:46\ntags:\n - GitHub\n---\n\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-14.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n\n### 第一步\n\n安装Git Bash版本控制器: https://git-for-windows.github.io/\n\n### 第二步\n\n安装好之后进入到你的本地项目根目录,右击鼠标点击 Git Bash Here\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_154306.jpg)\n\n### 第三步\n\n执行git命令\n\n> git init\n\n### 第四步\n\n将项目的所有文件添加到仓库中\n如果想添加某个特定的文件，只需把.换成特定的文件名即可\n\n> git add .\n\n### 第五步\n\n将add的文件commit到仓库\n\n> git commit -m \"注释语句\"\n\n### 第六步\n\n去github上创建自己的仓库地址,如下图所示：\n##### 1.点击New repository\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_154916.jpg)\n##### 2.填写好仓库信息后点击Create repository创建\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_155434.jpg)\n##### 3.如下就是所创建的仓库,红圈是克隆下载地址暂时先不用\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_155806.jpg)\n##### 4.拿到创建的仓库的https地址,也就是url地址\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_160114.jpg)\n\n### 第七步：重点来了，将本地的仓库关联到github上\n> git remote add origin https://github.com/yyb568/WeatherDemo\n\n### 第八步：上传github之前，要先pull一下，执行如下命令：\n\n> git pull origin master\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_160818.jpg)\n\n### 第九步，也就是最后一步，上传代码到github远程仓库\n> git push -u origin master\n执行完后，如果没有异常，等待执行完就上传成功了，中间可能会让你输入Username和Password，你只要输入github的账号和密码就行了\n\n### 最后GitHub成功后截图\n\n![](http://otbcgjn6c.bkt.clouddn.com/2017-07-31_161307.jpg)\n","slug":"如何将本地代码上传到GitHub","published":1,"updated":"2017-12-29T12:52:52.473Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd5j001dosmm2gor8gvv","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-14.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h3><p>安装Git Bash版本控制器: <a href=\"https://git-for-windows.github.io/\" target=\"_blank\" rel=\"external\">https://git-for-windows.github.io/</a></p>\n<h3 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h3><p>安装好之后进入到你的本地项目根目录,右击鼠标点击 Git Bash Here</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_154306.jpg\" alt=\"\"></p>\n<h3 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h3><p>执行git命令</p>\n<blockquote>\n<p>git init</p>\n</blockquote>\n<h3 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h3><p>将项目的所有文件添加到仓库中<br>如果想添加某个特定的文件，只需把.换成特定的文件名即可</p>\n<blockquote>\n<p>git add .</p>\n</blockquote>\n<h3 id=\"第五步\"><a href=\"#第五步\" class=\"headerlink\" title=\"第五步\"></a>第五步</h3><p>将add的文件commit到仓库</p>\n<blockquote>\n<p>git commit -m “注释语句”</p>\n</blockquote>\n<h3 id=\"第六步\"><a href=\"#第六步\" class=\"headerlink\" title=\"第六步\"></a>第六步</h3><p>去github上创建自己的仓库地址,如下图所示：</p>\n<h5 id=\"1-点击New-repository\"><a href=\"#1-点击New-repository\" class=\"headerlink\" title=\"1.点击New repository\"></a>1.点击New repository</h5><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_154916.jpg\" alt=\"\"></p>\n<h5 id=\"2-填写好仓库信息后点击Create-repository创建\"><a href=\"#2-填写好仓库信息后点击Create-repository创建\" class=\"headerlink\" title=\"2.填写好仓库信息后点击Create repository创建\"></a>2.填写好仓库信息后点击Create repository创建</h5><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_155434.jpg\" alt=\"\"></p>\n<h5 id=\"3-如下就是所创建的仓库-红圈是克隆下载地址暂时先不用\"><a href=\"#3-如下就是所创建的仓库-红圈是克隆下载地址暂时先不用\" class=\"headerlink\" title=\"3.如下就是所创建的仓库,红圈是克隆下载地址暂时先不用\"></a>3.如下就是所创建的仓库,红圈是克隆下载地址暂时先不用</h5><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_155806.jpg\" alt=\"\"></p>\n<h5 id=\"4-拿到创建的仓库的https地址-也就是url地址\"><a href=\"#4-拿到创建的仓库的https地址-也就是url地址\" class=\"headerlink\" title=\"4.拿到创建的仓库的https地址,也就是url地址\"></a>4.拿到创建的仓库的https地址,也就是url地址</h5><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_160114.jpg\" alt=\"\"></p>\n<h3 id=\"第七步：重点来了，将本地的仓库关联到github上\"><a href=\"#第七步：重点来了，将本地的仓库关联到github上\" class=\"headerlink\" title=\"第七步：重点来了，将本地的仓库关联到github上\"></a>第七步：重点来了，将本地的仓库关联到github上</h3><blockquote>\n<p>git remote add origin <a href=\"https://github.com/yyb568/WeatherDemo\" target=\"_blank\" rel=\"external\">https://github.com/yyb568/WeatherDemo</a></p>\n</blockquote>\n<h3 id=\"第八步：上传github之前，要先pull一下，执行如下命令：\"><a href=\"#第八步：上传github之前，要先pull一下，执行如下命令：\" class=\"headerlink\" title=\"第八步：上传github之前，要先pull一下，执行如下命令：\"></a>第八步：上传github之前，要先pull一下，执行如下命令：</h3><blockquote>\n<p>git pull origin master</p>\n</blockquote>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_160818.jpg\" alt=\"\"></p>\n<h3 id=\"第九步，也就是最后一步，上传代码到github远程仓库\"><a href=\"#第九步，也就是最后一步，上传代码到github远程仓库\" class=\"headerlink\" title=\"第九步，也就是最后一步，上传代码到github远程仓库\"></a>第九步，也就是最后一步，上传代码到github远程仓库</h3><blockquote>\n<p>git push -u origin master<br>执行完后，如果没有异常，等待执行完就上传成功了，中间可能会让你输入Username和Password，你只要输入github的账号和密码就行了</p>\n</blockquote>\n<h3 id=\"最后GitHub成功后截图\"><a href=\"#最后GitHub成功后截图\" class=\"headerlink\" title=\"最后GitHub成功后截图\"></a>最后GitHub成功后截图</h3><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_161307.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-14.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h3><p>安装Git Bash版本控制器: <a href=\"https://git-for-windows.github.io/\" target=\"_blank\" rel=\"external\">https://git-for-windows.github.io/</a></p>\n<h3 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h3><p>安装好之后进入到你的本地项目根目录,右击鼠标点击 Git Bash Here</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_154306.jpg\" alt=\"\"></p>\n<h3 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h3><p>执行git命令</p>\n<blockquote>\n<p>git init</p>\n</blockquote>\n<h3 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h3><p>将项目的所有文件添加到仓库中<br>如果想添加某个特定的文件，只需把.换成特定的文件名即可</p>\n<blockquote>\n<p>git add .</p>\n</blockquote>\n<h3 id=\"第五步\"><a href=\"#第五步\" class=\"headerlink\" title=\"第五步\"></a>第五步</h3><p>将add的文件commit到仓库</p>\n<blockquote>\n<p>git commit -m “注释语句”</p>\n</blockquote>\n<h3 id=\"第六步\"><a href=\"#第六步\" class=\"headerlink\" title=\"第六步\"></a>第六步</h3><p>去github上创建自己的仓库地址,如下图所示：</p>\n<h5 id=\"1-点击New-repository\"><a href=\"#1-点击New-repository\" class=\"headerlink\" title=\"1.点击New repository\"></a>1.点击New repository</h5><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_154916.jpg\" alt=\"\"></p>\n<h5 id=\"2-填写好仓库信息后点击Create-repository创建\"><a href=\"#2-填写好仓库信息后点击Create-repository创建\" class=\"headerlink\" title=\"2.填写好仓库信息后点击Create repository创建\"></a>2.填写好仓库信息后点击Create repository创建</h5><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_155434.jpg\" alt=\"\"></p>\n<h5 id=\"3-如下就是所创建的仓库-红圈是克隆下载地址暂时先不用\"><a href=\"#3-如下就是所创建的仓库-红圈是克隆下载地址暂时先不用\" class=\"headerlink\" title=\"3.如下就是所创建的仓库,红圈是克隆下载地址暂时先不用\"></a>3.如下就是所创建的仓库,红圈是克隆下载地址暂时先不用</h5><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_155806.jpg\" alt=\"\"></p>\n<h5 id=\"4-拿到创建的仓库的https地址-也就是url地址\"><a href=\"#4-拿到创建的仓库的https地址-也就是url地址\" class=\"headerlink\" title=\"4.拿到创建的仓库的https地址,也就是url地址\"></a>4.拿到创建的仓库的https地址,也就是url地址</h5><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_160114.jpg\" alt=\"\"></p>\n<h3 id=\"第七步：重点来了，将本地的仓库关联到github上\"><a href=\"#第七步：重点来了，将本地的仓库关联到github上\" class=\"headerlink\" title=\"第七步：重点来了，将本地的仓库关联到github上\"></a>第七步：重点来了，将本地的仓库关联到github上</h3><blockquote>\n<p>git remote add origin <a href=\"https://github.com/yyb568/WeatherDemo\" target=\"_blank\" rel=\"external\">https://github.com/yyb568/WeatherDemo</a></p>\n</blockquote>\n<h3 id=\"第八步：上传github之前，要先pull一下，执行如下命令：\"><a href=\"#第八步：上传github之前，要先pull一下，执行如下命令：\" class=\"headerlink\" title=\"第八步：上传github之前，要先pull一下，执行如下命令：\"></a>第八步：上传github之前，要先pull一下，执行如下命令：</h3><blockquote>\n<p>git pull origin master</p>\n</blockquote>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_160818.jpg\" alt=\"\"></p>\n<h3 id=\"第九步，也就是最后一步，上传代码到github远程仓库\"><a href=\"#第九步，也就是最后一步，上传代码到github远程仓库\" class=\"headerlink\" title=\"第九步，也就是最后一步，上传代码到github远程仓库\"></a>第九步，也就是最后一步，上传代码到github远程仓库</h3><blockquote>\n<p>git push -u origin master<br>执行完后，如果没有异常，等待执行完就上传成功了，中间可能会让你输入Username和Password，你只要输入github的账号和密码就行了</p>\n</blockquote>\n<h3 id=\"最后GitHub成功后截图\"><a href=\"#最后GitHub成功后截图\" class=\"headerlink\" title=\"最后GitHub成功后截图\"></a>最后GitHub成功后截图</h3><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/2017-07-31_161307.jpg\" alt=\"\"></p>\n"},{"title":"正则表达式基础用法","date":"2017-09-11T03:03:27.000Z","_content":"<img src=\"http://otbcgjn6c.bkt.clouddn.com/7aa3599084d36ce8f6d8abcc660e47427dfd8757101ee-2cKa73_fw658.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\nNO.1 正则表达式：扛把子技术，总得会最基础的：\n\n### 一些基础用法\n```\nhe+llo ：+ 号代表前面的字符必须至少出现一次（1次或多次）\n例：可匹配 hello ，heello，heee...llo\nhe\\*llo : \\* 号代表前面的字符可以不除出现，可出现一次或者多次既（0次，1次，多次）\n例： 可匹配 hllo，hello，heee..llo    \nhe?llo : ? 号代表前面的字符最多只能出现一次（0次，或者一次）\n例: 可匹配 hllo，hello\n\n```\n### 非打印字符\n```\n\\s 匹配任何 空白字符 包括空格，制表符，换页符\n\\S 匹配任何非空白字符\n\\n 匹配换行符\n\n```\n\n### 特殊字符\n```\n$ 以某个字符串结尾\n() 标记一个表达式的开始和结束位置\n.  匹配除换行符 \\n 之外的任何单字符\n[ 标记一个中括号表达式的开始\n^ 以某个字符串开始\n{ 限定表达式的开始\n\n```\n### 限定符\n```\n{n} 非负整数匹配确定的n次。匹配某个字符出现的次数\n例：'o{2}' 则能匹配 Look，不能匹配 inof，但能匹配inoof\n{n,} 'o{1,}' 等价于 'o+'既一次或多次\n{n,m} m和n均为非负数其中 n <= m。最少匹配n次最多匹配m次\n例：'o{1,3}' 匹配 loooook 中的钱三个o\n\n```\n### 元字符\n\n```\n[a-z] 匹配指定范围内的任意字符 例如'[a-z]'可以匹配从a到z内任意小写字符\n[^a-z] 负值字符范围，匹配任何不在指定范围内的任意字符，例如[^a-z]可以匹配不在a到z之内的字符\n\\d  匹配一个数字字符\n\\D  匹配一个非数字字符\n\\s  匹配任何空白字符（包括空格、制表符）\n\\S  匹配任何非空白字符\n\n```\n","source":"_posts/正则表达式.md","raw":"---\ntitle: 正则表达式基础用法\ndate: 2017-9-11 11:03:27\ntags:\n\t- 正则\n  - re\n---\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/7aa3599084d36ce8f6d8abcc660e47427dfd8757101ee-2cKa73_fw658.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\nNO.1 正则表达式：扛把子技术，总得会最基础的：\n\n### 一些基础用法\n```\nhe+llo ：+ 号代表前面的字符必须至少出现一次（1次或多次）\n例：可匹配 hello ，heello，heee...llo\nhe\\*llo : \\* 号代表前面的字符可以不除出现，可出现一次或者多次既（0次，1次，多次）\n例： 可匹配 hllo，hello，heee..llo    \nhe?llo : ? 号代表前面的字符最多只能出现一次（0次，或者一次）\n例: 可匹配 hllo，hello\n\n```\n### 非打印字符\n```\n\\s 匹配任何 空白字符 包括空格，制表符，换页符\n\\S 匹配任何非空白字符\n\\n 匹配换行符\n\n```\n\n### 特殊字符\n```\n$ 以某个字符串结尾\n() 标记一个表达式的开始和结束位置\n.  匹配除换行符 \\n 之外的任何单字符\n[ 标记一个中括号表达式的开始\n^ 以某个字符串开始\n{ 限定表达式的开始\n\n```\n### 限定符\n```\n{n} 非负整数匹配确定的n次。匹配某个字符出现的次数\n例：'o{2}' 则能匹配 Look，不能匹配 inof，但能匹配inoof\n{n,} 'o{1,}' 等价于 'o+'既一次或多次\n{n,m} m和n均为非负数其中 n <= m。最少匹配n次最多匹配m次\n例：'o{1,3}' 匹配 loooook 中的钱三个o\n\n```\n### 元字符\n\n```\n[a-z] 匹配指定范围内的任意字符 例如'[a-z]'可以匹配从a到z内任意小写字符\n[^a-z] 负值字符范围，匹配任何不在指定范围内的任意字符，例如[^a-z]可以匹配不在a到z之内的字符\n\\d  匹配一个数字字符\n\\D  匹配一个非数字字符\n\\s  匹配任何空白字符（包括空格、制表符）\n\\S  匹配任何非空白字符\n\n```\n","slug":"正则表达式","published":1,"updated":"2017-12-29T12:53:44.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd5m001fosmm8g7vwsq4","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/7aa3599084d36ce8f6d8abcc660e47427dfd8757101ee-2cKa73_fw658.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<p>NO.1 正则表达式：扛把子技术，总得会最基础的：</p>\n<h3 id=\"一些基础用法\"><a href=\"#一些基础用法\" class=\"headerlink\" title=\"一些基础用法\"></a>一些基础用法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">he+llo ：+ 号代表前面的字符必须至少出现一次（1次或多次）</div><div class=\"line\">例：可匹配 hello ，heello，heee...llo</div><div class=\"line\">he\\*llo : \\* 号代表前面的字符可以不除出现，可出现一次或者多次既（0次，1次，多次）</div><div class=\"line\">例： 可匹配 hllo，hello，heee..llo    </div><div class=\"line\">he?llo : ? 号代表前面的字符最多只能出现一次（0次，或者一次）</div><div class=\"line\">例: 可匹配 hllo，hello</div></pre></td></tr></table></figure>\n<h3 id=\"非打印字符\"><a href=\"#非打印字符\" class=\"headerlink\" title=\"非打印字符\"></a>非打印字符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\s 匹配任何 空白字符 包括空格，制表符，换页符</div><div class=\"line\">\\S 匹配任何非空白字符</div><div class=\"line\">\\n 匹配换行符</div></pre></td></tr></table></figure>\n<h3 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ 以某个字符串结尾</div><div class=\"line\">() 标记一个表达式的开始和结束位置</div><div class=\"line\">.  匹配除换行符 \\n 之外的任何单字符</div><div class=\"line\">[ 标记一个中括号表达式的开始</div><div class=\"line\">^ 以某个字符串开始</div><div class=\"line\">&#123; 限定表达式的开始</div></pre></td></tr></table></figure>\n<h3 id=\"限定符\"><a href=\"#限定符\" class=\"headerlink\" title=\"限定符\"></a>限定符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;n&#125; 非负整数匹配确定的n次。匹配某个字符出现的次数</div><div class=\"line\">例：&apos;o&#123;2&#125;&apos; 则能匹配 Look，不能匹配 inof，但能匹配inoof</div><div class=\"line\">&#123;n,&#125; &apos;o&#123;1,&#125;&apos; 等价于 &apos;o+&apos;既一次或多次</div><div class=\"line\">&#123;n,m&#125; m和n均为非负数其中 n &lt;= m。最少匹配n次最多匹配m次</div><div class=\"line\">例：&apos;o&#123;1,3&#125;&apos; 匹配 loooook 中的钱三个o</div></pre></td></tr></table></figure>\n<h3 id=\"元字符\"><a href=\"#元字符\" class=\"headerlink\" title=\"元字符\"></a>元字符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[a-z] 匹配指定范围内的任意字符 例如&apos;[a-z]&apos;可以匹配从a到z内任意小写字符</div><div class=\"line\">[^a-z] 负值字符范围，匹配任何不在指定范围内的任意字符，例如[^a-z]可以匹配不在a到z之内的字符</div><div class=\"line\">\\d  匹配一个数字字符</div><div class=\"line\">\\D  匹配一个非数字字符</div><div class=\"line\">\\s  匹配任何空白字符（包括空格、制表符）</div><div class=\"line\">\\S  匹配任何非空白字符</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/7aa3599084d36ce8f6d8abcc660e47427dfd8757101ee-2cKa73_fw658.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<p>NO.1 正则表达式：扛把子技术，总得会最基础的：</p>\n<h3 id=\"一些基础用法\"><a href=\"#一些基础用法\" class=\"headerlink\" title=\"一些基础用法\"></a>一些基础用法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">he+llo ：+ 号代表前面的字符必须至少出现一次（1次或多次）</div><div class=\"line\">例：可匹配 hello ，heello，heee...llo</div><div class=\"line\">he\\*llo : \\* 号代表前面的字符可以不除出现，可出现一次或者多次既（0次，1次，多次）</div><div class=\"line\">例： 可匹配 hllo，hello，heee..llo    </div><div class=\"line\">he?llo : ? 号代表前面的字符最多只能出现一次（0次，或者一次）</div><div class=\"line\">例: 可匹配 hllo，hello</div></pre></td></tr></table></figure>\n<h3 id=\"非打印字符\"><a href=\"#非打印字符\" class=\"headerlink\" title=\"非打印字符\"></a>非打印字符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\s 匹配任何 空白字符 包括空格，制表符，换页符</div><div class=\"line\">\\S 匹配任何非空白字符</div><div class=\"line\">\\n 匹配换行符</div></pre></td></tr></table></figure>\n<h3 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ 以某个字符串结尾</div><div class=\"line\">() 标记一个表达式的开始和结束位置</div><div class=\"line\">.  匹配除换行符 \\n 之外的任何单字符</div><div class=\"line\">[ 标记一个中括号表达式的开始</div><div class=\"line\">^ 以某个字符串开始</div><div class=\"line\">&#123; 限定表达式的开始</div></pre></td></tr></table></figure>\n<h3 id=\"限定符\"><a href=\"#限定符\" class=\"headerlink\" title=\"限定符\"></a>限定符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;n&#125; 非负整数匹配确定的n次。匹配某个字符出现的次数</div><div class=\"line\">例：&apos;o&#123;2&#125;&apos; 则能匹配 Look，不能匹配 inof，但能匹配inoof</div><div class=\"line\">&#123;n,&#125; &apos;o&#123;1,&#125;&apos; 等价于 &apos;o+&apos;既一次或多次</div><div class=\"line\">&#123;n,m&#125; m和n均为非负数其中 n &lt;= m。最少匹配n次最多匹配m次</div><div class=\"line\">例：&apos;o&#123;1,3&#125;&apos; 匹配 loooook 中的钱三个o</div></pre></td></tr></table></figure>\n<h3 id=\"元字符\"><a href=\"#元字符\" class=\"headerlink\" title=\"元字符\"></a>元字符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[a-z] 匹配指定范围内的任意字符 例如&apos;[a-z]&apos;可以匹配从a到z内任意小写字符</div><div class=\"line\">[^a-z] 负值字符范围，匹配任何不在指定范围内的任意字符，例如[^a-z]可以匹配不在a到z之内的字符</div><div class=\"line\">\\d  匹配一个数字字符</div><div class=\"line\">\\D  匹配一个非数字字符</div><div class=\"line\">\\s  匹配任何空白字符（包括空格、制表符）</div><div class=\"line\">\\S  匹配任何非空白字符</div></pre></td></tr></table></figure>\n"},{"title":"鼠标滑过，动态数据表格如何变色","date":"2017-11-12T03:51:15.000Z","_content":"\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/timg%20%281%29.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n<font color=\"red\">此功能是很简单的，写这个目的是以后遇到了，我可以直接拿来用。</font>\n\n1.一般固定行数的表格变色是容易的，只需在每个tr标签上写上相应的class就可以。<br>\n2.如果是不固定行数，动态数据的时候，想实现每行表格变色。那就需要每个数据的id来实现。\n\n### 现有如下表格(底部都是浅蓝色，并且是动态数据):\n![](http://otbcgjn6c.bkt.clouddn.com/1510459161%281%29.png)\n\n### 如何实现鼠标滑过变色很简单\n1.首选引入JQ框架\n```\n<script src=\"../select/jquery.js\" type=\"text/javascript\"></script>\n\n```\n2.写样式，需要将鼠标滑过后底部边的颜色写好，一般是白色背景。\n```\n.divOver{\n background:#fff;\n border:solid 1px #d2dce3;\n} \n\n```\n3.然后在开始在tr标签开始写相应的属性\n```\n{foreach from=$customer_service item=customer}\n  <tr data-mou=\"{$customer.id}\" id=\"mous_{$customer.id}\" name = \"mous\" class='trcolor1' > \n    <td align=\"center\"></td>\n    <td align=\"center\"></td>\n  </tr>\n{/foreach}\n\n```\n4.重点来了写JQ\n\n```\n//修改鼠标滑过时变色\n$(document).ready(function(){\n  $(\"tr[name=mous\").mouseover(function(){\n    var ids = $(this).attr(\"data-mou\");\n    $(\"#mous_\"+ids).addClass('divOver');\n  });\n\n  $(\"tr[name=mous\").mouseout(function(){\n    var ids = $(this).attr(\"data-mou\");\n     //鼠标离开时移除divOver样式\n    $(\"#mous_\"+ids).removeClass('divOver'); \n  });\n});\n```\n\n5.最后效果图：\n\n![](http://otbcgjn6c.bkt.clouddn.com/%25VVA47T%28_ZH3FGU%5DU6I1SDA.png)","source":"_posts/鼠标滑过变色.md","raw":"---\ntitle: 鼠标滑过，动态数据表格如何变色\ndate: 2017-11-12 11:51:15\ntags:\n - jQery\n - CSS\n---\n\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/timg%20%281%29.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n<font color=\"red\">此功能是很简单的，写这个目的是以后遇到了，我可以直接拿来用。</font>\n\n1.一般固定行数的表格变色是容易的，只需在每个tr标签上写上相应的class就可以。<br>\n2.如果是不固定行数，动态数据的时候，想实现每行表格变色。那就需要每个数据的id来实现。\n\n### 现有如下表格(底部都是浅蓝色，并且是动态数据):\n![](http://otbcgjn6c.bkt.clouddn.com/1510459161%281%29.png)\n\n### 如何实现鼠标滑过变色很简单\n1.首选引入JQ框架\n```\n<script src=\"../select/jquery.js\" type=\"text/javascript\"></script>\n\n```\n2.写样式，需要将鼠标滑过后底部边的颜色写好，一般是白色背景。\n```\n.divOver{\n background:#fff;\n border:solid 1px #d2dce3;\n} \n\n```\n3.然后在开始在tr标签开始写相应的属性\n```\n{foreach from=$customer_service item=customer}\n  <tr data-mou=\"{$customer.id}\" id=\"mous_{$customer.id}\" name = \"mous\" class='trcolor1' > \n    <td align=\"center\"></td>\n    <td align=\"center\"></td>\n  </tr>\n{/foreach}\n\n```\n4.重点来了写JQ\n\n```\n//修改鼠标滑过时变色\n$(document).ready(function(){\n  $(\"tr[name=mous\").mouseover(function(){\n    var ids = $(this).attr(\"data-mou\");\n    $(\"#mous_\"+ids).addClass('divOver');\n  });\n\n  $(\"tr[name=mous\").mouseout(function(){\n    var ids = $(this).attr(\"data-mou\");\n     //鼠标离开时移除divOver样式\n    $(\"#mous_\"+ids).removeClass('divOver'); \n  });\n});\n```\n\n5.最后效果图：\n\n![](http://otbcgjn6c.bkt.clouddn.com/%25VVA47T%28_ZH3FGU%5DU6I1SDA.png)","slug":"鼠标滑过变色","published":1,"updated":"2017-12-29T12:53:11.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd5p001hosmmukc3lk8g","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timg%20%281%29.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<font color=\"red\">此功能是很简单的，写这个目的是以后遇到了，我可以直接拿来用。</font>\n\n<p>1.一般固定行数的表格变色是容易的，只需在每个tr标签上写上相应的class就可以。<br><br>2.如果是不固定行数，动态数据的时候，想实现每行表格变色。那就需要每个数据的id来实现。</p>\n<h3 id=\"现有如下表格-底部都是浅蓝色，并且是动态数据\"><a href=\"#现有如下表格-底部都是浅蓝色，并且是动态数据\" class=\"headerlink\" title=\"现有如下表格(底部都是浅蓝色，并且是动态数据):\"></a>现有如下表格(底部都是浅蓝色，并且是动态数据):</h3><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/1510459161%281%29.png\" alt=\"\"></p>\n<h3 id=\"如何实现鼠标滑过变色很简单\"><a href=\"#如何实现鼠标滑过变色很简单\" class=\"headerlink\" title=\"如何实现鼠标滑过变色很简单\"></a>如何实现鼠标滑过变色很简单</h3><p>1.首选引入JQ框架<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;../select/jquery.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>2.写样式，需要将鼠标滑过后底部边的颜色写好，一般是白色背景。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.divOver&#123;</div><div class=\"line\"> background:#fff;</div><div class=\"line\"> border:solid 1px #d2dce3;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>3.然后在开始在tr标签开始写相应的属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;foreach from=$customer_service item=customer&#125;</div><div class=\"line\">  &lt;tr data-mou=&quot;&#123;$customer.id&#125;&quot; id=&quot;mous_&#123;$customer.id&#125;&quot; name = &quot;mous&quot; class=&apos;trcolor1&apos; &gt; </div><div class=\"line\">    &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;</div><div class=\"line\">  &lt;/tr&gt;</div><div class=\"line\">&#123;/foreach&#125;</div></pre></td></tr></table></figure></p>\n<p>4.重点来了写JQ</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">//修改鼠标滑过时变色</div><div class=\"line\">$(document).ready(function()&#123;</div><div class=\"line\">  $(&quot;tr[name=mous&quot;).mouseover(function()&#123;</div><div class=\"line\">    var ids = $(this).attr(&quot;data-mou&quot;);</div><div class=\"line\">    $(&quot;#mous_&quot;+ids).addClass(&apos;divOver&apos;);</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">  $(&quot;tr[name=mous&quot;).mouseout(function()&#123;</div><div class=\"line\">    var ids = $(this).attr(&quot;data-mou&quot;);</div><div class=\"line\">     //鼠标离开时移除divOver样式</div><div class=\"line\">    $(&quot;#mous_&quot;+ids).removeClass(&apos;divOver&apos;); </div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>5.最后效果图：</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/%25VVA47T%28_ZH3FGU%5DU6I1SDA.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/timg%20%281%29.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<font color=\"red\">此功能是很简单的，写这个目的是以后遇到了，我可以直接拿来用。</font>\n\n<p>1.一般固定行数的表格变色是容易的，只需在每个tr标签上写上相应的class就可以。<br><br>2.如果是不固定行数，动态数据的时候，想实现每行表格变色。那就需要每个数据的id来实现。</p>\n<h3 id=\"现有如下表格-底部都是浅蓝色，并且是动态数据\"><a href=\"#现有如下表格-底部都是浅蓝色，并且是动态数据\" class=\"headerlink\" title=\"现有如下表格(底部都是浅蓝色，并且是动态数据):\"></a>现有如下表格(底部都是浅蓝色，并且是动态数据):</h3><p><img src=\"http://otbcgjn6c.bkt.clouddn.com/1510459161%281%29.png\" alt=\"\"></p>\n<h3 id=\"如何实现鼠标滑过变色很简单\"><a href=\"#如何实现鼠标滑过变色很简单\" class=\"headerlink\" title=\"如何实现鼠标滑过变色很简单\"></a>如何实现鼠标滑过变色很简单</h3><p>1.首选引入JQ框架<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;../select/jquery.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>2.写样式，需要将鼠标滑过后底部边的颜色写好，一般是白色背景。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.divOver&#123;</div><div class=\"line\"> background:#fff;</div><div class=\"line\"> border:solid 1px #d2dce3;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>3.然后在开始在tr标签开始写相应的属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;foreach from=$customer_service item=customer&#125;</div><div class=\"line\">  &lt;tr data-mou=&quot;&#123;$customer.id&#125;&quot; id=&quot;mous_&#123;$customer.id&#125;&quot; name = &quot;mous&quot; class=&apos;trcolor1&apos; &gt; </div><div class=\"line\">    &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;</div><div class=\"line\">    &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;</div><div class=\"line\">  &lt;/tr&gt;</div><div class=\"line\">&#123;/foreach&#125;</div></pre></td></tr></table></figure></p>\n<p>4.重点来了写JQ</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">//修改鼠标滑过时变色</div><div class=\"line\">$(document).ready(function()&#123;</div><div class=\"line\">  $(&quot;tr[name=mous&quot;).mouseover(function()&#123;</div><div class=\"line\">    var ids = $(this).attr(&quot;data-mou&quot;);</div><div class=\"line\">    $(&quot;#mous_&quot;+ids).addClass(&apos;divOver&apos;);</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">  $(&quot;tr[name=mous&quot;).mouseout(function()&#123;</div><div class=\"line\">    var ids = $(this).attr(&quot;data-mou&quot;);</div><div class=\"line\">     //鼠标离开时移除divOver样式</div><div class=\"line\">    $(&quot;#mous_&quot;+ids).removeClass(&apos;divOver&apos;); </div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>5.最后效果图：</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/%25VVA47T%28_ZH3FGU%5DU6I1SDA.png\" alt=\"\"></p>\n"},{"title":"新博客","date":"2017-07-17T01:28:16.000Z","_content":"### 为什么会将博客转移到GitHub上\n\n1. 首先github是完全免费开放的\n2. 不需要你再去花额外金钱去购买云服务器\n3. 安装配置简单,网上教程一大片\n4. 模板很多,可以根据喜好选择不同模板\n\n### 搭建自己的Hexo + GitHub 博客\n\n我好久之前就有一个自己的技术博客,由于前段时间很忙,忘了给腾讯云付费,就给我停服务了,可惜了我那些学习笔记和工作中的总结.索性我也不用了,但是有了这个以后就再也不怕给我停服务了.\n\n> 关于如何 搭建Hexo + GitHub 博客,可查看这个地址:\n\n[简书:Hexo + GitHub 免费搭建搭建个人博客](http://www.jianshu.com/p/9bbae1d105be)\n","source":"_posts/你好.md","raw":"---\ntitle: 新博客\ndate: 2017-07-17 09:28:16\ntags:\n -  \n - 博客\n---\n### 为什么会将博客转移到GitHub上\n\n1. 首先github是完全免费开放的\n2. 不需要你再去花额外金钱去购买云服务器\n3. 安装配置简单,网上教程一大片\n4. 模板很多,可以根据喜好选择不同模板\n\n### 搭建自己的Hexo + GitHub 博客\n\n我好久之前就有一个自己的技术博客,由于前段时间很忙,忘了给腾讯云付费,就给我停服务了,可惜了我那些学习笔记和工作中的总结.索性我也不用了,但是有了这个以后就再也不怕给我停服务了.\n\n> 关于如何 搭建Hexo + GitHub 博客,可查看这个地址:\n\n[简书:Hexo + GitHub 免费搭建搭建个人博客](http://www.jianshu.com/p/9bbae1d105be)\n","slug":"你好","published":1,"updated":"2017-12-28T14:51:32.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd5y001josmm1agc8m7x","content":"<h3 id=\"为什么会将博客转移到GitHub上\"><a href=\"#为什么会将博客转移到GitHub上\" class=\"headerlink\" title=\"为什么会将博客转移到GitHub上\"></a>为什么会将博客转移到GitHub上</h3><ol>\n<li>首先github是完全免费开放的</li>\n<li>不需要你再去花额外金钱去购买云服务器</li>\n<li>安装配置简单,网上教程一大片</li>\n<li>模板很多,可以根据喜好选择不同模板</li>\n</ol>\n<h3 id=\"搭建自己的Hexo-GitHub-博客\"><a href=\"#搭建自己的Hexo-GitHub-博客\" class=\"headerlink\" title=\"搭建自己的Hexo + GitHub 博客\"></a>搭建自己的Hexo + GitHub 博客</h3><p>我好久之前就有一个自己的技术博客,由于前段时间很忙,忘了给腾讯云付费,就给我停服务了,可惜了我那些学习笔记和工作中的总结.索性我也不用了,但是有了这个以后就再也不怕给我停服务了.</p>\n<blockquote>\n<p>关于如何 搭建Hexo + GitHub 博客,可查看这个地址:</p>\n</blockquote>\n<p><a href=\"http://www.jianshu.com/p/9bbae1d105be\" target=\"_blank\" rel=\"external\">简书:Hexo + GitHub 免费搭建搭建个人博客</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"为什么会将博客转移到GitHub上\"><a href=\"#为什么会将博客转移到GitHub上\" class=\"headerlink\" title=\"为什么会将博客转移到GitHub上\"></a>为什么会将博客转移到GitHub上</h3><ol>\n<li>首先github是完全免费开放的</li>\n<li>不需要你再去花额外金钱去购买云服务器</li>\n<li>安装配置简单,网上教程一大片</li>\n<li>模板很多,可以根据喜好选择不同模板</li>\n</ol>\n<h3 id=\"搭建自己的Hexo-GitHub-博客\"><a href=\"#搭建自己的Hexo-GitHub-博客\" class=\"headerlink\" title=\"搭建自己的Hexo + GitHub 博客\"></a>搭建自己的Hexo + GitHub 博客</h3><p>我好久之前就有一个自己的技术博客,由于前段时间很忙,忘了给腾讯云付费,就给我停服务了,可惜了我那些学习笔记和工作中的总结.索性我也不用了,但是有了这个以后就再也不怕给我停服务了.</p>\n<blockquote>\n<p>关于如何 搭建Hexo + GitHub 博客,可查看这个地址:</p>\n</blockquote>\n<p><a href=\"http://www.jianshu.com/p/9bbae1d105be\" target=\"_blank\" rel=\"external\">简书:Hexo + GitHub 免费搭建搭建个人博客</a></p>\n"},{"title":"如何获取免费天气预报","date":"2017-07-20T07:17:01.000Z","_content":"<img src=\"http://otbcgjn6c.bkt.clouddn.com/3d4c72a795743e3d447d90275d322219979b1dab2438c-v0OcGi_fw658.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n### Demo Github地址:\nhttps://github.com/yyb568/WeatherDemo\n### 了解\n如何在本地获取免费的天气预报关键在于要有免费的天气预报接口;貌似网上还挺多的下面的是我调用的api接口地址:\nhttp://www.sojson.com/open/api/weather/json.shtml?city=北京\n\n### Demo测试\n下面是一段简单的下拉选择框\n```\n<body>\n    <select id=\"weather\" name=\"weather\">\n\t\t<option>请选择</option>\n\t\t<option value=\"济南\">济南</option>\n\t\t<option value=\"泰安\">泰安</option>\n\t\t<option value=\"潍坊\">潍坊</option>\n\t\t<option value=\"临沂\">临沂</option>\n\t\t<option value=\"新泰\">新泰</option>\n\t\t<option value=\"威海\">威海</option>\n\t\t<option value=\"长春\">长春</option>\n\t\t<option value=\"三亚\">三亚</option>\n\t\t<option value=\"北京\">北京</option>\n\t\t<option value=\"上海\">上海</option>\n\t</select><br><br>\n    <div id=\"box\">\n      <ul id=\"con\"></ul>\n    </div>\n</body>\n```\n效果图:\n![](http://otbcgjn6c.bkt.clouddn.com/20170731104139.png)\n\n### Ajax请求\n1.首先要引入一个jQ框架\n\n```\n<script src=\"./jquery-2.1.4.js\"></script>\n\n```\n2.当我选择某一个城市后,会触发一个点击事件;\n\n```\n//获取选中的城市\n$(\"#weather\").change(function(){\n\tvar checkValue=$(\"#weather\").val();\n\tvar url = \"./weather.php\";\n\t$.post(url,{weather:checkValue},function(res){\n\n\t},'json')\n\n});\n\n```\n3.当我选中后会获取相应的城市名称如:新泰,Ajax会把这个城市名称通过POST请求传到当前文件下的weather.php\n\n### PHP文件处理请求\n1.获取城市名称;\n```\n$city = $_POST['weather'];\n\n```\n2.PHP 将接收到城市进行组合,并以url链接形式去请求访问该API链接;以下是CURL的用法;\n\n```\n$city = $_POST['weather'];\n //初始化  \n $curl = curl_init();  \n //设置抓取的url  \n curl_setopt($curl, CURLOPT_URL, 'http://www.sojson.com/open/api/weather/json.shtml?city='.$city);\n //设置获取的信息以文件流的形式返回，而不是直接输出。  \n curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);  \n //执行命令  \n $data = curl_exec($curl);  \n //关闭URL请求  \n curl_close($curl);\n\n```\n\n3.最终将获取到的数据通过JSON格式并返回给请求页面\n\n```\n$city = $_POST['weather'];\n //初始化  \n $curl = curl_init();  \n //设置抓取的url  \n curl_setopt($curl, CURLOPT_URL, 'http://www.sojson.com/open/api/weather/json.shtml?city='.$city);\n //设置获取的信息以文件流的形式返回，而不是直接输出。  \n curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);  \n //执行命令  \n $data = curl_exec($curl);  \n //关闭URL请求  \n curl_close($curl);  \n //显示获得的数据  \n$contents = json_decode($data, true);\nif (!empty($contents)){\n\t$array = array('status' => 0,'info' => $contents['data']['forecast']);\n\techo json_encode($array);\n}\n\n```\n\n### 当PHP页面请求成功,并获取到数据以后,会返回成功状态,和数据给请求页面.\n1.请求页获取到数据以后判断是否返回成功,如果成功表示 res.status == 0,将数据通过遍历展现在页面上;\n\n```\nif (res.status == 0){\n\tvar con = '';\n\t $.each(res.info, function(i, j){\n\t \t con += \"<li>日期：\"+j.date+\"</li>\";\n         con += \"<li>最高温：\"+j.high+\"</li>\";\n         con += \"<li>风：\"+j.fengli+\"</li>\";\n         con += \"<li>最低温：\"+j.low+\"</li>\";\n    });\n\t$(\"#con\").html(con);\n}\n\n```\n\n2.根据选择不同的城市,最终显示如下结果:\n\n![](http://otbcgjn6c.bkt.clouddn.com/150147099734.jpg)\n","source":"_posts/获取免费天气API.md","raw":"---\ntitle: 如何获取免费天气预报\ndate: 2017-7-20 15:17:01\ntags:\n - jQery\n - PHP\n - API\n---\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/3d4c72a795743e3d447d90275d322219979b1dab2438c-v0OcGi_fw658.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n### Demo Github地址:\nhttps://github.com/yyb568/WeatherDemo\n### 了解\n如何在本地获取免费的天气预报关键在于要有免费的天气预报接口;貌似网上还挺多的下面的是我调用的api接口地址:\nhttp://www.sojson.com/open/api/weather/json.shtml?city=北京\n\n### Demo测试\n下面是一段简单的下拉选择框\n```\n<body>\n    <select id=\"weather\" name=\"weather\">\n\t\t<option>请选择</option>\n\t\t<option value=\"济南\">济南</option>\n\t\t<option value=\"泰安\">泰安</option>\n\t\t<option value=\"潍坊\">潍坊</option>\n\t\t<option value=\"临沂\">临沂</option>\n\t\t<option value=\"新泰\">新泰</option>\n\t\t<option value=\"威海\">威海</option>\n\t\t<option value=\"长春\">长春</option>\n\t\t<option value=\"三亚\">三亚</option>\n\t\t<option value=\"北京\">北京</option>\n\t\t<option value=\"上海\">上海</option>\n\t</select><br><br>\n    <div id=\"box\">\n      <ul id=\"con\"></ul>\n    </div>\n</body>\n```\n效果图:\n![](http://otbcgjn6c.bkt.clouddn.com/20170731104139.png)\n\n### Ajax请求\n1.首先要引入一个jQ框架\n\n```\n<script src=\"./jquery-2.1.4.js\"></script>\n\n```\n2.当我选择某一个城市后,会触发一个点击事件;\n\n```\n//获取选中的城市\n$(\"#weather\").change(function(){\n\tvar checkValue=$(\"#weather\").val();\n\tvar url = \"./weather.php\";\n\t$.post(url,{weather:checkValue},function(res){\n\n\t},'json')\n\n});\n\n```\n3.当我选中后会获取相应的城市名称如:新泰,Ajax会把这个城市名称通过POST请求传到当前文件下的weather.php\n\n### PHP文件处理请求\n1.获取城市名称;\n```\n$city = $_POST['weather'];\n\n```\n2.PHP 将接收到城市进行组合,并以url链接形式去请求访问该API链接;以下是CURL的用法;\n\n```\n$city = $_POST['weather'];\n //初始化  \n $curl = curl_init();  \n //设置抓取的url  \n curl_setopt($curl, CURLOPT_URL, 'http://www.sojson.com/open/api/weather/json.shtml?city='.$city);\n //设置获取的信息以文件流的形式返回，而不是直接输出。  \n curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);  \n //执行命令  \n $data = curl_exec($curl);  \n //关闭URL请求  \n curl_close($curl);\n\n```\n\n3.最终将获取到的数据通过JSON格式并返回给请求页面\n\n```\n$city = $_POST['weather'];\n //初始化  \n $curl = curl_init();  \n //设置抓取的url  \n curl_setopt($curl, CURLOPT_URL, 'http://www.sojson.com/open/api/weather/json.shtml?city='.$city);\n //设置获取的信息以文件流的形式返回，而不是直接输出。  \n curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);  \n //执行命令  \n $data = curl_exec($curl);  \n //关闭URL请求  \n curl_close($curl);  \n //显示获得的数据  \n$contents = json_decode($data, true);\nif (!empty($contents)){\n\t$array = array('status' => 0,'info' => $contents['data']['forecast']);\n\techo json_encode($array);\n}\n\n```\n\n### 当PHP页面请求成功,并获取到数据以后,会返回成功状态,和数据给请求页面.\n1.请求页获取到数据以后判断是否返回成功,如果成功表示 res.status == 0,将数据通过遍历展现在页面上;\n\n```\nif (res.status == 0){\n\tvar con = '';\n\t $.each(res.info, function(i, j){\n\t \t con += \"<li>日期：\"+j.date+\"</li>\";\n         con += \"<li>最高温：\"+j.high+\"</li>\";\n         con += \"<li>风：\"+j.fengli+\"</li>\";\n         con += \"<li>最低温：\"+j.low+\"</li>\";\n    });\n\t$(\"#con\").html(con);\n}\n\n```\n\n2.根据选择不同的城市,最终显示如下结果:\n\n![](http://otbcgjn6c.bkt.clouddn.com/150147099734.jpg)\n","slug":"获取免费天气API","published":1,"updated":"2017-12-29T12:52:41.731Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd68001losmmpfny65mo","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/3d4c72a795743e3d447d90275d322219979b1dab2438c-v0OcGi_fw658.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"Demo-Github地址\"><a href=\"#Demo-Github地址\" class=\"headerlink\" title=\"Demo Github地址:\"></a>Demo Github地址:</h3><p><a href=\"https://github.com/yyb568/WeatherDemo\" target=\"_blank\" rel=\"external\">https://github.com/yyb568/WeatherDemo</a></p>\n<h3 id=\"了解\"><a href=\"#了解\" class=\"headerlink\" title=\"了解\"></a>了解</h3><p>如何在本地获取免费的天气预报关键在于要有免费的天气预报接口;貌似网上还挺多的下面的是我调用的api接口地址:<br><a href=\"http://www.sojson.com/open/api/weather/json.shtml?city=北京\" target=\"_blank\" rel=\"external\">http://www.sojson.com/open/api/weather/json.shtml?city=北京</a></p>\n<h3 id=\"Demo测试\"><a href=\"#Demo测试\" class=\"headerlink\" title=\"Demo测试\"></a>Demo测试</h3><p>下面是一段简单的下拉选择框<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body&gt;</div><div class=\"line\">    &lt;select id=&quot;weather&quot; name=&quot;weather&quot;&gt;</div><div class=\"line\">\t\t&lt;option&gt;请选择&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;济南&quot;&gt;济南&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;泰安&quot;&gt;泰安&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;潍坊&quot;&gt;潍坊&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;临沂&quot;&gt;临沂&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;新泰&quot;&gt;新泰&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;威海&quot;&gt;威海&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;长春&quot;&gt;长春&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;三亚&quot;&gt;三亚&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;北京&quot;&gt;北京&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt;</div><div class=\"line\">\t&lt;/select&gt;&lt;br&gt;&lt;br&gt;</div><div class=\"line\">    &lt;div id=&quot;box&quot;&gt;</div><div class=\"line\">      &lt;ul id=&quot;con&quot;&gt;&lt;/ul&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure></p>\n<p>效果图:<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/20170731104139.png\" alt=\"\"></p>\n<h3 id=\"Ajax请求\"><a href=\"#Ajax请求\" class=\"headerlink\" title=\"Ajax请求\"></a>Ajax请求</h3><p>1.首先要引入一个jQ框架</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;./jquery-2.1.4.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>2.当我选择某一个城市后,会触发一个点击事件;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//获取选中的城市</div><div class=\"line\">$(&quot;#weather&quot;).change(function()&#123;</div><div class=\"line\">\tvar checkValue=$(&quot;#weather&quot;).val();</div><div class=\"line\">\tvar url = &quot;./weather.php&quot;;</div><div class=\"line\">\t$.post(url,&#123;weather:checkValue&#125;,function(res)&#123;</div><div class=\"line\"></div><div class=\"line\">\t&#125;,&apos;json&apos;)</div><div class=\"line\"></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>3.当我选中后会获取相应的城市名称如:新泰,Ajax会把这个城市名称通过POST请求传到当前文件下的weather.php</p>\n<h3 id=\"PHP文件处理请求\"><a href=\"#PHP文件处理请求\" class=\"headerlink\" title=\"PHP文件处理请求\"></a>PHP文件处理请求</h3><p>1.获取城市名称;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$city = $_POST[&apos;weather&apos;];</div></pre></td></tr></table></figure></p>\n<p>2.PHP 将接收到城市进行组合,并以url链接形式去请求访问该API链接;以下是CURL的用法;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$city = $_POST[&apos;weather&apos;];</div><div class=\"line\"> //初始化  </div><div class=\"line\"> $curl = curl_init();  </div><div class=\"line\"> //设置抓取的url  </div><div class=\"line\"> curl_setopt($curl, CURLOPT_URL, &apos;http://www.sojson.com/open/api/weather/json.shtml?city=&apos;.$city);</div><div class=\"line\"> //设置获取的信息以文件流的形式返回，而不是直接输出。  </div><div class=\"line\"> curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);  </div><div class=\"line\"> //执行命令  </div><div class=\"line\"> $data = curl_exec($curl);  </div><div class=\"line\"> //关闭URL请求  </div><div class=\"line\"> curl_close($curl);</div></pre></td></tr></table></figure>\n<p>3.最终将获取到的数据通过JSON格式并返回给请求页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">$city = $_POST[&apos;weather&apos;];</div><div class=\"line\"> //初始化  </div><div class=\"line\"> $curl = curl_init();  </div><div class=\"line\"> //设置抓取的url  </div><div class=\"line\"> curl_setopt($curl, CURLOPT_URL, &apos;http://www.sojson.com/open/api/weather/json.shtml?city=&apos;.$city);</div><div class=\"line\"> //设置获取的信息以文件流的形式返回，而不是直接输出。  </div><div class=\"line\"> curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);  </div><div class=\"line\"> //执行命令  </div><div class=\"line\"> $data = curl_exec($curl);  </div><div class=\"line\"> //关闭URL请求  </div><div class=\"line\"> curl_close($curl);  </div><div class=\"line\"> //显示获得的数据  </div><div class=\"line\">$contents = json_decode($data, true);</div><div class=\"line\">if (!empty($contents))&#123;</div><div class=\"line\">\t$array = array(&apos;status&apos; =&gt; 0,&apos;info&apos; =&gt; $contents[&apos;data&apos;][&apos;forecast&apos;]);</div><div class=\"line\">\techo json_encode($array);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"当PHP页面请求成功-并获取到数据以后-会返回成功状态-和数据给请求页面\"><a href=\"#当PHP页面请求成功-并获取到数据以后-会返回成功状态-和数据给请求页面\" class=\"headerlink\" title=\"当PHP页面请求成功,并获取到数据以后,会返回成功状态,和数据给请求页面.\"></a>当PHP页面请求成功,并获取到数据以后,会返回成功状态,和数据给请求页面.</h3><p>1.请求页获取到数据以后判断是否返回成功,如果成功表示 res.status == 0,将数据通过遍历展现在页面上;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (res.status == 0)&#123;</div><div class=\"line\">\tvar con = &apos;&apos;;</div><div class=\"line\">\t $.each(res.info, function(i, j)&#123;</div><div class=\"line\">\t \t con += &quot;&lt;li&gt;日期：&quot;+j.date+&quot;&lt;/li&gt;&quot;;</div><div class=\"line\">         con += &quot;&lt;li&gt;最高温：&quot;+j.high+&quot;&lt;/li&gt;&quot;;</div><div class=\"line\">         con += &quot;&lt;li&gt;风：&quot;+j.fengli+&quot;&lt;/li&gt;&quot;;</div><div class=\"line\">         con += &quot;&lt;li&gt;最低温：&quot;+j.low+&quot;&lt;/li&gt;&quot;;</div><div class=\"line\">    &#125;);</div><div class=\"line\">\t$(&quot;#con&quot;).html(con);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2.根据选择不同的城市,最终显示如下结果:</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/150147099734.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/3d4c72a795743e3d447d90275d322219979b1dab2438c-v0OcGi_fw658.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"Demo-Github地址\"><a href=\"#Demo-Github地址\" class=\"headerlink\" title=\"Demo Github地址:\"></a>Demo Github地址:</h3><p><a href=\"https://github.com/yyb568/WeatherDemo\" target=\"_blank\" rel=\"external\">https://github.com/yyb568/WeatherDemo</a></p>\n<h3 id=\"了解\"><a href=\"#了解\" class=\"headerlink\" title=\"了解\"></a>了解</h3><p>如何在本地获取免费的天气预报关键在于要有免费的天气预报接口;貌似网上还挺多的下面的是我调用的api接口地址:<br><a href=\"http://www.sojson.com/open/api/weather/json.shtml?city=北京\" target=\"_blank\" rel=\"external\">http://www.sojson.com/open/api/weather/json.shtml?city=北京</a></p>\n<h3 id=\"Demo测试\"><a href=\"#Demo测试\" class=\"headerlink\" title=\"Demo测试\"></a>Demo测试</h3><p>下面是一段简单的下拉选择框<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body&gt;</div><div class=\"line\">    &lt;select id=&quot;weather&quot; name=&quot;weather&quot;&gt;</div><div class=\"line\">\t\t&lt;option&gt;请选择&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;济南&quot;&gt;济南&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;泰安&quot;&gt;泰安&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;潍坊&quot;&gt;潍坊&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;临沂&quot;&gt;临沂&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;新泰&quot;&gt;新泰&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;威海&quot;&gt;威海&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;长春&quot;&gt;长春&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;三亚&quot;&gt;三亚&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;北京&quot;&gt;北京&lt;/option&gt;</div><div class=\"line\">\t\t&lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt;</div><div class=\"line\">\t&lt;/select&gt;&lt;br&gt;&lt;br&gt;</div><div class=\"line\">    &lt;div id=&quot;box&quot;&gt;</div><div class=\"line\">      &lt;ul id=&quot;con&quot;&gt;&lt;/ul&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure></p>\n<p>效果图:<br><img src=\"http://otbcgjn6c.bkt.clouddn.com/20170731104139.png\" alt=\"\"></p>\n<h3 id=\"Ajax请求\"><a href=\"#Ajax请求\" class=\"headerlink\" title=\"Ajax请求\"></a>Ajax请求</h3><p>1.首先要引入一个jQ框架</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;./jquery-2.1.4.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>2.当我选择某一个城市后,会触发一个点击事件;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//获取选中的城市</div><div class=\"line\">$(&quot;#weather&quot;).change(function()&#123;</div><div class=\"line\">\tvar checkValue=$(&quot;#weather&quot;).val();</div><div class=\"line\">\tvar url = &quot;./weather.php&quot;;</div><div class=\"line\">\t$.post(url,&#123;weather:checkValue&#125;,function(res)&#123;</div><div class=\"line\"></div><div class=\"line\">\t&#125;,&apos;json&apos;)</div><div class=\"line\"></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>3.当我选中后会获取相应的城市名称如:新泰,Ajax会把这个城市名称通过POST请求传到当前文件下的weather.php</p>\n<h3 id=\"PHP文件处理请求\"><a href=\"#PHP文件处理请求\" class=\"headerlink\" title=\"PHP文件处理请求\"></a>PHP文件处理请求</h3><p>1.获取城市名称;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$city = $_POST[&apos;weather&apos;];</div></pre></td></tr></table></figure></p>\n<p>2.PHP 将接收到城市进行组合,并以url链接形式去请求访问该API链接;以下是CURL的用法;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$city = $_POST[&apos;weather&apos;];</div><div class=\"line\"> //初始化  </div><div class=\"line\"> $curl = curl_init();  </div><div class=\"line\"> //设置抓取的url  </div><div class=\"line\"> curl_setopt($curl, CURLOPT_URL, &apos;http://www.sojson.com/open/api/weather/json.shtml?city=&apos;.$city);</div><div class=\"line\"> //设置获取的信息以文件流的形式返回，而不是直接输出。  </div><div class=\"line\"> curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);  </div><div class=\"line\"> //执行命令  </div><div class=\"line\"> $data = curl_exec($curl);  </div><div class=\"line\"> //关闭URL请求  </div><div class=\"line\"> curl_close($curl);</div></pre></td></tr></table></figure>\n<p>3.最终将获取到的数据通过JSON格式并返回给请求页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">$city = $_POST[&apos;weather&apos;];</div><div class=\"line\"> //初始化  </div><div class=\"line\"> $curl = curl_init();  </div><div class=\"line\"> //设置抓取的url  </div><div class=\"line\"> curl_setopt($curl, CURLOPT_URL, &apos;http://www.sojson.com/open/api/weather/json.shtml?city=&apos;.$city);</div><div class=\"line\"> //设置获取的信息以文件流的形式返回，而不是直接输出。  </div><div class=\"line\"> curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);  </div><div class=\"line\"> //执行命令  </div><div class=\"line\"> $data = curl_exec($curl);  </div><div class=\"line\"> //关闭URL请求  </div><div class=\"line\"> curl_close($curl);  </div><div class=\"line\"> //显示获得的数据  </div><div class=\"line\">$contents = json_decode($data, true);</div><div class=\"line\">if (!empty($contents))&#123;</div><div class=\"line\">\t$array = array(&apos;status&apos; =&gt; 0,&apos;info&apos; =&gt; $contents[&apos;data&apos;][&apos;forecast&apos;]);</div><div class=\"line\">\techo json_encode($array);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"当PHP页面请求成功-并获取到数据以后-会返回成功状态-和数据给请求页面\"><a href=\"#当PHP页面请求成功-并获取到数据以后-会返回成功状态-和数据给请求页面\" class=\"headerlink\" title=\"当PHP页面请求成功,并获取到数据以后,会返回成功状态,和数据给请求页面.\"></a>当PHP页面请求成功,并获取到数据以后,会返回成功状态,和数据给请求页面.</h3><p>1.请求页获取到数据以后判断是否返回成功,如果成功表示 res.status == 0,将数据通过遍历展现在页面上;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (res.status == 0)&#123;</div><div class=\"line\">\tvar con = &apos;&apos;;</div><div class=\"line\">\t $.each(res.info, function(i, j)&#123;</div><div class=\"line\">\t \t con += &quot;&lt;li&gt;日期：&quot;+j.date+&quot;&lt;/li&gt;&quot;;</div><div class=\"line\">         con += &quot;&lt;li&gt;最高温：&quot;+j.high+&quot;&lt;/li&gt;&quot;;</div><div class=\"line\">         con += &quot;&lt;li&gt;风：&quot;+j.fengli+&quot;&lt;/li&gt;&quot;;</div><div class=\"line\">         con += &quot;&lt;li&gt;最低温：&quot;+j.low+&quot;&lt;/li&gt;&quot;;</div><div class=\"line\">    &#125;);</div><div class=\"line\">\t$(&quot;#con&quot;).html(con);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2.根据选择不同的城市,最终显示如下结果:</p>\n<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/150147099734.jpg\" alt=\"\"></p>\n"},{"title":"MySQL优化之三范式","date":"2017-08-01T01:28:36.000Z","_content":"\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-29.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n### 常见的数据库优化的几种方法:\n1.数据表要设计合理，满足三范式（3NF）；\n2.创建适当索引；\n3.对sql语句进行优化，定位慢查询（explain）；\n4.使用分表、分区技术；\n5.读写分离；\n6.创建适当的存储过程、函数、触发器；\n7.对my.ini进行优化配置；\n8.软硬件的升级。\n### 三范式的方法\n\n#### 一范式（1NF）。\n1.表的属性（列），不能再分。比如：\n```\nId     name            sex        num           grade\n1      王某某          男        123456       80、90,75\n\n```\n上面的例子中grade（成绩）字段下面有三个分数，分别是语文、数学、英语，那他就应该单独建立一张grade表，如果grade字段只有一个值，比如总分，那它就是不可再分的。\n\n2.不能有重复的列。\n\n```\nId    name           sex        num    num\n\n```\n重复的列无法添加数据。\n\n#### 二范式（2NF）。\n\n 1.2NF就是指不能有完全相同的一条记录，可以通过设置主键解决，而且该主键为自增值。\n\n#### 三范式（3NF）。\n1.如果列的值可以通过另建一张表关联起来，即同一个字段不能有过多重复的记录。比如:\n\n```\nId      name          sex         num           class       academy\n1       王            男          123           A班         信息学院\n2       李            女          234           A班         信息学院\n3       罗            男          456           A班         信息学院\n4       张            男          879           A班         信息学院\n\n```\n改为：\nStudent表：\n```\nId     name           sex         num           classid\n1       王            男          123             1\n\n```\n\nstudent表的班级信息可以通过外键从班级表中查询，减少了数据冗余和更新异常。\n","source":"_posts/mysql优化三范式.md","raw":"---\ntitle: MySQL优化之三范式\ndate: 2017-8-1 09:28:36\ntags:\n - MySQL\n---\n\n<img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-29.jpg\"  width = \"400\" alt=\"图片名称\" align=center style=\"border:1px solid  #F6F6F6\"/>\n\n\n### 常见的数据库优化的几种方法:\n1.数据表要设计合理，满足三范式（3NF）；\n2.创建适当索引；\n3.对sql语句进行优化，定位慢查询（explain）；\n4.使用分表、分区技术；\n5.读写分离；\n6.创建适当的存储过程、函数、触发器；\n7.对my.ini进行优化配置；\n8.软硬件的升级。\n### 三范式的方法\n\n#### 一范式（1NF）。\n1.表的属性（列），不能再分。比如：\n```\nId     name            sex        num           grade\n1      王某某          男        123456       80、90,75\n\n```\n上面的例子中grade（成绩）字段下面有三个分数，分别是语文、数学、英语，那他就应该单独建立一张grade表，如果grade字段只有一个值，比如总分，那它就是不可再分的。\n\n2.不能有重复的列。\n\n```\nId    name           sex        num    num\n\n```\n重复的列无法添加数据。\n\n#### 二范式（2NF）。\n\n 1.2NF就是指不能有完全相同的一条记录，可以通过设置主键解决，而且该主键为自增值。\n\n#### 三范式（3NF）。\n1.如果列的值可以通过另建一张表关联起来，即同一个字段不能有过多重复的记录。比如:\n\n```\nId      name          sex         num           class       academy\n1       王            男          123           A班         信息学院\n2       李            女          234           A班         信息学院\n3       罗            男          456           A班         信息学院\n4       张            男          879           A班         信息学院\n\n```\n改为：\nStudent表：\n```\nId     name           sex         num           classid\n1       王            男          123             1\n\n```\n\nstudent表的班级信息可以通过外键从班级表中查询，减少了数据冗余和更新异常。\n","slug":"mysql优化三范式","published":1,"updated":"2017-12-29T12:51:22.672Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbz6hd6b001nosmmekf17k05","content":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-29.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"常见的数据库优化的几种方法\"><a href=\"#常见的数据库优化的几种方法\" class=\"headerlink\" title=\"常见的数据库优化的几种方法:\"></a>常见的数据库优化的几种方法:</h3><p>1.数据表要设计合理，满足三范式（3NF）；<br>2.创建适当索引；<br>3.对sql语句进行优化，定位慢查询（explain）；<br>4.使用分表、分区技术；<br>5.读写分离；<br>6.创建适当的存储过程、函数、触发器；<br>7.对my.ini进行优化配置；<br>8.软硬件的升级。</p>\n<h3 id=\"三范式的方法\"><a href=\"#三范式的方法\" class=\"headerlink\" title=\"三范式的方法\"></a>三范式的方法</h3><h4 id=\"一范式（1NF）。\"><a href=\"#一范式（1NF）。\" class=\"headerlink\" title=\"一范式（1NF）。\"></a>一范式（1NF）。</h4><p>1.表的属性（列），不能再分。比如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Id     name            sex        num           grade</div><div class=\"line\">1      王某某          男        123456       80、90,75</div></pre></td></tr></table></figure></p>\n<p>上面的例子中grade（成绩）字段下面有三个分数，分别是语文、数学、英语，那他就应该单独建立一张grade表，如果grade字段只有一个值，比如总分，那它就是不可再分的。</p>\n<p>2.不能有重复的列。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Id    name           sex        num    num</div></pre></td></tr></table></figure>\n<p>重复的列无法添加数据。</p>\n<h4 id=\"二范式（2NF）。\"><a href=\"#二范式（2NF）。\" class=\"headerlink\" title=\"二范式（2NF）。\"></a>二范式（2NF）。</h4><p> 1.2NF就是指不能有完全相同的一条记录，可以通过设置主键解决，而且该主键为自增值。</p>\n<h4 id=\"三范式（3NF）。\"><a href=\"#三范式（3NF）。\" class=\"headerlink\" title=\"三范式（3NF）。\"></a>三范式（3NF）。</h4><p>1.如果列的值可以通过另建一张表关联起来，即同一个字段不能有过多重复的记录。比如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Id      name          sex         num           class       academy</div><div class=\"line\">1       王            男          123           A班         信息学院</div><div class=\"line\">2       李            女          234           A班         信息学院</div><div class=\"line\">3       罗            男          456           A班         信息学院</div><div class=\"line\">4       张            男          879           A班         信息学院</div></pre></td></tr></table></figure>\n<p>改为：<br>Student表：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Id     name           sex         num           classid</div><div class=\"line\">1       王            男          123             1</div></pre></td></tr></table></figure></p>\n<p>student表的班级信息可以通过外键从班级表中查询，减少了数据冗余和更新异常。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://otbcgjn6c.bkt.clouddn.com/diary-29.jpg\" width=\"400\" alt=\"图片名称\" align=\"center\" style=\"border:1px solid  #F6F6F6\"></p>\n<h3 id=\"常见的数据库优化的几种方法\"><a href=\"#常见的数据库优化的几种方法\" class=\"headerlink\" title=\"常见的数据库优化的几种方法:\"></a>常见的数据库优化的几种方法:</h3><p>1.数据表要设计合理，满足三范式（3NF）；<br>2.创建适当索引；<br>3.对sql语句进行优化，定位慢查询（explain）；<br>4.使用分表、分区技术；<br>5.读写分离；<br>6.创建适当的存储过程、函数、触发器；<br>7.对my.ini进行优化配置；<br>8.软硬件的升级。</p>\n<h3 id=\"三范式的方法\"><a href=\"#三范式的方法\" class=\"headerlink\" title=\"三范式的方法\"></a>三范式的方法</h3><h4 id=\"一范式（1NF）。\"><a href=\"#一范式（1NF）。\" class=\"headerlink\" title=\"一范式（1NF）。\"></a>一范式（1NF）。</h4><p>1.表的属性（列），不能再分。比如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Id     name            sex        num           grade</div><div class=\"line\">1      王某某          男        123456       80、90,75</div></pre></td></tr></table></figure></p>\n<p>上面的例子中grade（成绩）字段下面有三个分数，分别是语文、数学、英语，那他就应该单独建立一张grade表，如果grade字段只有一个值，比如总分，那它就是不可再分的。</p>\n<p>2.不能有重复的列。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Id    name           sex        num    num</div></pre></td></tr></table></figure>\n<p>重复的列无法添加数据。</p>\n<h4 id=\"二范式（2NF）。\"><a href=\"#二范式（2NF）。\" class=\"headerlink\" title=\"二范式（2NF）。\"></a>二范式（2NF）。</h4><p> 1.2NF就是指不能有完全相同的一条记录，可以通过设置主键解决，而且该主键为自增值。</p>\n<h4 id=\"三范式（3NF）。\"><a href=\"#三范式（3NF）。\" class=\"headerlink\" title=\"三范式（3NF）。\"></a>三范式（3NF）。</h4><p>1.如果列的值可以通过另建一张表关联起来，即同一个字段不能有过多重复的记录。比如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Id      name          sex         num           class       academy</div><div class=\"line\">1       王            男          123           A班         信息学院</div><div class=\"line\">2       李            女          234           A班         信息学院</div><div class=\"line\">3       罗            男          456           A班         信息学院</div><div class=\"line\">4       张            男          879           A班         信息学院</div></pre></td></tr></table></figure>\n<p>改为：<br>Student表：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Id     name           sex         num           classid</div><div class=\"line\">1       王            男          123             1</div></pre></td></tr></table></figure></p>\n<p>student表的班级信息可以通过外键从班级表中查询，减少了数据冗余和更新异常。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjbz6hcww0002osmmgrctmy0a","tag_id":"cjbz6hcx70004osmmxbe47ma3","_id":"cjbz6hcx90005osmmdptauc8h"},{"post_id":"cjbz6hd3e0008osmmw99b0k16","tag_id":"cjbz6hcx70004osmmxbe47ma3","_id":"cjbz6hd3w000dosmm21ges8rw"},{"post_id":"cjbz6hd360006osmmcc9ayw15","tag_id":"cjbz6hd3p000aosmmphmemw2y","_id":"cjbz6hd48000josmmrw7y3wdf"},{"post_id":"cjbz6hd48000kosmmcjf213ou","tag_id":"cjbz6hd45000hosmmpl7epoju","_id":"cjbz6hd4j000posmmdl4q0ubs"},{"post_id":"cjbz6hd4f000mosmm9tfe4j2e","tag_id":"cjbz6hd45000hosmmpl7epoju","_id":"cjbz6hd4l000rosmme02khdse"},{"post_id":"cjbz6hd4j000qosmmnp6xbkin","tag_id":"cjbz6hd45000hosmmpl7epoju","_id":"cjbz6hd4q000uosmmoqbpmnou"},{"post_id":"cjbz6hd3s000bosmm9qqurpq5","tag_id":"cjbz6hd45000hosmmpl7epoju","_id":"cjbz6hd4w000wosmmzxhi338v"},{"post_id":"cjbz6hd3s000bosmm9qqurpq5","tag_id":"cjbz6hd4i000oosmmq8z7f2ad","_id":"cjbz6hd50000zosmmi3k8ilsq"},{"post_id":"cjbz6hd4x000xosmmwakr9cuu","tag_id":"cjbz6hd3p000aosmmphmemw2y","_id":"cjbz6hd540011osmmgsh5b6q8"},{"post_id":"cjbz6hd4x000xosmmwakr9cuu","tag_id":"cjbz6hd45000hosmmpl7epoju","_id":"cjbz6hd570013osmmssqpovgr"},{"post_id":"cjbz6hd3x000eosmmlkt96f2j","tag_id":"cjbz6hd45000hosmmpl7epoju","_id":"cjbz6hd5a0016osmmufuoz5fd"},{"post_id":"cjbz6hd3x000eosmmlkt96f2j","tag_id":"cjbz6hd4z000yosmmkfugn094","_id":"cjbz6hd5c0018osmmmwvke1dv"},{"post_id":"cjbz6hd42000gosmmpro18ppu","tag_id":"cjbz6hd580014osmmqg6i9ykb","_id":"cjbz6hd5f001bosmm8gnodydg"},{"post_id":"cjbz6hd4m000sosmmijk2pjul","tag_id":"cjbz6hd5e001aosmm8c9736l7","_id":"cjbz6hd5o001gosmmp4m49zbe"},{"post_id":"cjbz6hd4s000vosmmftiomj12","tag_id":"cjbz6hd5k001eosmm6gxvmwj7","_id":"cjbz6hd64001kosmmtq6g8xgi"},{"post_id":"cjbz6hd500010osmm45xa1kts","tag_id":"cjbz6hd5x001iosmmkcwu7duj","_id":"cjbz6hd6c001oosmmc50k5h7f"},{"post_id":"cjbz6hd560012osmmto3o3pg2","tag_id":"cjbz6hd5k001eosmm6gxvmwj7","_id":"cjbz6hd6e001qosmmv4dodepi"},{"post_id":"cjbz6hd580015osmm07ulbzf0","tag_id":"cjbz6hd6d001posmmo2ft585u","_id":"cjbz6hd6f001sosmm8u5cxkno"},{"post_id":"cjbz6hd5a0017osmm22dw95zf","tag_id":"cjbz6hd6e001rosmms9lyowzk","_id":"cjbz6hd6g001uosmmf78w3gkt"},{"post_id":"cjbz6hd5d0019osmm2y8eylgy","tag_id":"cjbz6hd6f001tosmmzzzqwlvy","_id":"cjbz6hd6h001wosmm18jvddcz"},{"post_id":"cjbz6hd5f001cosmm498777lv","tag_id":"cjbz6hd6f001tosmmzzzqwlvy","_id":"cjbz6hd6i001yosmmw9rqa71j"},{"post_id":"cjbz6hd5j001dosmm2gor8gvv","tag_id":"cjbz6hd6h001xosmm8k0f65tq","_id":"cjbz6hd6i0020osmm3qtxmu43"},{"post_id":"cjbz6hd5m001fosmm8g7vwsq4","tag_id":"cjbz6hd6i001zosmm43qj80me","_id":"cjbz6hd6j0023osmmut34xexc"},{"post_id":"cjbz6hd5m001fosmm8g7vwsq4","tag_id":"cjbz6hd6j0021osmmr85tmwqx","_id":"cjbz6hd6k0024osmmoa7fh6sx"},{"post_id":"cjbz6hd5p001hosmmukc3lk8g","tag_id":"cjbz6hd3p000aosmmphmemw2y","_id":"cjbz6hd6k0026osmmbtacdfyy"},{"post_id":"cjbz6hd5p001hosmmukc3lk8g","tag_id":"cjbz6hd6j0022osmmwviujn4e","_id":"cjbz6hd6k0027osmmll27s89z"},{"post_id":"cjbz6hd5y001josmm1agc8m7x","tag_id":"cjbz6hd6k0025osmmv3m46o5l","_id":"cjbz6hd6l0029osmm12hdxjy5"},{"post_id":"cjbz6hd68001losmmpfny65mo","tag_id":"cjbz6hd3p000aosmmphmemw2y","_id":"cjbz6hd6m002bosmm1dg6b00j"},{"post_id":"cjbz6hd68001losmmpfny65mo","tag_id":"cjbz6hd45000hosmmpl7epoju","_id":"cjbz6hd6m002cosmm6m6tt46t"},{"post_id":"cjbz6hd68001losmmpfny65mo","tag_id":"cjbz6hd6l0028osmmiafqnthi","_id":"cjbz6hd6m002dosmmiw8wwb9b"},{"post_id":"cjbz6hd6b001nosmmekf17k05","tag_id":"cjbz6hd6l002aosmmasuxbi8k","_id":"cjbz6hd6m002eosmm29qleshd"}],"Tag":[{"name":"GIT","_id":"cjbz6hcx70004osmmxbe47ma3"},{"name":"jQery","_id":"cjbz6hd3p000aosmmphmemw2y"},{"name":"PHP","_id":"cjbz6hd45000hosmmpl7epoju"},{"name":"Nginx","_id":"cjbz6hd4i000oosmmq8z7f2ad"},{"name":"QueryList","_id":"cjbz6hd4z000yosmmkfugn094"},{"name":"Mysql","_id":"cjbz6hd580014osmmqg6i9ykb"},{"name":"Swiper","_id":"cjbz6hd5e001aosmm8c9736l7"},{"name":"Python","_id":"cjbz6hd5k001eosmm6gxvmwj7"},{"name":"GIthub","_id":"cjbz6hd5x001iosmmkcwu7duj"},{"name":"七牛云","_id":"cjbz6hd6d001posmmo2ft585u"},{"name":"redis","_id":"cjbz6hd6e001rosmms9lyowzk"},{"name":"HTML","_id":"cjbz6hd6f001tosmmzzzqwlvy"},{"name":"GitHub","_id":"cjbz6hd6h001xosmm8k0f65tq"},{"name":"正则","_id":"cjbz6hd6i001zosmm43qj80me"},{"name":"re","_id":"cjbz6hd6j0021osmmr85tmwqx"},{"name":"CSS","_id":"cjbz6hd6j0022osmmwviujn4e"},{"name":"博客","_id":"cjbz6hd6k0025osmmv3m46o5l"},{"name":"API","_id":"cjbz6hd6l0028osmmiafqnthi"},{"name":"MySQL","_id":"cjbz6hd6l002aosmmasuxbi8k"}]}}