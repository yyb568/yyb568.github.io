<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>尹义斌•Blog</title>
  
  <subtitle>会道者一缕发丝牵大象,盲修者千钧铁棒打苍蝇</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.yybblog.cn/"/>
  <updated>2019-06-19T07:24:56.837Z</updated>
  <id>http://www.yybblog.cn/</id>
  
  <author>
    <name>尹义斌</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Html+PHP实现简单计算器</title>
    <link href="http://www.yybblog.cn/2018/01/09/php%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <id>http://www.yybblog.cn/2018/01/09/php简单计算器/</id>
    <published>2018-01-09T07:48:03.000Z</published>
    <updated>2019-06-19T07:24:56.837Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$one = $_POST[&apos;one&apos;];</div><div class="line">$two = $_POST[&apos;two&apos;];</div><div class="line">$type = $_POST[&apos;type&apos;];</div></pre></td></tr></table></figure><h3 id="面试经"><a href="#面试经" class="headerlink" title="面试经"></a>面试经</h3><p>1.如果让你写一个简单计算器</p><h4 id="上html代码"><a href="#上html代码" class="headerlink" title="上html代码"></a>上html代码</h4><p>1.index.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">    &lt;meta http-equiv=&quot;content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class="line">    &lt;title&gt;计算器&lt;/title&gt;</div><div class="line">        &lt;head&gt;&lt;/head&gt;</div><div class="line">        &lt;body&gt;</div><div class="line">            &lt;form&gt;</div><div class="line">                数字1：&lt;input type=&quot;text&quot; id =&quot;one&quot; name=&quot;one&quot;&gt;&lt;br&gt;</div><div class="line">                数字2：&lt;input type=&quot;text&quot; id =&quot;two&quot; name=&quot;two&quot;&gt;&lt;br&gt;&lt;br&gt;</div><div class="line">                &lt;button type=&quot;button&quot; id=&quot;jias&quot; onClick=&quot;jia()&quot; data-type=&quot;1&quot;&gt;加&lt;/button&gt;</div><div class="line">                &lt;button type=&quot;button&quot; id=&quot;jians&quot; onClick=&quot;jian()&quot; data-type=&quot;2&quot;&gt;减&lt;/button&gt;</div><div class="line">                &lt;button type=&quot;button&quot; id=&quot;chengs&quot; onClick=&quot;cheng()&quot; data-type=&quot;3&quot;&gt;乘&lt;/button&gt;</div><div class="line">                &lt;button type=&quot;button&quot; id=&quot;chus&quot; onClick=&quot;chu()&quot; data-type=&quot;4&quot;&gt;除&lt;/button&gt;</div><div class="line">            &lt;/form&gt;</div><div class="line">            结果：&lt;div id=&quot;res&quot;&gt;&lt;/div&gt;</div><div class="line">        &lt;/body&gt;</div><div class="line">        &lt;script src=&quot;./jquery.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">        &lt;script&gt;</div><div class="line">            function jia()&#123;</div><div class="line">               var one = $(&quot;#one&quot;).val();</div><div class="line">               var two = $(&quot;#two&quot;).val(); </div><div class="line">               var type = $(&quot;#jias&quot;).data(&quot;type&quot;);</div><div class="line">               var url = &apos;./index.php&apos;;</div><div class="line">               $.post(url,&#123;&apos;one&apos;:one,&apos;two&apos;:two,&apos;type&apos;:type&#125;,function(data)&#123;</div><div class="line">                    if (data.status == 1)&#123;</div><div class="line">                        $(&quot;#res&quot;).text(data.res);</div><div class="line">                    &#125;</div><div class="line">               &#125;,&apos;json&apos;)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            function jian()&#123;</div><div class="line">               var one = $(&quot;#one&quot;).val();</div><div class="line">               var two = $(&quot;#two&quot;).val(); </div><div class="line">               var type = $(&quot;#jians&quot;).data(&quot;type&quot;);</div><div class="line">               var url = &apos;./index.php&apos;;</div><div class="line">               $.post(url,&#123;&apos;one&apos;:one,&apos;two&apos;:two,&apos;type&apos;:type&#125;,function(data)&#123;</div><div class="line">                    if (data.status == 1)&#123;</div><div class="line">                        $(&quot;#res&quot;).text(data.res);</div><div class="line">                    &#125;</div><div class="line">               &#125;,&apos;json&apos;)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            function cheng()&#123;</div><div class="line">               var one = $(&quot;#one&quot;).val();</div><div class="line">               var two = $(&quot;#two&quot;).val(); </div><div class="line">               var type = $(&quot;#chengs&quot;).data(&quot;type&quot;);</div><div class="line">               var url = &apos;./index.php&apos;;</div><div class="line">               $.post(url,&#123;&apos;one&apos;:one,&apos;two&apos;:two,&apos;type&apos;:type&#125;,function(data)&#123;</div><div class="line">                    if (data.status == 1)&#123;</div><div class="line">                        $(&quot;#res&quot;).text(data.res);</div><div class="line">                    &#125;</div><div class="line">               &#125;,&apos;json&apos;)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            function chu()&#123;</div><div class="line">               var one = $(&quot;#one&quot;).val();</div><div class="line">               var two = $(&quot;#two&quot;).val(); </div><div class="line">               var type = $(&quot;#chus&quot;).data(&quot;type&quot;);</div><div class="line">               var url = &apos;./index.php&apos;;</div><div class="line">               $.post(url,&#123;&apos;one&apos;:one,&apos;two&apos;:two,&apos;type&apos;:type&#125;,function(data)&#123;</div><div class="line">                    if (data.status == 1)&#123;</div><div class="line">                        $(&quot;#res&quot;).text(data.res);</div><div class="line">                    &#125;</div><div class="line">               &#125;,&apos;json&apos;)</div><div class="line">            &#125;</div><div class="line">        &lt;/script&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p><h4 id="上php代码"><a href="#上php代码" class="headerlink" title="上php代码"></a>上php代码</h4><p>1.index.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$one = $_POST[&apos;one&apos;];</div><div class="line">$two = $_POST[&apos;two&apos;];</div><div class="line">$type = $_POST[&apos;type&apos;];</div><div class="line"></div><div class="line">if ($type == 1)&#123;</div><div class="line">$res = $one + $two;</div><div class="line">&#125;else if($type == 2)&#123;</div><div class="line">$res = $one - $two;</div><div class="line">&#125;else if($type == 3)&#123;</div><div class="line">$res = $one * $two;</div><div class="line">&#125;else if($type == 4)&#123;</div><div class="line">if ($two == 0)&#123;</div><div class="line">$two = 1;</div><div class="line">&#125;</div><div class="line">$res = $one / $two;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$array = array(&apos;res&apos; =&gt; $res,&apos;status&apos; =&gt; 1);</div><div class="line">echo json_encode($array);</div></pre></td></tr></table></figure></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>个人素质不达标</p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$one = $_POST[&amp;apos;one&amp;apos;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$two = $_POST[&amp;apos;two&amp;apos;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$type = $_POST[&amp;apos;type&amp;apos;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="GIT" scheme="http://www.yybblog.cn/tags/GIT/"/>
    
  </entry>
  
  <entry>
    <title>Python中的包和__init__.py文件</title>
    <link href="http://www.yybblog.cn/2018/01/07/python%E7%9A%84__init__/"/>
    <id>http://www.yybblog.cn/2018/01/07/python的__init__/</id>
    <published>2018-01-07T14:21:20.000Z</published>
    <updated>2019-06-19T07:24:56.837Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/timgbao.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><h3 id="Python中的包"><a href="#Python中的包" class="headerlink" title="Python中的包"></a>Python中的包</h3><p>方式：<br>1.使用import 文件.模块 的方式导入包<br>2.使用from 文件夹 import 模块 的方式导入<br>理解：<br>包将有联系的模块组织在一起，放到同一个文件夹下，并且在这个文件夹下创建一个名字为<strong>init</strong>.py文件，那么这个夹就称之为 包</p><h3 id="init-py有什么用"><a href="#init-py有什么用" class="headerlink" title="init.py有什么用"></a><strong>init</strong>.py有什么用</h3><p>1.<strong>init</strong>.py 控制着包的导入<br>2.当<strong>init</strong>.py 为空时：仅仅是把这个包导入，不会导入包中的模块<br>3.可以在这个文件中编写语句，当导入时，这些语句就会被执行</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>现有如下目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Phone/</div><div class="line">    __init__.py</div><div class="line">    common_util.py</div><div class="line">    Voicedta/</div><div class="line">        __init__.py</div><div class="line">        Pots.py</div><div class="line">        Isdn.py</div><div class="line">    Fax/</div><div class="line">        __init__.py</div><div class="line">        G3.py</div><div class="line">    Mobile/</div><div class="line">        __init__.py</div><div class="line">        Analog.py</div><div class="line">        igital.py</div><div class="line">    Pager/</div><div class="line">        __init__.py</div><div class="line">        Numeric.py</div></pre></td></tr></table></figure></p><p>1.Phone 是最顶级的包，Voicedta、Fax等是子包，我们可以这样引入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import Phone.Mobile.Analog</div></pre></td></tr></table></figure><p>2.也可以使用from 文件夹 import 模块导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">from Phone import Mobile</div><div class="line">from Phone.Molile import Analog</div></pre></td></tr></table></figure><h4 id="在以上目录中会看到很多init-py文件"><a href="#在以上目录中会看到很多init-py文件" class="headerlink" title="在以上目录中会看到很多init.py文件"></a>在以上目录中会看到很多<strong>init</strong>.py文件</h4><p>理解：这些是初始化模块，from-import 语句导入子包的时候需要用到它，如果没有用到，他们可以使空文件。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/timgbao.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://www.yybblog.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Mysql为什么加索引</title>
    <link href="http://www.yybblog.cn/2018/01/03/mysql%E7%B4%A2%E5%BC%95/"/>
    <id>http://www.yybblog.cn/2018/01/03/mysql索引/</id>
    <published>2018-01-03T14:37:41.000Z</published>
    <updated>2019-06-19T07:24:56.836Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/timg222222.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><h3 id="使用索引的理由"><a href="#使用索引的理由" class="headerlink" title="使用索引的理由"></a>使用索引的理由</h3><p>1.由于mysql在默认情况下，表中的数据记录是没有顺序可言的。<br>2.数据检索过程中，符合条件的数据存储在哪里，我们是完全不知情的。<br>3.如果使用select语句进行查询，数据库会从第一条记录开始检索，即使找到第一条符合条件的数据，数据库的搜索也并不会因此而停止，毕竟符合条件的数据可能并不止一条，也就是说此时检索会把表中的数据全部检索一遍才结束，这样的检索方式也称为全表扫描。<br>4.但假设表中存在上百上千万条数据呢？这样的检索效率就十分低了。</p><h3 id="Mysql-索引诞生"><a href="#Mysql-索引诞生" class="headerlink" title="Mysql 索引诞生"></a>Mysql 索引诞生</h3><p>1.索引就如同一本书的目录一样<br>2.指明了某个关键字在正文中的出现的页码位置或章节的位置，这样只要找到对应页面就能找到要搜索的内容了。<br>3.数据库的索引也是类似书本目录一样，通过创建某个字段或者多个字段的索引，在搜索该字段时就可以根据对应的索引进行快速检索出相应内容而无需全表扫描了。</p><h3 id="对于mysql增删改查的记忆"><a href="#对于mysql增删改查的记忆" class="headerlink" title="对于mysql增删改查的记忆"></a>对于mysql增删改查的记忆</h3><p>1.记住只有，查询和删除的时候带有 from 关键字，其他都没有。</p><h3 id="mysql左连接理解"><a href="#mysql左连接理解" class="headerlink" title="mysql左连接理解"></a>mysql左连接理解</h3><p>1.左连接，就是以左边的表为准，来遍历右边的表</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/timg222222.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Mysql" scheme="http://www.yybblog.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>PHP中array_slice()的用法</title>
    <link href="http://www.yybblog.cn/2018/01/02/array_slice%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>http://www.yybblog.cn/2018/01/02/array_slice的用法/</id>
    <published>2018-01-02T13:25:19.000Z</published>
    <updated>2019-06-19T07:24:56.835Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/timgadas.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><h3 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h3><p>1.个人理解：获取一个数组中任意相邻的几个元素<br>例如1：获取$list数组前两位数组元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">$list = array(</div><div class="line">&quot;a&quot; =&gt; &quot;你&quot;,</div><div class="line">&quot;b&quot; =&gt; &quot;好&quot;,</div><div class="line">&quot;c&quot; =&gt; &quot;啊&quot;,</div><div class="line">&quot;d&quot; =&gt; &quot;我&quot;,</div><div class="line">&quot;e&quot; =&gt; &quot;是&quot;,</div><div class="line">&quot;f&quot; =&gt; &quot;小&quot;,</div><div class="line">&quot;g&quot; =&gt; &quot;明&quot;,</div><div class="line">&quot;h&quot; =&gt; &quot;山东&quot;,</div><div class="line">&quot;i&quot; =&gt; &quot;士大夫&quot;,</div><div class="line">&quot;j&quot; =&gt; &quot;阿斯蒂芬&quot;,</div><div class="line">&quot;k&quot; =&gt; &quot;士大夫山东&quot;,</div><div class="line">&quot;l&quot; =&gt; &quot;发过火&quot;,</div><div class="line">&quot;m&quot; =&gt; &quot;更好&quot;,</div><div class="line">&quot;n&quot; =&gt; &quot;大公会&quot;,</div><div class="line">&quot;o&quot; =&gt; &quot;sad&quot;,</div><div class="line">&quot;p&quot; =&gt; &quot;国家&quot;,</div><div class="line">&quot;q&quot; =&gt; &quot;任天野&quot;</div><div class="line">);</div><div class="line">$slicelist = array_slice($list,0,2);</div><div class="line">print_r($slicelist);</div></pre></td></tr></table></figure><p>打印结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Array</div><div class="line">(</div><div class="line">    [a] =&gt; 你</div><div class="line">    [b] =&gt; 好</div><div class="line">)</div></pre></td></tr></table></figure></p><p>例如2：获取$list数组第三位和第四位元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$slicelist = array_slice($list,2,2);</div><div class="line">print_r($slicelist);</div></pre></td></tr></table></figure><p>打印结果:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Array</div><div class="line">(</div><div class="line">    [c] =&gt; 啊</div><div class="line">    [d] =&gt; 我</div><div class="line">)</div></pre></td></tr></table></figure></p><p>例如3：获取$list数组第五位和第六位元素<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$slicelist = array_slice($list,4,2);</div><div class="line">print_r($slicelist);</div></pre></td></tr></table></figure></p><p>打印结果:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Array</div><div class="line">(</div><div class="line">    [e] =&gt; 是</div><div class="line">    [f] =&gt; 小</div><div class="line">)</div></pre></td></tr></table></figure></p><p>整体理解：<br>截取数组的相邻的几位元素，<br>第5位和第6位，array_slice($list,5-1,6-5+1)；<br>第10位和第12位，array_slice($list,10-1,12-10+1)；<br>第10位和第15位，array_slice($list,10-1,15-10+1)；<br>····<br>···<br>··</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/timgadas.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="GIT" scheme="http://www.yybblog.cn/tags/GIT/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://www.yybblog.cn/2017/12/29/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.yybblog.cn/2017/12/29/git常用命令/</id>
    <published>2017-12-29T14:10:14.000Z</published>
    <updated>2019-06-19T07:24:56.835Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/u=1103434515,3403775097&fm=27&gp=0.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><h3 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h3><p>1.从github/gitlab/码云克隆项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone 链接地址</div></pre></td></tr></table></figure></p><p>2.本地创建git版本库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git init</div><div class="line">#初始化本地仓库</div></pre></td></tr></table></figure></p><p>3.如何将本地代码上传到github 请看：<a href="http://www.yybblog.cn/2017/07/31/%E5%A6%82%E4%BD%95%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0GitHub/">详细步骤</a></p><p>4.提交本地代码到缓存区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add .</div><div class="line"></div><div class="line">git commit -m &quot;注释&quot;</div></pre></td></tr></table></figure></p><p>5.推动到远端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin master</div></pre></td></tr></table></figure></p><p>6.创建本地分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch 分支名称</div></pre></td></tr></table></figure></p><p>7.查看分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#本地分支</div><div class="line">git branch</div><div class="line">#远端分支</div><div class="line">git branch -r</div></pre></td></tr></table></figure></p><p>8.切换分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout 分支名字</div></pre></td></tr></table></figure></p><p>9.git版本回退<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">git reset --hard HEAD</div><div class="line"># 将当前版本重置为HEAD（通常用于清空缓存区,或merge失败回退）</div><div class="line"></div><div class="line">git reset --hard HEAD^   # 回退上一个版本</div><div class="line">git reset --hard HEAD^^  # 回退上两个版本</div><div class="line">git reset --hard HEAD~n  # 回退上n个版本</div><div class="line"></div><div class="line">git reset --hard &lt;commitid&gt;</div><div class="line"># 回退到指定版本，commitid根据log获取</div></pre></td></tr></table></figure></p><h3 id="svn-和-git-相比"><a href="#svn-和-git-相比" class="headerlink" title="svn 和 git 相比"></a>svn 和 git 相比</h3><p>个人更喜欢用github</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/u=1103434515,3403775097&amp;fm=27&amp;gp=0.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="GIT" scheme="http://www.yybblog.cn/tags/GIT/"/>
    
  </entry>
  
  <entry>
    <title>Nginx的配置</title>
    <link href="http://www.yybblog.cn/2017/11/15/ci%E6%A1%86%E6%9E%B6%E9%85%8D%E7%BD%AEnginx/"/>
    <id>http://www.yybblog.cn/2017/11/15/ci框架配置nginx/</id>
    <published>2017-11-15T07:17:01.000Z</published>
    <updated>2019-06-19T07:24:56.835Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">include enable-php.conf;</div><div class="line">location / &#123;</div><div class="line">   index  index.html index.htm index.php;                                                                                                                                                                      </div><div class="line">   rewrite ^/$ /index.php last;</div><div class="line">   rewrite ^/(?!index\.php|robots\.txt|images|js|styles)(.*)$ /index.php/$1 last;</div><div class="line"> &#125;</div></pre></td></tr></table></figure><font color="red">以上代码是重点部分</font><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>1.前段时间临近双十一在阿里云9.9买了半年服务器，想着弄个网站部署在线上。之前在nginx上部署过，不过那是别人弄的。什么事都是还要靠自己，是真理。<br>2.为此写下步骤，以便下次部署直接来找教程。<br>3.为了能让CI框架在nginx上跑起来。废了我两三天时间。不过还是配置好了。</p><h3 id="安装linux"><a href="#安装linux" class="headerlink" title="安装linux"></a>安装linux</h3><p>1.我这里用的是lnmp一键安装包 教程地址：<a href="https://lnmp.org/" target="_blank" rel="external">https://lnmp.org/</a></p><h3 id="安装好之后"><a href="#安装好之后" class="headerlink" title="安装好之后"></a>安装好之后</h3><p>1.开始部署你的web网站，如果在本地可以运行。那直接克隆到服务器上<br>2.我的线上项目地址<br><img src="http://otbcgjn6c.bkt.clouddn.com/1510737091%281%29.jpg" alt=""><br>3.当你以域名去范文访问的时候回出现以类似下错误，这是nginx禁止程序跨目录访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Warning: require(): open_basedir restriction in effect. File(/home/wwwroot/***/bootstrap/autoload.php) is not within the allowed path(s): (/home/wwwroot/***/public/:/tmp/:/proc/) in /home/wwwroot/***/public/index.php on</div></pre></td></tr></table></figure></p><p>解决办法将 /usr/local/nginx/conf/fastcgi.conf 里面的fastcgi_param PHP_ADMIN_VALUE “open_basedir=$document_root/:/tmp/:/proc/“; 在该行行前添加 # 或删除改行，需要重启nginx。 lnmp nginx reload</p><p>4.以上弄好以后，继续访问线上ip地址。可能会出现404，特别是ci框架里面的site_url()方法和redirect()方法。</p><h3 id="重点介绍"><a href="#重点介绍" class="headerlink" title="重点介绍"></a>重点介绍</h3><p>1.在server项里面：nginx引入了月一个 文件 include enable-php.conf;这个文件里面就包含了，解析php，运行php文件。我配置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">location ~ [^/]\.php(/|$)</div><div class="line">&#123;                                                                     </div><div class="line">   try_files $uri =404;</div><div class="line">   fastcgi_pass  unix:/tmp/php-cgi.sock;</div><div class="line">   fastcgi_param PATH_INFO $fastcgi_path_info;</div><div class="line">   if ($uri ~ &quot;^(.+?\.php)(/.*)$&quot;) &#123;</div><div class="line">           set $script     $1;</div><div class="line">           set $path_info  $2;</div><div class="line">       &#125;   </div><div class="line">  fastcgi_split_path_info ^(.+\.php)(.*)$;</div><div class="line">  fastcgi_index index.php;</div><div class="line">  include fastcgi.conf;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>在原来基础上加了这几段代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">fastcgi_param PATH_INFO $fastcgi_path_info;</div><div class="line">   if ($uri ~ &quot;^(.+?\.php)(/.*)$&quot;) &#123;</div><div class="line">           set $script     $1;</div><div class="line">           set $path_info  $2;</div><div class="line">       &#125;   </div><div class="line">  fastcgi_split_path_info ^(.+\.php)(.*)$;</div></pre></td></tr></table></figure></p><p>以上是enable-php.conf文件配置</p><p>3.在你的框架中可能会有redirect()方法,我的一只是404错误，原因就是这个,后来在server包含中 include enable-php.conf下行添加如下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">location / &#123;</div><div class="line">    index  index.html index.htm index.php;                                                 </div><div class="line">    rewrite ^/$ /index.php last;</div><div class="line">    rewrite ^/(?!index\.php|robots\.txt|images|js|styles)(.*)$ /index.php/$1 last;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p><p>4.在以ip地址访问成功访问到。</p><p>5.将nginx.conf代码全部贴出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line">user  www www;</div><div class="line"></div><div class="line">worker_processes auto;</div><div class="line"></div><div class="line">error_log  /home/wwwlogs/nginx_error.log  crit;</div><div class="line"></div><div class="line">pid        /usr/local/nginx/logs/nginx.pid;</div><div class="line"></div><div class="line">#Specifies the value for maximum file descriptors that can be opened by this process.</div><div class="line">worker_rlimit_nofile 51200;</div><div class="line"></div><div class="line">events</div><div class="line">    &#123;</div><div class="line">        use epoll;</div><div class="line">        worker_connections 51200;</div><div class="line">        multi_accept on;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">http</div><div class="line">    &#123;</div><div class="line">        include       mime.types;</div><div class="line">        default_type  application/octet-stream;</div><div class="line"></div><div class="line">        server_names_hash_bucket_size 128;</div><div class="line">        client_header_buffer_size 32k;</div><div class="line">        large_client_header_buffers 4 32k;</div><div class="line">        client_max_body_size 50m;</div><div class="line"></div><div class="line">        sendfile   on;</div><div class="line">        tcp_nopush on;</div><div class="line"></div><div class="line">        keepalive_timeout 60;</div><div class="line"></div><div class="line">        tcp_nodelay on;</div><div class="line"></div><div class="line">        fastcgi_connect_timeout 300;</div><div class="line">        fastcgi_send_timeout 300;</div><div class="line">        fastcgi_read_timeout 300;</div><div class="line">        fastcgi_buffer_size 64k;</div><div class="line">        fastcgi_buffers 4 64k;</div><div class="line">        fastcgi_busy_buffers_size 128k;</div><div class="line">        fastcgi_temp_file_write_size 256k;</div><div class="line"></div><div class="line">        gzip on;</div><div class="line">        gzip_min_length  1k;</div><div class="line">        gzip_buffers     4 16k;</div><div class="line">        gzip_http_version 1.1;</div><div class="line">        gzip_comp_level 2;</div><div class="line">        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;</div><div class="line">        gzip_vary on;</div><div class="line">        gzip_proxied   expired no-cache no-store private auth;</div><div class="line">        gzip_disable   &quot;MSIE [1-6]\.&quot;;</div><div class="line"></div><div class="line">        #limit_conn_zone $binary_remote_addr zone=perip:10m;</div><div class="line">        ##If enable limit_conn_zone,add &quot;limit_conn perip 10;&quot; to server section.</div><div class="line"></div><div class="line">        server_tokens off;</div><div class="line">        access_log off;</div><div class="line"></div><div class="line">server</div><div class="line">    &#123;</div><div class="line">        listen 80 default_server;</div><div class="line">        #listen [::]:80 default_server ipv6only=on;</div><div class="line">        server_name 106.14.117.93;</div><div class="line">        index index.html index.htm index.php;</div><div class="line">        root /data/www/min/www; </div><div class="line"></div><div class="line">        #error_page   404   /404.html;</div><div class="line"></div><div class="line">        # Deny access to PHP files in specific directory</div><div class="line">        #location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</div><div class="line"></div><div class="line">       include enable-php.conf;</div><div class="line">       location / &#123;</div><div class="line">          index  index.html index.htm index.php;</div><div class="line">          rewrite ^/$ /index.php last;</div><div class="line">          rewrite ^/(?!index\.php|robots\.txt|images|js|styles)(.*)$ /index.php/$1 last;</div><div class="line">        &#125;</div><div class="line">        location /nginx_status</div><div class="line">        &#123;</div><div class="line">            stub_status on;</div><div class="line">            access_log   off;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</div><div class="line">        &#123;</div><div class="line">            expires      30d;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~ .*\.(js|css)?$</div><div class="line">        &#123;</div><div class="line">            expires      12h;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~ /.well-known &#123;</div><div class="line">            allow all;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location ~ /\.</div><div class="line">        &#123;</div><div class="line">            deny all;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        access_log  /home/wwwlogs/access.log;</div><div class="line">    &#125;</div><div class="line">include vhost/*.conf;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;include enable-php.conf;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;location / &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   index  index.html index.htm index.php;                                                                                                                                                                      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   rewrite ^/$ /index.php last;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   rewrite ^/(?!index\.php|robots\.txt|images|js|styles)(.*)$ /index.php/$1 last;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://www.yybblog.cn/tags/PHP/"/>
    
      <category term="Nginx" scheme="http://www.yybblog.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>鼠标滑过，动态数据表格如何变色</title>
    <link href="http://www.yybblog.cn/2017/11/12/%E9%BC%A0%E6%A0%87%E6%BB%91%E8%BF%87%E5%8F%98%E8%89%B2/"/>
    <id>http://www.yybblog.cn/2017/11/12/鼠标滑过变色/</id>
    <published>2017-11-12T03:51:15.000Z</published>
    <updated>2019-06-19T07:24:56.840Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/timg%20%281%29.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><font color="red">此功能是很简单的，写这个目的是以后遇到了，我可以直接拿来用。</font><p>1.一般固定行数的表格变色是容易的，只需在每个tr标签上写上相应的class就可以。<br><br>2.如果是不固定行数，动态数据的时候，想实现每行表格变色。那就需要每个数据的id来实现。</p><h3 id="现有如下表格-底部都是浅蓝色，并且是动态数据"><a href="#现有如下表格-底部都是浅蓝色，并且是动态数据" class="headerlink" title="现有如下表格(底部都是浅蓝色，并且是动态数据):"></a>现有如下表格(底部都是浅蓝色，并且是动态数据):</h3><p><img src="http://otbcgjn6c.bkt.clouddn.com/1510459161%281%29.png" alt=""></p><h3 id="如何实现鼠标滑过变色很简单"><a href="#如何实现鼠标滑过变色很简单" class="headerlink" title="如何实现鼠标滑过变色很简单"></a>如何实现鼠标滑过变色很简单</h3><p>1.首选引入JQ框架<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=&quot;../select/jquery.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p><p>2.写样式，需要将鼠标滑过后底部边的颜色写好，一般是白色背景。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.divOver&#123;</div><div class="line"> background:#fff;</div><div class="line"> border:solid 1px #d2dce3;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>3.然后在开始在tr标签开始写相应的属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;foreach from=$customer_service item=customer&#125;</div><div class="line">  &lt;tr data-mou=&quot;&#123;$customer.id&#125;&quot; id=&quot;mous_&#123;$customer.id&#125;&quot; name = &quot;mous&quot; class=&apos;trcolor1&apos; &gt; </div><div class="line">    &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;</div><div class="line">    &lt;td align=&quot;center&quot;&gt;&lt;/td&gt;</div><div class="line">  &lt;/tr&gt;</div><div class="line">&#123;/foreach&#125;</div></pre></td></tr></table></figure></p><p>4.重点来了写JQ</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//修改鼠标滑过时变色</div><div class="line">$(document).ready(function()&#123;</div><div class="line">  $(&quot;tr[name=mous&quot;).mouseover(function()&#123;</div><div class="line">    var ids = $(this).attr(&quot;data-mou&quot;);</div><div class="line">    $(&quot;#mous_&quot;+ids).addClass(&apos;divOver&apos;);</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">  $(&quot;tr[name=mous&quot;).mouseout(function()&#123;</div><div class="line">    var ids = $(this).attr(&quot;data-mou&quot;);</div><div class="line">     //鼠标离开时移除divOver样式</div><div class="line">    $(&quot;#mous_&quot;+ids).removeClass(&apos;divOver&apos;); </div><div class="line">  &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>5.最后效果图：</p><p><img src="http://otbcgjn6c.bkt.clouddn.com/%25VVA47T%28_ZH3FGU%5DU6I1SDA.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/timg%20%281%29.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="jQery" scheme="http://www.yybblog.cn/tags/jQery/"/>
    
      <category term="CSS" scheme="http://www.yybblog.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>PHP简单爬虫抓取新闻</title>
    <link href="http://www.yybblog.cn/2017/11/09/PHP%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB/"/>
    <id>http://www.yybblog.cn/2017/11/09/PHP简单爬虫/</id>
    <published>2017-11-09T08:59:27.000Z</published>
    <updated>2019-06-19T07:24:56.835Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/timg.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><p>前段时间有写过简单Python爬虫（文章有代码）</p><h3 id="PHP爬虫基于QuerList"><a href="#PHP爬虫基于QuerList" class="headerlink" title="PHP爬虫基于QuerList"></a>PHP爬虫基于QuerList</h3><p> 1.我这里用的是QueryList3.0版本都是手动下载，官网是通过composer方法安装的，具体步骤不是很了解，感觉挺麻烦。<br> 2.QueryListV3.2.1版本下载地址:<a href="https://github.com/jae-jae/QueryList/tree/V3.2.1" target="_blank" rel="external">https://github.com/jae-jae/QueryList/tree/V3.2.1</a> 这里有个坑如果你通过github克隆到本地不会是v3.2.1 而是4.0版本；需要打包下载 如下图：<br> <img src="http://otbcgjn6c.bkt.clouddn.com/1510219317%281%29.png" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"><br> 3.下载完QueryListV3.2.1 还要下载PHPQuery，QueryList是基于PHPQuery。下载地址：<a href="https://github.com/jae-jae/phpQuery-single" target="_blank" rel="external">https://github.com/jae-jae/phpQuery-single</a><br> 4.手动下载完成后可引入到项目中。</p><h3 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">require &apos;phpQuery.php&apos;;</div><div class="line">require &apos;QueryList.php&apos;;</div><div class="line">use QL\QueryList;</div></pre></td></tr></table></figure><p>这里使用了命名空间，这里我们已经引入了QueryList.php，QueryList.php使用了命名空间 namespace QL;如果要实例化QueryList，就要使用use QL\QueryList;<br>1.抓取腾讯新闻新闻标题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//获取标题</div><div class="line">$rules = array(</div><div class="line">    //采集id为one这个元素里面的纯文本内容</div><div class="line">    &apos;text&apos; =&gt; array(&apos;.linkto&apos;,&apos;text&apos;),</div><div class="line">);</div><div class="line"></div><div class="line">$url = &apos;http://news.qq.com/&apos;;</div><div class="line">$data = QueryList::Query($url,$rules,&apos;&apos;,&apos;UTF-8&apos;,&apos;GB2312&apos;,true)-&gt;getData(function($item) use($url)&#123;</div><div class="line">        return $item;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">print_r($data);</div></pre></td></tr></table></figure></p><p>2.打印结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">array</div><div class="line">(</div><div class="line">    [0] =&gt; Array</div><div class="line">        (</div><div class="line">            [text] =&gt; 138万人通过国考审核创7年之最 119个职位无人报</div><div class="line">        )</div><div class="line"></div><div class="line">    [1] =&gt; Array</div><div class="line">        (</div><div class="line">            [text] =&gt; 俄媒：中国第3艘航母最终轮廓确定 或用电磁弹射</div><div class="line">        )</div><div class="line"></div><div class="line">    [2] =&gt; Array</div><div class="line">        (</div><div class="line">            [text] =&gt; 巴西众院弹劾总统案获通过 罗塞夫政党承认落败</div><div class="line">        )</div><div class="line"></div><div class="line">    [3] =&gt; Array</div><div class="line">        (</div><div class="line">            [text] =&gt; 10月CPI同比增长1.9% 涨幅连续9个月低于2%</div><div class="line">        )</div><div class="line">    ....</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/timg.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://www.yybblog.cn/tags/PHP/"/>
    
      <category term="QueryList" scheme="http://www.yybblog.cn/tags/QueryList/"/>
    
  </entry>
  
  <entry>
    <title>多PC更新博客</title>
    <link href="http://www.yybblog.cn/2017/10/23/%E5%A4%9Apc%E8%B7%9F%E6%96%B0%E5%8D%9A%E5%AE%A2/"/>
    <id>http://www.yybblog.cn/2017/10/23/多pc跟新博客/</id>
    <published>2017-10-23T15:00:37.000Z</published>
    <updated>2019-06-19T07:24:56.838Z</updated>
    
    <content type="html"><![CDATA[<p>测试多个pc同时发布文章</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;测试多个pc同时发布文章&lt;/p&gt;
    
    </summary>
    
    
      <category term="GIthub" scheme="http://www.yybblog.cn/tags/GIthub/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫爬取校花网图片</title>
    <link href="http://www.yybblog.cn/2017/09/13/python%E5%B0%8F%E8%8A%B1%E7%BD%91%E7%88%AC%E8%99%AB/"/>
    <id>http://www.yybblog.cn/2017/09/13/python小花网爬虫/</id>
    <published>2017-09-13T09:20:43.000Z</published>
    <updated>2019-06-19T07:24:56.837Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/timg.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><p>基于Python3.5爬虫</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">import re</div><div class="line">from bs4 import BeautifulSoup</div></pre></td></tr></table></figure><p>1.首先要引入包<br>2.如有缺包请 pip install requests 等</p><h3 id="直接上爬虫代码"><a href="#直接上爬虫代码" class="headerlink" title="直接上爬虫代码"></a>直接上爬虫代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">import re</div><div class="line">from bs4 import BeautifulSoup</div><div class="line"></div><div class="line">def gethtml(num):</div><div class="line">    header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36&apos;&#125;</div><div class="line">    try:</div><div class="line">        if num == 1:</div><div class="line">            url = &apos;http://www.xiaohuar.com/hua/&apos;</div><div class="line">        else:</div><div class="line">            url = &apos;http://www.xiaohuar.com/list-1-&apos;+str(num)+&apos;.html&apos;</div><div class="line">        res = requests.get(url,headers = header,timeout=10)</div><div class="line">        res.raise_for_status()</div><div class="line">        res.encoding = res.apparent_encoding#转码</div><div class="line">        print(&apos;爬取第&#123;&#125;页:&apos;.format(num))</div><div class="line">        return res.text</div><div class="line">    except:</div><div class="line">        print(&quot;链接异常！！！&quot;)</div><div class="line">        return &apos;&apos;</div><div class="line"></div><div class="line">def findhtml(text,ulist):</div><div class="line">    soup = BeautifulSoup(text,&apos;lxml&apos;)</div><div class="line">    links = soup.find_all(&apos;div&apos;,class_=&apos;item&apos;)</div><div class="line">    mainurl = &apos;http://www.xiaohuar.com&apos;</div><div class="line">    for link in links:</div><div class="line">        #获取标题</div><div class="line">        title = link.find(&apos;img&apos;)[&apos;alt&apos;]</div><div class="line">        #获取图片链接</div><div class="line">        imgurl = link.find(&apos;img&apos;)[&apos;src&apos;]</div><div class="line">        #获取后缀</div><div class="line">        zhui = imgurl[-4:]</div><div class="line">        #拼接图片名称</div><div class="line">        imgname = title + zhui</div><div class="line">        print(imgname)</div><div class="line">        #图片下载地址</div><div class="line">        imgurlinfo = mainurl + imgurl</div><div class="line">        img = requests.get(imgurlinfo)</div><div class="line">        with open(&apos;./xiaohua/&apos;+imgname,&quot;wb&quot;) as code:</div><div class="line">            code.write(img.content)</div><div class="line">    </div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line">    ulist = []</div><div class="line">    for i in range(1,5):</div><div class="line">        text = gethtml(i)</div><div class="line">        findhtml(text,ulist)</div></pre></td></tr></table></figure><p>### </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/timg.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://www.yybblog.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫爬取校花网图片</title>
    <link href="http://www.yybblog.cn/2017/09/13/python%E7%88%AC%E8%99%AB/"/>
    <id>http://www.yybblog.cn/2017/09/13/python爬虫/</id>
    <published>2017-09-13T09:20:43.000Z</published>
    <updated>2019-06-19T07:24:56.837Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/timg.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><p>基于Python3.5爬虫</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">import re</div><div class="line">from bs4 import BeautifulSoup</div></pre></td></tr></table></figure><p>1.首先要引入包<br>2.如有缺包请 pip install requests 等</p><h3 id="直接上爬虫代码"><a href="#直接上爬虫代码" class="headerlink" title="直接上爬虫代码"></a>直接上爬虫代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">import re</div><div class="line">from bs4 import BeautifulSoup</div><div class="line"></div><div class="line">def gethtml(num):</div><div class="line">    header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36&apos;&#125;</div><div class="line">    try:</div><div class="line">        if num == 1:</div><div class="line">            url = &apos;http://www.xiaohuar.com/hua/&apos;</div><div class="line">        else:</div><div class="line">            url = &apos;http://www.xiaohuar.com/list-1-&apos;+str(num)+&apos;.html&apos;</div><div class="line">        res = requests.get(url,headers = header,timeout=10)</div><div class="line">        res.raise_for_status()</div><div class="line">        res.encoding = res.apparent_encoding#转码</div><div class="line">        print(&apos;爬取第&#123;&#125;页:&apos;.format(num))</div><div class="line">        return res.text</div><div class="line">    except:</div><div class="line">        print(&quot;链接异常！！！&quot;)</div><div class="line">        return &apos;&apos;</div><div class="line"></div><div class="line">def findhtml(text,ulist):</div><div class="line">    soup = BeautifulSoup(text,&apos;lxml&apos;)</div><div class="line">    links = soup.find_all(&apos;div&apos;,class_=&apos;item&apos;)</div><div class="line">    mainurl = &apos;http://www.xiaohuar.com&apos;</div><div class="line">    for link in links:</div><div class="line">        #获取标题</div><div class="line">        title = link.find(&apos;img&apos;)[&apos;alt&apos;]</div><div class="line">        #获取图片链接</div><div class="line">        imgurl = link.find(&apos;img&apos;)[&apos;src&apos;]</div><div class="line">        #获取后缀</div><div class="line">        zhui = imgurl[-4:]</div><div class="line">        #拼接图片名称</div><div class="line">        imgname = title + zhui</div><div class="line">        print(imgname)</div><div class="line">        #图片下载地址</div><div class="line">        imgurlinfo = mainurl + imgurl</div><div class="line">        img = requests.get(imgurlinfo)</div><div class="line">        with open(&apos;./xiaohua/&apos;+imgname,&quot;wb&quot;) as code:</div><div class="line">            code.write(img.content)</div><div class="line">    </div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line">    ulist = []</div><div class="line">    for i in range(1,5):</div><div class="line">        text = gethtml(i)</div><div class="line">        findhtml(text,ulist)</div></pre></td></tr></table></figure><p>### </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/timg.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://www.yybblog.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式基础用法</title>
    <link href="http://www.yybblog.cn/2017/09/11/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://www.yybblog.cn/2017/09/11/正则表达式/</id>
    <published>2017-09-11T03:03:27.000Z</published>
    <updated>2019-06-19T07:24:56.839Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/7aa3599084d36ce8f6d8abcc660e47427dfd8757101ee-2cKa73_fw658.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><p>NO.1 正则表达式：扛把子技术，总得会最基础的：</p><h3 id="一些基础用法"><a href="#一些基础用法" class="headerlink" title="一些基础用法"></a>一些基础用法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">he+llo ：+ 号代表前面的字符必须至少出现一次（1次或多次）</div><div class="line">例：可匹配 hello ，heello，heee...llo</div><div class="line">he\*llo : \* 号代表前面的字符可以不除出现，可出现一次或者多次既（0次，1次，多次）</div><div class="line">例： 可匹配 hllo，hello，heee..llo    </div><div class="line">he?llo : ? 号代表前面的字符最多只能出现一次（0次，或者一次）</div><div class="line">例: 可匹配 hllo，hello</div></pre></td></tr></table></figure><h3 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">\s 匹配任何 空白字符 包括空格，制表符，换页符</div><div class="line">\S 匹配任何非空白字符</div><div class="line">\n 匹配换行符</div></pre></td></tr></table></figure><h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ 以某个字符串结尾</div><div class="line">() 标记一个表达式的开始和结束位置</div><div class="line">.  匹配除换行符 \n 之外的任何单字符</div><div class="line">[ 标记一个中括号表达式的开始</div><div class="line">^ 以某个字符串开始</div><div class="line">&#123; 限定表达式的开始</div></pre></td></tr></table></figure><h3 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;n&#125; 非负整数匹配确定的n次。匹配某个字符出现的次数</div><div class="line">例：&apos;o&#123;2&#125;&apos; 则能匹配 Look，不能匹配 inof，但能匹配inoof</div><div class="line">&#123;n,&#125; &apos;o&#123;1,&#125;&apos; 等价于 &apos;o+&apos;既一次或多次</div><div class="line">&#123;n,m&#125; m和n均为非负数其中 n &lt;= m。最少匹配n次最多匹配m次</div><div class="line">例：&apos;o&#123;1,3&#125;&apos; 匹配 loooook 中的钱三个o</div></pre></td></tr></table></figure><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[a-z] 匹配指定范围内的任意字符 例如&apos;[a-z]&apos;可以匹配从a到z内任意小写字符</div><div class="line">[^a-z] 负值字符范围，匹配任何不在指定范围内的任意字符，例如[^a-z]可以匹配不在a到z之内的字符</div><div class="line">\d  匹配一个数字字符</div><div class="line">\D  匹配一个非数字字符</div><div class="line">\s  匹配任何空白字符（包括空格、制表符）</div><div class="line">\S  匹配任何非空白字符</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/7aa3599084d36ce8f6d8abcc660e47427dfd8757101ee-2cKa73_fw658.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="正则" scheme="http://www.yybblog.cn/tags/%E6%AD%A3%E5%88%99/"/>
    
      <category term="re" scheme="http://www.yybblog.cn/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>各种轮播图插件</title>
    <link href="http://www.yybblog.cn/2017/08/25/%E5%90%84%E7%A7%8D%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
    <id>http://www.yybblog.cn/2017/08/25/各种轮播图/</id>
    <published>2017-08-25T09:18:48.000Z</published>
    <updated>2019-06-19T07:24:56.838Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/diary-22.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><h3 id="查看网址"><a href="#查看网址" class="headerlink" title="查看网址"></a>查看网址</h3><p><a href="http://www.swiper.com.cn/demo/index.html" target="_blank" rel="external">http://www.swiper.com.cn/demo/index.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/diary-22.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Swiper" scheme="http://www.yybblog.cn/tags/Swiper/"/>
    
  </entry>
  
  <entry>
    <title>window下wamp开发环境如何安装redis</title>
    <link href="http://www.yybblog.cn/2017/08/21/wamp%E4%B8%8B%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85redis/"/>
    <id>http://www.yybblog.cn/2017/08/21/wamp下如何安装redis/</id>
    <published>2017-08-21T08:06:38.000Z</published>
    <updated>2019-06-19T07:24:56.838Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/diary-13.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><h3 id="php安装redis扩展"><a href="#php安装redis扩展" class="headerlink" title="php安装redis扩展"></a>php安装redis扩展</h3><p>1.PHP必须要安装redis扩展</p><p>2.在安装之前一定要看PHP版本信息（ps：由于我没有看，导致一直安装不成功）。查看方法在wamp/www下新建info.php文件内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">phpinfo();</div></pre></td></tr></table></figure><p>3.查看版本信息:<br><img src="http://otbcgjn6c.bkt.clouddn.com/2017-08-21_161536.jpg" alt=""></p><p>4.下载redis扩展php_redis.dll和php_igbinary.dll:</p><p><a href="http://pecl.php.net/package/redis/2.2.7/windows" target="_blank" rel="external">http://pecl.php.net/package/redis/2.2.7/windows</a></p><p><img src="http://otbcgjn6c.bkt.clouddn.com/2017-08-21_161921.jpg" alt=""></p><p><a href="http://windows.php.net/downloads/pecl/releases/igbinary/1.2.1/" target="_blank" rel="external">http://windows.php.net/downloads/pecl/releases/igbinary/1.2.1/</a><br><img src="http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162003.jpg" alt=""></p><p>5.下载完解压缩后，将php_redis.dll和php_igbinary.dll拷贝至php的ext目录下:<br><img src="http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162552.jpg" alt=""></p><p>6.然后修改wamp/bin/apache/apache2.4.9/bin/php.ini，在该文件中加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">; php_redis</div><div class="line">extension=php_igbinary.dll</div><div class="line">extension=php_redis.dll</div></pre></td></tr></table></figure><p><img src="http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162910.jpg" alt=""></p><p>7.重启Apache后，使用phpinfo查看扩展是否成功安装<br><img src="http://otbcgjn6c.bkt.clouddn.com/2017-08-21_162020.jpg" alt=""></p><p>8.开启redis服务。进入redis的目录我的是在（d:/redis）开启服务<br><img src="http://otbcgjn6c.bkt.clouddn.com/2017-08-21_165739.jpg" alt=""></p><p>9.开启成功会显示：<br><img src="http://otbcgjn6c.bkt.clouddn.com/2017-08-21_165912.jpg" alt=""></p><p>10.新建一个redistest.php测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    $redis = new Redis();</div><div class="line">    $redis-&gt;connect(&apos;127.0.0.1&apos;,6379);</div><div class="line">    $redis-&gt;auth(&apos;123456&apos;);</div><div class="line">    $redis-&gt;set(&apos;test&apos;,&apos;hello redis&apos;);</div><div class="line">    echo $redis-&gt;get(&apos;test&apos;);</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p>11.最后得到结果<br><img src="http://otbcgjn6c.bkt.clouddn.com/2017-08-21_170114.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/diary-13.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="redis" scheme="http://www.yybblog.cn/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>手游H5页面</title>
    <link href="http://www.yybblog.cn/2017/08/10/%E6%89%8B%E6%B8%B8H5%E9%A1%B5%E9%9D%A2/"/>
    <id>http://www.yybblog.cn/2017/08/10/手游H5页面/</id>
    <published>2017-08-10T09:26:37.000Z</published>
    <updated>2019-06-19T07:24:56.839Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/diary-20.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><h3 id="手机演示地址"><a href="#手机演示地址" class="headerlink" title="手机演示地址"></a>手机演示地址</h3><p><a href="https://github.com/yyb568/webgm" target="_blank" rel="external">https://github.com/yyb568/webgm</a></p><blockquote><p>前几天写了两张H5页面，自我感觉还不错，就趁着有时间又写了一张。</p></blockquote><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p>图一：</p><div align="center"><br><img src="http://otbcgjn6c.bkt.clouddn.com/20170810173947.png" height="650" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"><br></div><p>图二：</p><p><div align="center"><br><img src="http://otbcgjn6c.bkt.clouddn.com/20170810174010.png" height="650" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"><br></div><br><br></p><blockquote><p>以后会运用到实际工作中去。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/diary-20.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="HTML" scheme="http://www.yybblog.cn/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>我的手机端H5页面</title>
    <link href="http://www.yybblog.cn/2017/08/06/%E6%88%91%E7%9A%84H5%E9%A1%B5%E9%9D%A2/"/>
    <id>http://www.yybblog.cn/2017/08/06/我的H5页面/</id>
    <published>2017-08-06T01:27:31.000Z</published>
    <updated>2019-06-19T07:24:56.839Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/2017-07-31_131016.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><h3 id="手机演示地址"><a href="#手机演示地址" class="headerlink" title="手机演示地址"></a>手机演示地址</h3><p><a href="https://github.com/yyb568/webapp.git" target="_blank" rel="external">https://github.com/yyb568/webapp.git</a></p><blockquote><p>由于在工作中一直做后台和服务端,前端页面也有专门的人员来写,以至于前端代码忘得的快差不多了,就突然想起来写个页面看看效果咋样</p></blockquote><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p>1.图一:</p><div align="center"><br><img src="http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094909.png" height="650" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"><br></div><br>2.图二:<br><div align="center"><br><img src="http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094914.png" height="600" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"><br></div><p>3.图三</p><div align="center"><br><img src="http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094917.png" height="600" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"><br></div><p>4.图四</p><div align="center"><br><img src="http://otbcgjn6c.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20170806094920.png" height="600" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/2017-07-31_131016.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="HTML" scheme="http://www.yybblog.cn/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>MySQL优化之三范式</title>
    <link href="http://www.yybblog.cn/2017/08/01/mysql%E4%BC%98%E5%8C%96%E4%B8%89%E8%8C%83%E5%BC%8F/"/>
    <id>http://www.yybblog.cn/2017/08/01/mysql优化三范式/</id>
    <published>2017-08-01T01:28:36.000Z</published>
    <updated>2019-06-19T07:24:56.836Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/diary-29.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><h3 id="常见的数据库优化的几种方法"><a href="#常见的数据库优化的几种方法" class="headerlink" title="常见的数据库优化的几种方法:"></a>常见的数据库优化的几种方法:</h3><p>1.数据表要设计合理，满足三范式（3NF）；<br>2.创建适当索引；<br>3.对sql语句进行优化，定位慢查询（explain）；<br>4.使用分表、分区技术；<br>5.读写分离；<br>6.创建适当的存储过程、函数、触发器；<br>7.对my.ini进行优化配置；<br>8.软硬件的升级。</p><h3 id="三范式的方法"><a href="#三范式的方法" class="headerlink" title="三范式的方法"></a>三范式的方法</h3><h4 id="一范式（1NF）。"><a href="#一范式（1NF）。" class="headerlink" title="一范式（1NF）。"></a>一范式（1NF）。</h4><p>1.表的属性（列），不能再分。比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Id     name            sex        num           grade</div><div class="line">1      王某某          男        123456       80、90,75</div></pre></td></tr></table></figure></p><p>上面的例子中grade（成绩）字段下面有三个分数，分别是语文、数学、英语，那他就应该单独建立一张grade表，如果grade字段只有一个值，比如总分，那它就是不可再分的。</p><p>2.不能有重复的列。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Id    name           sex        num    num</div></pre></td></tr></table></figure><p>重复的列无法添加数据。</p><h4 id="二范式（2NF）。"><a href="#二范式（2NF）。" class="headerlink" title="二范式（2NF）。"></a>二范式（2NF）。</h4><p> 1.2NF就是指不能有完全相同的一条记录，可以通过设置主键解决，而且该主键为自增值。</p><h4 id="三范式（3NF）。"><a href="#三范式（3NF）。" class="headerlink" title="三范式（3NF）。"></a>三范式（3NF）。</h4><p>1.如果列的值可以通过另建一张表关联起来，即同一个字段不能有过多重复的记录。比如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Id      name          sex         num           class       academy</div><div class="line">1       王            男          123           A班         信息学院</div><div class="line">2       李            女          234           A班         信息学院</div><div class="line">3       罗            男          456           A班         信息学院</div><div class="line">4       张            男          879           A班         信息学院</div></pre></td></tr></table></figure><p>改为：<br>Student表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Id     name           sex         num           classid</div><div class="line">1       王            男          123             1</div></pre></td></tr></table></figure></p><p>student表的班级信息可以通过外键从班级表中查询，减少了数据冗余和更新异常。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/diary-29.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://www.yybblog.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>如何将本地代码上传到GitHub</title>
    <link href="http://www.yybblog.cn/2017/07/31/%E5%A6%82%E4%BD%95%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0GitHub/"/>
    <id>http://www.yybblog.cn/2017/07/31/如何将本地代码上传到GitHub/</id>
    <published>2017-07-31T07:35:46.000Z</published>
    <updated>2019-06-19T07:24:56.839Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otbcgjn6c.bkt.clouddn.com/diary-14.jpg" width="400" alt="图片名称" align="center" style="border:1px solid  #F6F6F6"></p><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>安装Git Bash版本控制器: <a href="https://git-for-windows.github.io/" target="_blank" rel="external">https://git-for-windows.github.io/</a></p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>安装好之后进入到你的本地项目根目录,右击鼠标点击 Git Bash Here</p><p><img src="http://otbcgjn6c.bkt.clouddn.com/2017-07-31_154306.jpg" alt=""></p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>执行git命令</p><blockquote><p>git init</p></blockquote><h3 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h3><p>将项目的所有文件添加到仓库中<br>如果想添加某个特定的文件，只需把.换成特定的文件名即可</p><blockquote><p>git add .</p></blockquote><h3 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h3><p>将add的文件commit到仓库</p><blockquote><p>git commit -m “注释语句”</p></blockquote><h3 id="第六步"><a href="#第六步" class="headerlink" title="第六步"></a>第六步</h3><p>去github上创建自己的仓库地址,如下图所示：</p><h5 id="1-点击New-repository"><a href="#1-点击New-repository" class="headerlink" title="1.点击New repository"></a>1.点击New repository</h5><p><img src="http://otbcgjn6c.bkt.clouddn.com/2017-07-31_154916.jpg" alt=""></p><h5 id="2-填写好仓库信息后点击Create-repository创建"><a href="#2-填写好仓库信息后点击Create-repository创建" class="headerlink" title="2.填写好仓库信息后点击Create repository创建"></a>2.填写好仓库信息后点击Create repository创建</h5><p><img src="http://otbcgjn6c.bkt.clouddn.com/2017-07-31_155434.jpg" alt=""></p><h5 id="3-如下就是所创建的仓库-红圈是克隆下载地址暂时先不用"><a href="#3-如下就是所创建的仓库-红圈是克隆下载地址暂时先不用" class="headerlink" title="3.如下就是所创建的仓库,红圈是克隆下载地址暂时先不用"></a>3.如下就是所创建的仓库,红圈是克隆下载地址暂时先不用</h5><p><img src="http://otbcgjn6c.bkt.clouddn.com/2017-07-31_155806.jpg" alt=""></p><h5 id="4-拿到创建的仓库的https地址-也就是url地址"><a href="#4-拿到创建的仓库的https地址-也就是url地址" class="headerlink" title="4.拿到创建的仓库的https地址,也就是url地址"></a>4.拿到创建的仓库的https地址,也就是url地址</h5><p><img src="http://otbcgjn6c.bkt.clouddn.com/2017-07-31_160114.jpg" alt=""></p><h3 id="第七步：重点来了，将本地的仓库关联到github上"><a href="#第七步：重点来了，将本地的仓库关联到github上" class="headerlink" title="第七步：重点来了，将本地的仓库关联到github上"></a>第七步：重点来了，将本地的仓库关联到github上</h3><blockquote><p>git remote add origin <a href="https://github.com/yyb568/WeatherDemo" target="_blank" rel="external">https://github.com/yyb568/WeatherDemo</a></p></blockquote><h3 id="第八步：上传github之前，要先pull一下，执行如下命令："><a href="#第八步：上传github之前，要先pull一下，执行如下命令：" class="headerlink" title="第八步：上传github之前，要先pull一下，执行如下命令："></a>第八步：上传github之前，要先pull一下，执行如下命令：</h3><blockquote><p>git pull origin master</p></blockquote><p><img src="http://otbcgjn6c.bkt.clouddn.com/2017-07-31_160818.jpg" alt=""></p><h3 id="第九步，也就是最后一步，上传代码到github远程仓库"><a href="#第九步，也就是最后一步，上传代码到github远程仓库" class="headerlink" title="第九步，也就是最后一步，上传代码到github远程仓库"></a>第九步，也就是最后一步，上传代码到github远程仓库</h3><blockquote><p>git push -u origin master<br>执行完后，如果没有异常，等待执行完就上传成功了，中间可能会让你输入Username和Password，你只要输入github的账号和密码就行了</p></blockquote><h3 id="最后GitHub成功后截图"><a href="#最后GitHub成功后截图" class="headerlink" title="最后GitHub成功后截图"></a>最后GitHub成功后截图</h3><p><img src="http://otbcgjn6c.bkt.clouddn.com/2017-07-31_161307.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otbcgjn6c.bkt.clouddn.com/diary-14.jpg&quot; width=&quot;400&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; style=&quot;border:1px solid  #F6F6F6&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="GitHub" scheme="http://www.yybblog.cn/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>setTimeout()的使用方法</title>
    <link href="http://www.yybblog.cn/2017/07/27/setTimeout()/"/>
    <id>http://www.yybblog.cn/2017/07/27/setTimeout()/</id>
    <published>2017-07-27T13:26:27.000Z</published>
    <updated>2019-06-19T07:24:56.837Z</updated>
    
    <content type="html"><![CDATA[<h3 id="定义"><a href="#定义" class="headerlink" title="定义:"></a>定义:</h3><font color="#FF4081">setTimeout()方法在很多文档中是说 “用于在指定的毫秒数后调用函数或计算表达式”,比较含糊;其实就是规定在一段时间内,调用一个函数进行延时操作;比如从一个页面2秒后跳转到另一个页面;</font><h3 id="用法"><a href="#用法" class="headerlink" title="用法:"></a>用法:</h3><font color="#FF4081">我这有个ajax方法:</font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">//要跳转的页面地址</div><div class="line">var url = &quot;&lt;?=site_url(&quot;smallshop/shopcart/dosave?key=&#123;$key&#125;&amp;cmid=&#123;$cmid&#125;&quot;)?&gt;&quot;;</div><div class="line">  $.post(url,dt,function(data)&#123;</div><div class="line">  if (data.status == 0)&#123;//表示请求成功,返回成功状态</div><div class="line">      //成功后利用layer弹窗插件进行提示说明</div><div class="line">  layer.open(&#123;content: data.info,skin: &apos;msg&apos;,time: 2 &#125;);</div><div class="line">  //根据倒计时函数在两秒后跳转到指定的页面</div><div class="line">  setTimeout(function () &#123;</div><div class="line">  window.location.href = &apos;&lt;?=site_url(&quot;smallshop/channel/index?key=&#123;$key&#125;&amp;cmid=&#123;$cmid&#125;&quot;)?&gt;&apos;;</div><div class="line">  &#125;,2000);</div><div class="line">  &#125;else&#123;//表示请求失败,并提示失败信息</div><div class="line">  layer.open(&#123;content: data.info,skin: &apos;msg&apos;,time: 2 &#125;);</div><div class="line">  &#125;</div><div class="line">  &#125;,&apos;json&apos;);</div></pre></td></tr></table></figure><br><br>### 总结:<br><br><font color="#FF4081"> setTimeout() 通常是与 function 一起使用</font>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义:&quot;&gt;&lt;/a&gt;定义:&lt;/h3&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://www.yybblog.cn/tags/PHP/"/>
    
      <category term="jQery" scheme="http://www.yybblog.cn/tags/jQery/"/>
    
  </entry>
  
  <entry>
    <title>stripos()的用法</title>
    <link href="http://www.yybblog.cn/2017/07/20/stripos%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>http://www.yybblog.cn/2017/07/20/stripos的用法/</id>
    <published>2017-07-20T07:17:01.000Z</published>
    <updated>2019-06-19T07:24:56.838Z</updated>
    
    <content type="html"><![CDATA[<p>这个函数经常用到,并且能快速判断,某字符串是否在另一字符串中出现,常用在条件判断中;</p><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h3><p>stripos(string,find)<br>参一:另一串字符<br>参二:要查找的字符</p><p>例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$content = &apos;Hello World MyBlog&apos;;</div><div class="line">$appear = stripos($content,&apos;my&apos;);</div><div class="line">print_r($appear);</div></pre></td></tr></table></figure></p><p>结果:<br><code>12</code></p><p>说明: 返回字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$content = &apos;Hello World MyBlog&apos;;</div><div class="line">$appear = stripos($content,&apos;kk&apos;);</div><div class="line">if (stripos($content,&apos;kk&apos;))&#123;</div><div class="line">echo &apos;存在&apos;;</div><div class="line">&#125;else&#123;</div><div class="line">echo &apos;不存在&apos;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">if (stripos($content,&apos;lo&apos;))&#123;</div><div class="line">echo &apos;存在&apos;;</div><div class="line">&#125;else&#123;</div><div class="line">echo &apos;不存在&apos;;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>结果分别是:<br><code>不存在</code><br><code>存在</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个函数经常用到,并且能快速判断,某字符串是否在另一字符串中出现,常用在条件判断中;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://www.yybblog.cn/tags/PHP/"/>
    
  </entry>
  
</feed>
