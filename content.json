[{"title":"Html+PHP实现简单计算器","date":"2018-01-09T07:48:03.000Z","path":"2018/01/09/php简单计算器/","text":"123$one = $_POST[&apos;one&apos;];$two = $_POST[&apos;two&apos;];$type = $_POST[&apos;type&apos;]; 面试经1.如果让你写一个简单计算器 上html代码1.index.html123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&lt;html&gt; &lt;meta http-equiv=&quot;content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt; &lt;title&gt;计算器&lt;/title&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt; &lt;form&gt; 数字1：&lt;input type=&quot;text&quot; id =&quot;one&quot; name=&quot;one&quot;&gt;&lt;br&gt; 数字2：&lt;input type=&quot;text&quot; id =&quot;two&quot; name=&quot;two&quot;&gt;&lt;br&gt;&lt;br&gt; &lt;button type=&quot;button&quot; id=&quot;jias&quot; onClick=&quot;jia()&quot; data-type=&quot;1&quot;&gt;加&lt;/button&gt; &lt;button type=&quot;button&quot; id=&quot;jians&quot; onClick=&quot;jian()&quot; data-type=&quot;2&quot;&gt;减&lt;/button&gt; &lt;button type=&quot;button&quot; id=&quot;chengs&quot; onClick=&quot;cheng()&quot; data-type=&quot;3&quot;&gt;乘&lt;/button&gt; &lt;button type=&quot;button&quot; id=&quot;chus&quot; onClick=&quot;chu()&quot; data-type=&quot;4&quot;&gt;除&lt;/button&gt; &lt;/form&gt; 结果：&lt;div id=&quot;res&quot;&gt;&lt;/div&gt; &lt;/body&gt; &lt;script src=&quot;./jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; function jia()&#123; var one = $(&quot;#one&quot;).val(); var two = $(&quot;#two&quot;).val(); var type = $(&quot;#jias&quot;).data(&quot;type&quot;); var url = &apos;./index.php&apos;; $.post(url,&#123;&apos;one&apos;:one,&apos;two&apos;:two,&apos;type&apos;:type&#125;,function(data)&#123; if (data.status == 1)&#123; $(&quot;#res&quot;).text(data.res); &#125; &#125;,&apos;json&apos;) &#125; function jian()&#123; var one = $(&quot;#one&quot;).val(); var two = $(&quot;#two&quot;).val(); var type = $(&quot;#jians&quot;).data(&quot;type&quot;); var url = &apos;./index.php&apos;; $.post(url,&#123;&apos;one&apos;:one,&apos;two&apos;:two,&apos;type&apos;:type&#125;,function(data)&#123; if (data.status == 1)&#123; $(&quot;#res&quot;).text(data.res); &#125; &#125;,&apos;json&apos;) &#125; function cheng()&#123; var one = $(&quot;#one&quot;).val(); var two = $(&quot;#two&quot;).val(); var type = $(&quot;#chengs&quot;).data(&quot;type&quot;); var url = &apos;./index.php&apos;; $.post(url,&#123;&apos;one&apos;:one,&apos;two&apos;:two,&apos;type&apos;:type&#125;,function(data)&#123; if (data.status == 1)&#123; $(&quot;#res&quot;).text(data.res); &#125; &#125;,&apos;json&apos;) &#125; function chu()&#123; var one = $(&quot;#one&quot;).val(); var two = $(&quot;#two&quot;).val(); var type = $(&quot;#chus&quot;).data(&quot;type&quot;); var url = &apos;./index.php&apos;; $.post(url,&#123;&apos;one&apos;:one,&apos;two&apos;:two,&apos;type&apos;:type&#125;,function(data)&#123; if (data.status == 1)&#123; $(&quot;#res&quot;).text(data.res); &#125; &#125;,&apos;json&apos;) &#125; &lt;/script&gt;&lt;/html&gt; 上php代码1.index.php1234567891011121314151617181920$one = $_POST[&apos;one&apos;];$two = $_POST[&apos;two&apos;];$type = $_POST[&apos;type&apos;];if ($type == 1)&#123; $res = $one + $two;&#125;else if($type == 2)&#123; $res = $one - $two;&#125;else if($type == 3)&#123; $res = $one * $two;&#125;else if($type == 4)&#123; if ($two == 0)&#123; $two = 1; &#125; $res = $one / $two;&#125;$array = array(&apos;res&apos; =&gt; $res,&apos;status&apos; =&gt; 1);echo json_encode($array); 总结个人素质不达标","tags":[{"name":"GIT","slug":"GIT","permalink":"http://www.yybblog.cn/tags/GIT/"}]},{"title":"Python中的包和__init__.py文件","date":"2018-01-07T14:21:20.000Z","path":"2018/01/07/python的__init__/","text":"Python中的包方式：1.使用import 文件.模块 的方式导入包2.使用from 文件夹 import 模块 的方式导入理解：包将有联系的模块组织在一起，放到同一个文件夹下，并且在这个文件夹下创建一个名字为init.py文件，那么这个夹就称之为 包 init.py有什么用1.init.py 控制着包的导入2.当init.py 为空时：仅仅是把这个包导入，不会导入包中的模块3.可以在这个文件中编写语句，当导入时，这些语句就会被执行 例子现有如下目录1234567891011121314151617Phone/ __init__.py common_util.py Voicedta/ __init__.py Pots.py Isdn.py Fax/ __init__.py G3.py Mobile/ __init__.py Analog.py igital.py Pager/ __init__.py Numeric.py 1.Phone 是最顶级的包，Voicedta、Fax等是子包，我们可以这样引入： 1import Phone.Mobile.Analog 2.也可以使用from 文件夹 import 模块导入 12from Phone import Mobilefrom Phone.Molile import Analog 在以上目录中会看到很多init.py文件理解：这些是初始化模块，from-import 语句导入子包的时候需要用到它，如果没有用到，他们可以使空文件。","tags":[{"name":"Python","slug":"Python","permalink":"http://www.yybblog.cn/tags/Python/"}]},{"title":"Mysql为什么加索引","date":"2018-01-03T14:37:41.000Z","path":"2018/01/03/mysql索引/","text":"使用索引的理由1.由于mysql在默认情况下，表中的数据记录是没有顺序可言的。2.数据检索过程中，符合条件的数据存储在哪里，我们是完全不知情的。3.如果使用select语句进行查询，数据库会从第一条记录开始检索，即使找到第一条符合条件的数据，数据库的搜索也并不会因此而停止，毕竟符合条件的数据可能并不止一条，也就是说此时检索会把表中的数据全部检索一遍才结束，这样的检索方式也称为全表扫描。4.但假设表中存在上百上千万条数据呢？这样的检索效率就十分低了。 Mysql 索引诞生1.索引就如同一本书的目录一样2.指明了某个关键字在正文中的出现的页码位置或章节的位置，这样只要找到对应页面就能找到要搜索的内容了。3.数据库的索引也是类似书本目录一样，通过创建某个字段或者多个字段的索引，在搜索该字段时就可以根据对应的索引进行快速检索出相应内容而无需全表扫描了。 对于mysql增删改查的记忆1.记住只有，查询和删除的时候带有 from 关键字，其他都没有。 mysql左连接理解1.左连接，就是以左边的表为准，来遍历右边的表","tags":[{"name":"Mysql","slug":"Mysql","permalink":"http://www.yybblog.cn/tags/Mysql/"}]},{"title":"PHP中array_slice()的用法","date":"2018-01-02T13:25:19.000Z","path":"2018/01/02/array_slice的用法/","text":"理解1.个人理解：获取一个数组中任意相邻的几个元素例如1：获取$list数组前两位数组元素 123456789101112131415161718192021$list = array( &quot;a&quot; =&gt; &quot;你&quot;, &quot;b&quot; =&gt; &quot;好&quot;, &quot;c&quot; =&gt; &quot;啊&quot;, &quot;d&quot; =&gt; &quot;我&quot;, &quot;e&quot; =&gt; &quot;是&quot;, &quot;f&quot; =&gt; &quot;小&quot;, &quot;g&quot; =&gt; &quot;明&quot;, &quot;h&quot; =&gt; &quot;山东&quot;, &quot;i&quot; =&gt; &quot;士大夫&quot;, &quot;j&quot; =&gt; &quot;阿斯蒂芬&quot;, &quot;k&quot; =&gt; &quot;士大夫山东&quot;, &quot;l&quot; =&gt; &quot;发过火&quot;, &quot;m&quot; =&gt; &quot;更好&quot;, &quot;n&quot; =&gt; &quot;大公会&quot;, &quot;o&quot; =&gt; &quot;sad&quot;, &quot;p&quot; =&gt; &quot;国家&quot;, &quot;q&quot; =&gt; &quot;任天野&quot;);$slicelist = array_slice($list,0,2);print_r($slicelist); 打印结果：12345Array( [a] =&gt; 你 [b] =&gt; 好) 例如2：获取$list数组第三位和第四位元素 12$slicelist = array_slice($list,2,2);print_r($slicelist); 打印结果:12345Array( [c] =&gt; 啊 [d] =&gt; 我) 例如3：获取$list数组第五位和第六位元素12$slicelist = array_slice($list,4,2);print_r($slicelist); 打印结果:12345Array( [e] =&gt; 是 [f] =&gt; 小) 整体理解：截取数组的相邻的几位元素，第5位和第6位，array_slice($list,5-1,6-5+1)；第10位和第12位，array_slice($list,10-1,12-10+1)；第10位和第15位，array_slice($list,10-1,15-10+1)；·········","tags":[{"name":"GIT","slug":"GIT","permalink":"http://www.yybblog.cn/tags/GIT/"}]},{"title":"Git常用命令","date":"2017-12-29T14:10:14.000Z","path":"2017/12/29/git常用命令/","text":"git常用命令1.从github/gitlab/码云克隆项目1git clone 链接地址 2.本地创建git版本库12git init#初始化本地仓库 3.如何将本地代码上传到github 请看：详细步骤 4.提交本地代码到缓存区123git add .git commit -m &quot;注释&quot; 5.推动到远端1git push origin master 6.创建本地分支1git branch 分支名称 7.查看分支1234#本地分支git branch#远端分支git branch -r 8.切换分支1git checkout 分支名字 9.git版本回退123456789git reset --hard HEAD# 将当前版本重置为HEAD（通常用于清空缓存区,或merge失败回退）git reset --hard HEAD^ # 回退上一个版本git reset --hard HEAD^^ # 回退上两个版本git reset --hard HEAD~n # 回退上n个版本git reset --hard &lt;commitid&gt;# 回退到指定版本，commitid根据log获取 svn 和 git 相比个人更喜欢用github","tags":[{"name":"GIT","slug":"GIT","permalink":"http://www.yybblog.cn/tags/GIT/"}]},{"title":"Nginx的配置","date":"2017-11-15T07:17:01.000Z","path":"2017/11/15/ci框架配置nginx/","text":"123456include enable-php.conf;location / &#123; index index.html index.htm index.php; rewrite ^/$ /index.php last; rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last; &#125; 以上代码是重点部分 前言1.前段时间临近双十一在阿里云9.9买了半年服务器，想着弄个网站部署在线上。之前在nginx上部署过，不过那是别人弄的。什么事都是还要靠自己，是真理。2.为此写下步骤，以便下次部署直接来找教程。3.为了能让CI框架在nginx上跑起来。废了我两三天时间。不过还是配置好了。 安装linux1.我这里用的是lnmp一键安装包 教程地址：https://lnmp.org/ 安装好之后1.开始部署你的web网站，如果在本地可以运行。那直接克隆到服务器上2.我的线上项目地址3.当你以域名去范文访问的时候回出现以类似下错误，这是nginx禁止程序跨目录访问1Warning: require(): open_basedir restriction in effect. File(/home/wwwroot/***/bootstrap/autoload.php) is not within the allowed path(s): (/home/wwwroot/***/public/:/tmp/:/proc/) in /home/wwwroot/***/public/index.php on 解决办法将 /usr/local/nginx/conf/fastcgi.conf 里面的fastcgi_param PHP_ADMIN_VALUE “open_basedir=$document_root/:/tmp/:/proc/“; 在该行行前添加 # 或删除改行，需要重启nginx。 lnmp nginx reload 4.以上弄好以后，继续访问线上ip地址。可能会出现404，特别是ci框架里面的site_url()方法和redirect()方法。 重点介绍1.在server项里面：nginx引入了月一个 文件 include enable-php.conf;这个文件里面就包含了，解析php，运行php文件。我配置如下 12345678910111213location ~ [^/]\\.php(/|$)&#123; try_files $uri =404; fastcgi_pass unix:/tmp/php-cgi.sock; fastcgi_param PATH_INFO $fastcgi_path_info; if ($uri ~ &quot;^(.+?\\.php)(/.*)$&quot;) &#123; set $script $1; set $path_info $2; &#125; fastcgi_split_path_info ^(.+\\.php)(.*)$; fastcgi_index index.php; include fastcgi.conf;&#125; 在原来基础上加了这几段代码123456fastcgi_param PATH_INFO $fastcgi_path_info; if ($uri ~ &quot;^(.+?\\.php)(/.*)$&quot;) &#123; set $script $1; set $path_info $2; &#125; fastcgi_split_path_info ^(.+\\.php)(.*)$; 以上是enable-php.conf文件配置 3.在你的框架中可能会有redirect()方法,我的一只是404错误，原因就是这个,后来在server包含中 include enable-php.conf下行添加如下代码12345location / &#123; index index.html index.htm index.php; rewrite ^/$ /index.php last; rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last; &#125; 4.在以ip地址访问成功访问到。 5.将nginx.conf代码全部贴出 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107user www www;worker_processes auto;error_log /home/wwwlogs/nginx_error.log crit;pid /usr/local/nginx/logs/nginx.pid;#Specifies the value for maximum file descriptors that can be opened by this process.worker_rlimit_nofile 51200;events &#123; use epoll; worker_connections 51200; multi_accept on; &#125;http &#123; include mime.types; default_type application/octet-stream; server_names_hash_bucket_size 128; client_header_buffer_size 32k; large_client_header_buffers 4 32k; client_max_body_size 50m; sendfile on; tcp_nopush on; keepalive_timeout 60; tcp_nodelay on; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; fastcgi_buffer_size 64k; fastcgi_buffers 4 64k; fastcgi_busy_buffers_size 128k; fastcgi_temp_file_write_size 256k; gzip on; gzip_min_length 1k; gzip_buffers 4 16k; gzip_http_version 1.1; gzip_comp_level 2; gzip_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss; gzip_vary on; gzip_proxied expired no-cache no-store private auth; gzip_disable &quot;MSIE [1-6]\\.&quot;; #limit_conn_zone $binary_remote_addr zone=perip:10m; ##If enable limit_conn_zone,add &quot;limit_conn perip 10;&quot; to server section. server_tokens off; access_log off;server &#123; listen 80 default_server; #listen [::]:80 default_server ipv6only=on; server_name 106.14.117.93; index index.html index.htm index.php; root /data/www/min/www; #error_page 404 /404.html; # Deny access to PHP files in specific directory #location ~ /(wp-content|uploads|wp-includes|images)/.*\\.php$ &#123; deny all; &#125; include enable-php.conf; location / &#123; index index.html index.htm index.php; rewrite ^/$ /index.php last; rewrite ^/(?!index\\.php|robots\\.txt|images|js|styles)(.*)$ /index.php/$1 last; &#125; location /nginx_status &#123; stub_status on; access_log off; &#125; location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$ &#123; expires 30d; &#125; location ~ .*\\.(js|css)?$ &#123; expires 12h; &#125; location ~ /.well-known &#123; allow all; &#125; location ~ /\\. &#123; deny all; &#125; access_log /home/wwwlogs/access.log; &#125;include vhost/*.conf;&#125;","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.yybblog.cn/tags/PHP/"},{"name":"Nginx","slug":"Nginx","permalink":"http://www.yybblog.cn/tags/Nginx/"}]},{"title":"鼠标滑过，动态数据表格如何变色","date":"2017-11-12T03:51:15.000Z","path":"2017/11/12/鼠标滑过变色/","text":"此功能是很简单的，写这个目的是以后遇到了，我可以直接拿来用。 1.一般固定行数的表格变色是容易的，只需在每个tr标签上写上相应的class就可以。2.如果是不固定行数，动态数据的时候，想实现每行表格变色。那就需要每个数据的id来实现。 现有如下表格(底部都是浅蓝色，并且是动态数据): 如何实现鼠标滑过变色很简单1.首选引入JQ框架1&lt;script src=&quot;../select/jquery.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt; 2.写样式，需要将鼠标滑过后底部边的颜色写好，一般是白色背景。1234.divOver&#123; background:#fff; border:solid 1px #d2dce3;&#125; 3.然后在开始在tr标签开始写相应的属性123456&#123;foreach from=$customer_service item=customer&#125; &lt;tr data-mou=&quot;&#123;$customer.id&#125;&quot; id=&quot;mous_&#123;$customer.id&#125;&quot; name = &quot;mous&quot; class=&apos;trcolor1&apos; &gt; &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; &lt;/tr&gt;&#123;/foreach&#125; 4.重点来了写JQ 12345678910111213//修改鼠标滑过时变色$(document).ready(function()&#123; $(&quot;tr[name=mous&quot;).mouseover(function()&#123; var ids = $(this).attr(&quot;data-mou&quot;); $(&quot;#mous_&quot;+ids).addClass(&apos;divOver&apos;); &#125;); $(&quot;tr[name=mous&quot;).mouseout(function()&#123; var ids = $(this).attr(&quot;data-mou&quot;); //鼠标离开时移除divOver样式 $(&quot;#mous_&quot;+ids).removeClass(&apos;divOver&apos;); &#125;);&#125;); 5.最后效果图：","tags":[{"name":"jQery","slug":"jQery","permalink":"http://www.yybblog.cn/tags/jQery/"},{"name":"CSS","slug":"CSS","permalink":"http://www.yybblog.cn/tags/CSS/"}]},{"title":"PHP简单爬虫抓取新闻","date":"2017-11-09T08:59:27.000Z","path":"2017/11/09/PHP简单爬虫/","text":"前段时间有写过简单Python爬虫（文章有代码） PHP爬虫基于QuerList 1.我这里用的是QueryList3.0版本都是手动下载，官网是通过composer方法安装的，具体步骤不是很了解，感觉挺麻烦。 2.QueryListV3.2.1版本下载地址:https://github.com/jae-jae/QueryList/tree/V3.2.1 这里有个坑如果你通过github克隆到本地不会是v3.2.1 而是4.0版本；需要打包下载 如下图： 3.下载完QueryListV3.2.1 还要下载PHPQuery，QueryList是基于PHPQuery。下载地址：https://github.com/jae-jae/phpQuery-single 4.手动下载完成后可引入到项目中。 上代码123require &apos;phpQuery.php&apos;;require &apos;QueryList.php&apos;;use QL\\QueryList; 这里使用了命名空间，这里我们已经引入了QueryList.php，QueryList.php使用了命名空间 namespace QL;如果要实例化QueryList，就要使用use QL\\QueryList;1.抓取腾讯新闻新闻标题123456789101112//获取标题$rules = array( //采集id为one这个元素里面的纯文本内容 &apos;text&apos; =&gt; array(&apos;.linkto&apos;,&apos;text&apos;),);$url = &apos;http://news.qq.com/&apos;;$data = QueryList::Query($url,$rules,&apos;&apos;,&apos;UTF-8&apos;,&apos;GB2312&apos;,true)-&gt;getData(function($item) use($url)&#123; return $item;&#125;);print_r($data); 2.打印结果 12345678910111213141516171819202122array( [0] =&gt; Array ( [text] =&gt; 138万人通过国考审核创7年之最 119个职位无人报 ) [1] =&gt; Array ( [text] =&gt; 俄媒：中国第3艘航母最终轮廓确定 或用电磁弹射 ) [2] =&gt; Array ( [text] =&gt; 巴西众院弹劾总统案获通过 罗塞夫政党承认落败 ) [3] =&gt; Array ( [text] =&gt; 10月CPI同比增长1.9% 涨幅连续9个月低于2% ) ....","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.yybblog.cn/tags/PHP/"},{"name":"QueryList","slug":"QueryList","permalink":"http://www.yybblog.cn/tags/QueryList/"}]},{"title":"多PC更新博客","date":"2017-10-23T15:00:37.000Z","path":"2017/10/23/多pc跟新博客/","text":"测试多个pc同时发布文章","tags":[{"name":"GIthub","slug":"GIthub","permalink":"http://www.yybblog.cn/tags/GIthub/"}]},{"title":"Python爬虫爬取校花网图片","date":"2017-09-13T09:20:43.000Z","path":"2017/09/13/python小花网爬虫/","text":"基于Python3.5爬虫 123import requestsimport refrom bs4 import BeautifulSoup 1.首先要引入包2.如有缺包请 pip install requests 等 直接上爬虫代码123456789101112131415161718192021222324252627282930313233343536373839404142434445import requestsimport refrom bs4 import BeautifulSoupdef gethtml(num): header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36&apos;&#125; try: if num == 1: url = &apos;http://www.xiaohuar.com/hua/&apos; else: url = &apos;http://www.xiaohuar.com/list-1-&apos;+str(num)+&apos;.html&apos; res = requests.get(url,headers = header,timeout=10) res.raise_for_status() res.encoding = res.apparent_encoding#转码 print(&apos;爬取第&#123;&#125;页:&apos;.format(num)) return res.text except: print(&quot;链接异常！！！&quot;) return &apos;&apos;def findhtml(text,ulist): soup = BeautifulSoup(text,&apos;lxml&apos;) links = soup.find_all(&apos;div&apos;,class_=&apos;item&apos;) mainurl = &apos;http://www.xiaohuar.com&apos; for link in links: #获取标题 title = link.find(&apos;img&apos;)[&apos;alt&apos;] #获取图片链接 imgurl = link.find(&apos;img&apos;)[&apos;src&apos;] #获取后缀 zhui = imgurl[-4:] #拼接图片名称 imgname = title + zhui print(imgname) #图片下载地址 imgurlinfo = mainurl + imgurl img = requests.get(imgurlinfo) with open(&apos;./xiaohua/&apos;+imgname,&quot;wb&quot;) as code: code.write(img.content) if __name__ == &apos;__main__&apos;: ulist = [] for i in range(1,5): text = gethtml(i) findhtml(text,ulist) ###","tags":[{"name":"Python","slug":"Python","permalink":"http://www.yybblog.cn/tags/Python/"}]},{"title":"Python爬虫爬取校花网图片","date":"2017-09-13T09:20:43.000Z","path":"2017/09/13/python爬虫/","text":"基于Python3.5爬虫 123import requestsimport refrom bs4 import BeautifulSoup 1.首先要引入包2.如有缺包请 pip install requests 等 直接上爬虫代码123456789101112131415161718192021222324252627282930313233343536373839404142434445import requestsimport refrom bs4 import BeautifulSoupdef gethtml(num): header = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36&apos;&#125; try: if num == 1: url = &apos;http://www.xiaohuar.com/hua/&apos; else: url = &apos;http://www.xiaohuar.com/list-1-&apos;+str(num)+&apos;.html&apos; res = requests.get(url,headers = header,timeout=10) res.raise_for_status() res.encoding = res.apparent_encoding#转码 print(&apos;爬取第&#123;&#125;页:&apos;.format(num)) return res.text except: print(&quot;链接异常！！！&quot;) return &apos;&apos;def findhtml(text,ulist): soup = BeautifulSoup(text,&apos;lxml&apos;) links = soup.find_all(&apos;div&apos;,class_=&apos;item&apos;) mainurl = &apos;http://www.xiaohuar.com&apos; for link in links: #获取标题 title = link.find(&apos;img&apos;)[&apos;alt&apos;] #获取图片链接 imgurl = link.find(&apos;img&apos;)[&apos;src&apos;] #获取后缀 zhui = imgurl[-4:] #拼接图片名称 imgname = title + zhui print(imgname) #图片下载地址 imgurlinfo = mainurl + imgurl img = requests.get(imgurlinfo) with open(&apos;./xiaohua/&apos;+imgname,&quot;wb&quot;) as code: code.write(img.content) if __name__ == &apos;__main__&apos;: ulist = [] for i in range(1,5): text = gethtml(i) findhtml(text,ulist) ###","tags":[{"name":"Python","slug":"Python","permalink":"http://www.yybblog.cn/tags/Python/"}]},{"title":"正则表达式基础用法","date":"2017-09-11T03:03:27.000Z","path":"2017/09/11/正则表达式/","text":"NO.1 正则表达式：扛把子技术，总得会最基础的： 一些基础用法123456he+llo ：+ 号代表前面的字符必须至少出现一次（1次或多次）例：可匹配 hello ，heello，heee...llohe\\*llo : \\* 号代表前面的字符可以不除出现，可出现一次或者多次既（0次，1次，多次）例： 可匹配 hllo，hello，heee..llo he?llo : ? 号代表前面的字符最多只能出现一次（0次，或者一次）例: 可匹配 hllo，hello 非打印字符123\\s 匹配任何 空白字符 包括空格，制表符，换页符\\S 匹配任何非空白字符\\n 匹配换行符 特殊字符123456$ 以某个字符串结尾() 标记一个表达式的开始和结束位置. 匹配除换行符 \\n 之外的任何单字符[ 标记一个中括号表达式的开始^ 以某个字符串开始&#123; 限定表达式的开始 限定符12345&#123;n&#125; 非负整数匹配确定的n次。匹配某个字符出现的次数例：&apos;o&#123;2&#125;&apos; 则能匹配 Look，不能匹配 inof，但能匹配inoof&#123;n,&#125; &apos;o&#123;1,&#125;&apos; 等价于 &apos;o+&apos;既一次或多次&#123;n,m&#125; m和n均为非负数其中 n &lt;= m。最少匹配n次最多匹配m次例：&apos;o&#123;1,3&#125;&apos; 匹配 loooook 中的钱三个o 元字符123456[a-z] 匹配指定范围内的任意字符 例如&apos;[a-z]&apos;可以匹配从a到z内任意小写字符[^a-z] 负值字符范围，匹配任何不在指定范围内的任意字符，例如[^a-z]可以匹配不在a到z之内的字符\\d 匹配一个数字字符\\D 匹配一个非数字字符\\s 匹配任何空白字符（包括空格、制表符）\\S 匹配任何非空白字符","tags":[{"name":"正则","slug":"正则","permalink":"http://www.yybblog.cn/tags/正则/"},{"name":"re","slug":"re","permalink":"http://www.yybblog.cn/tags/re/"}]},{"title":"各种轮播图插件","date":"2017-08-25T09:18:48.000Z","path":"2017/08/25/各种轮播图/","text":"查看网址http://www.swiper.com.cn/demo/index.html","tags":[{"name":"Swiper","slug":"Swiper","permalink":"http://www.yybblog.cn/tags/Swiper/"}]},{"title":"window下wamp开发环境如何安装redis","date":"2017-08-21T08:06:38.000Z","path":"2017/08/21/wamp下如何安装redis/","text":"php安装redis扩展1.PHP必须要安装redis扩展 2.在安装之前一定要看PHP版本信息（ps：由于我没有看，导致一直安装不成功）。查看方法在wamp/www下新建info.php文件内容如下: 12&lt;?phpphpinfo(); 3.查看版本信息: 4.下载redis扩展php_redis.dll和php_igbinary.dll: http://pecl.php.net/package/redis/2.2.7/windows http://windows.php.net/downloads/pecl/releases/igbinary/1.2.1/ 5.下载完解压缩后，将php_redis.dll和php_igbinary.dll拷贝至php的ext目录下: 6.然后修改wamp/bin/apache/apache2.4.9/bin/php.ini，在该文件中加入： 123; php_redisextension=php_igbinary.dllextension=php_redis.dll 7.重启Apache后，使用phpinfo查看扩展是否成功安装 8.开启redis服务。进入redis的目录我的是在（d:/redis）开启服务 9.开启成功会显示： 10.新建一个redistest.php测试1234567&lt;?php $redis = new Redis(); $redis-&gt;connect(&apos;127.0.0.1&apos;,6379); $redis-&gt;auth(&apos;123456&apos;); $redis-&gt;set(&apos;test&apos;,&apos;hello redis&apos;); echo $redis-&gt;get(&apos;test&apos;);?&gt; 11.最后得到结果","tags":[{"name":"redis","slug":"redis","permalink":"http://www.yybblog.cn/tags/redis/"}]},{"title":"手游H5页面","date":"2017-08-10T09:26:37.000Z","path":"2017/08/10/手游H5页面/","text":"手机演示地址https://github.com/yyb568/webgm 前几天写了两张H5页面，自我感觉还不错，就趁着有时间又写了一张。 效果图图一： 图二： 以后会运用到实际工作中去。","tags":[{"name":"HTML","slug":"HTML","permalink":"http://www.yybblog.cn/tags/HTML/"}]},{"title":"我的手机端H5页面","date":"2017-08-06T01:27:31.000Z","path":"2017/08/06/我的H5页面/","text":"手机演示地址https://github.com/yyb568/webapp.git 由于在工作中一直做后台和服务端,前端页面也有专门的人员来写,以至于前端代码忘得的快差不多了,就突然想起来写个页面看看效果咋样 效果图1.图一: 2.图二: 3.图三 4.图四","tags":[{"name":"HTML","slug":"HTML","permalink":"http://www.yybblog.cn/tags/HTML/"}]},{"title":"MySQL优化之三范式","date":"2017-08-01T01:28:36.000Z","path":"2017/08/01/mysql优化三范式/","text":"常见的数据库优化的几种方法:1.数据表要设计合理，满足三范式（3NF）；2.创建适当索引；3.对sql语句进行优化，定位慢查询（explain）；4.使用分表、分区技术；5.读写分离；6.创建适当的存储过程、函数、触发器；7.对my.ini进行优化配置；8.软硬件的升级。 三范式的方法一范式（1NF）。1.表的属性（列），不能再分。比如：12Id name sex num grade1 王某某 男 123456 80、90,75 上面的例子中grade（成绩）字段下面有三个分数，分别是语文、数学、英语，那他就应该单独建立一张grade表，如果grade字段只有一个值，比如总分，那它就是不可再分的。 2.不能有重复的列。 1Id name sex num num 重复的列无法添加数据。 二范式（2NF）。 1.2NF就是指不能有完全相同的一条记录，可以通过设置主键解决，而且该主键为自增值。 三范式（3NF）。1.如果列的值可以通过另建一张表关联起来，即同一个字段不能有过多重复的记录。比如: 12345Id name sex num class academy1 王 男 123 A班 信息学院2 李 女 234 A班 信息学院3 罗 男 456 A班 信息学院4 张 男 879 A班 信息学院 改为：Student表：12Id name sex num classid1 王 男 123 1 student表的班级信息可以通过外键从班级表中查询，减少了数据冗余和更新异常。","tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://www.yybblog.cn/tags/MySQL/"}]},{"title":"如何将本地代码上传到GitHub","date":"2017-07-31T07:35:46.000Z","path":"2017/07/31/如何将本地代码上传到GitHub/","text":"第一步安装Git Bash版本控制器: https://git-for-windows.github.io/ 第二步安装好之后进入到你的本地项目根目录,右击鼠标点击 Git Bash Here 第三步执行git命令 git init 第四步将项目的所有文件添加到仓库中如果想添加某个特定的文件，只需把.换成特定的文件名即可 git add . 第五步将add的文件commit到仓库 git commit -m “注释语句” 第六步去github上创建自己的仓库地址,如下图所示： 1.点击New repository 2.填写好仓库信息后点击Create repository创建 3.如下就是所创建的仓库,红圈是克隆下载地址暂时先不用 4.拿到创建的仓库的https地址,也就是url地址 第七步：重点来了，将本地的仓库关联到github上 git remote add origin https://github.com/yyb568/WeatherDemo 第八步：上传github之前，要先pull一下，执行如下命令： git pull origin master 第九步，也就是最后一步，上传代码到github远程仓库 git push -u origin master执行完后，如果没有异常，等待执行完就上传成功了，中间可能会让你输入Username和Password，你只要输入github的账号和密码就行了 最后GitHub成功后截图","tags":[{"name":"GitHub","slug":"GitHub","permalink":"http://www.yybblog.cn/tags/GitHub/"}]},{"title":"setTimeout()的使用方法","date":"2017-07-27T13:26:27.000Z","path":"2017/07/27/setTimeout()/","text":"定义:setTimeout()方法在很多文档中是说 “用于在指定的毫秒数后调用函数或计算表达式”,比较含糊;其实就是规定在一段时间内,调用一个函数进行延时操作;比如从一个页面2秒后跳转到另一个页面; 用法:我这有个ajax方法:1234567891011121314//要跳转的页面地址var url = &quot;&lt;?=site_url(&quot;smallshop/shopcart/dosave?key=&#123;$key&#125;&amp;cmid=&#123;$cmid&#125;&quot;)?&gt;&quot;; $.post(url,dt,function(data)&#123; if (data.status == 0)&#123;//表示请求成功,返回成功状态 //成功后利用layer弹窗插件进行提示说明 layer.open(&#123;content: data.info,skin: &apos;msg&apos;,time: 2 &#125;); //根据倒计时函数在两秒后跳转到指定的页面 setTimeout(function () &#123; window.location.href = &apos;&lt;?=site_url(&quot;smallshop/channel/index?key=&#123;$key&#125;&amp;cmid=&#123;$cmid&#125;&quot;)?&gt;&apos;; &#125;,2000); &#125;else&#123;//表示请求失败,并提示失败信息 layer.open(&#123;content: data.info,skin: &apos;msg&apos;,time: 2 &#125;); &#125; &#125;,&apos;json&apos;);### 总结: setTimeout() 通常是与 function 一起使用","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.yybblog.cn/tags/PHP/"},{"name":"jQery","slug":"jQery","permalink":"http://www.yybblog.cn/tags/jQery/"}]},{"title":"stripos()的用法","date":"2017-07-20T07:17:01.000Z","path":"2017/07/20/stripos的用法/","text":"这个函数经常用到,并且能快速判断,某字符串是否在另一字符串中出现,常用在条件判断中; 定义和用法stripos(string,find)参一:另一串字符参二:要查找的字符 例子:123$content = &apos;Hello World MyBlog&apos;;$appear = stripos($content,&apos;my&apos;);print_r($appear); 结果:12 说明: 返回字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回 FALSE。 12345678910111213$content = &apos;Hello World MyBlog&apos;;$appear = stripos($content,&apos;kk&apos;);if (stripos($content,&apos;kk&apos;))&#123; echo &apos;存在&apos;;&#125;else&#123; echo &apos;不存在&apos;;&#125;if (stripos($content,&apos;lo&apos;))&#123; echo &apos;存在&apos;;&#125;else&#123; echo &apos;不存在&apos;;&#125; 结果分别是:不存在存在","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.yybblog.cn/tags/PHP/"}]},{"title":"find()的用法","date":"2017-07-20T07:17:01.000Z","path":"2017/07/20/find()/","text":"find():find() 方法返回被选元素的后代元素,一直找到最后一个后台元素(也就是找到所有find(“xxx”)的元素). 例如我代码里面有篇文章,$soft[‘content’]代表文章内容(包括文字和图片):123&lt;div class=&quot;col-xs-12 mt3&quot; id=&quot;content_product&quot; &gt; &lt;?=$soft[&apos;content&apos;] ?&gt;&lt;/div&gt; 在页面的上所显示内容:以上内容里面的图片很大而且不规律.然后通过浏览器F12调试可以看到有p标签和img标签;这里的img图片是没有经过处理的所以图片是原比例展示出来的,在手机页面端是很难看的; 利用jQ find()方法解决此问题;也就是把内容里面的所有图片通过遍历时图片自适应123456//将图片自适应$(function()&#123; $(&quot;#content_product&quot;).find(&quot;img&quot;).each(function(i,j)&#123; $(this).attr(&quot;width&quot;, &quot;100%&quot;); &#125;);&#125;); 现在再看页面显示效果","tags":[{"name":"jQery","slug":"jQery","permalink":"http://www.yybblog.cn/tags/jQery/"}]},{"title":"如何获取免费天气预报","date":"2017-07-20T07:17:01.000Z","path":"2017/07/20/获取免费天气API/","text":"Demo Github地址:https://github.com/yyb568/WeatherDemo 了解如何在本地获取免费的天气预报关键在于要有免费的天气预报接口;貌似网上还挺多的下面的是我调用的api接口地址:http://www.sojson.com/open/api/weather/json.shtml?city=北京 Demo测试下面是一段简单的下拉选择框123456789101112131415161718&lt;body&gt; &lt;select id=&quot;weather&quot; name=&quot;weather&quot;&gt; &lt;option&gt;请选择&lt;/option&gt; &lt;option value=&quot;济南&quot;&gt;济南&lt;/option&gt; &lt;option value=&quot;泰安&quot;&gt;泰安&lt;/option&gt; &lt;option value=&quot;潍坊&quot;&gt;潍坊&lt;/option&gt; &lt;option value=&quot;临沂&quot;&gt;临沂&lt;/option&gt; &lt;option value=&quot;新泰&quot;&gt;新泰&lt;/option&gt; &lt;option value=&quot;威海&quot;&gt;威海&lt;/option&gt; &lt;option value=&quot;长春&quot;&gt;长春&lt;/option&gt; &lt;option value=&quot;三亚&quot;&gt;三亚&lt;/option&gt; &lt;option value=&quot;北京&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;/select&gt;&lt;br&gt;&lt;br&gt; &lt;div id=&quot;box&quot;&gt; &lt;ul id=&quot;con&quot;&gt;&lt;/ul&gt; &lt;/div&gt;&lt;/body&gt; 效果图: Ajax请求1.首先要引入一个jQ框架 1&lt;script src=&quot;./jquery-2.1.4.js&quot;&gt;&lt;/script&gt; 2.当我选择某一个城市后,会触发一个点击事件; 123456789//获取选中的城市$(&quot;#weather&quot;).change(function()&#123; var checkValue=$(&quot;#weather&quot;).val(); var url = &quot;./weather.php&quot;; $.post(url,&#123;weather:checkValue&#125;,function(res)&#123; &#125;,&apos;json&apos;)&#125;); 3.当我选中后会获取相应的城市名称如:新泰,Ajax会把这个城市名称通过POST请求传到当前文件下的weather.php PHP文件处理请求1.获取城市名称;1$city = $_POST[&apos;weather&apos;]; 2.PHP 将接收到城市进行组合,并以url链接形式去请求访问该API链接;以下是CURL的用法; 1234567891011$city = $_POST[&apos;weather&apos;]; //初始化 $curl = curl_init(); //设置抓取的url curl_setopt($curl, CURLOPT_URL, &apos;http://www.sojson.com/open/api/weather/json.shtml?city=&apos;.$city); //设置获取的信息以文件流的形式返回，而不是直接输出。 curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); //执行命令 $data = curl_exec($curl); //关闭URL请求 curl_close($curl); 3.最终将获取到的数据通过JSON格式并返回给请求页面 1234567891011121314151617$city = $_POST[&apos;weather&apos;]; //初始化 $curl = curl_init(); //设置抓取的url curl_setopt($curl, CURLOPT_URL, &apos;http://www.sojson.com/open/api/weather/json.shtml?city=&apos;.$city); //设置获取的信息以文件流的形式返回，而不是直接输出。 curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); //执行命令 $data = curl_exec($curl); //关闭URL请求 curl_close($curl); //显示获得的数据 $contents = json_decode($data, true);if (!empty($contents))&#123; $array = array(&apos;status&apos; =&gt; 0,&apos;info&apos; =&gt; $contents[&apos;data&apos;][&apos;forecast&apos;]); echo json_encode($array);&#125; 当PHP页面请求成功,并获取到数据以后,会返回成功状态,和数据给请求页面.1.请求页获取到数据以后判断是否返回成功,如果成功表示 res.status == 0,将数据通过遍历展现在页面上; 12345678910if (res.status == 0)&#123; var con = &apos;&apos;; $.each(res.info, function(i, j)&#123; con += &quot;&lt;li&gt;日期：&quot;+j.date+&quot;&lt;/li&gt;&quot;; con += &quot;&lt;li&gt;最高温：&quot;+j.high+&quot;&lt;/li&gt;&quot;; con += &quot;&lt;li&gt;风：&quot;+j.fengli+&quot;&lt;/li&gt;&quot;; con += &quot;&lt;li&gt;最低温：&quot;+j.low+&quot;&lt;/li&gt;&quot;; &#125;); $(&quot;#con&quot;).html(con);&#125; 2.根据选择不同的城市,最终显示如下结果:","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.yybblog.cn/tags/PHP/"},{"name":"jQery","slug":"jQery","permalink":"http://www.yybblog.cn/tags/jQery/"},{"name":"API","slug":"API","permalink":"http://www.yybblog.cn/tags/API/"}]},{"title":"json_decode和json_encode的使用方法","date":"2017-07-20T00:47:38.000Z","path":"2017/07/20/json_decode和json_encode的使用方法/","text":"json_decode对json格式的字符串进行编码也就是转化成PHP变量123$content = $this-&gt;curl-&gt;get(&quot;http://sj.apidata.cn/?mobile=&#123;$phone&#125;&quot;);$contents = json_decode($content);print_r(contents); 打印结果(结果是一个对象,如果要取出里面的数值,这样是不好取的):1234567891011121314151617stdClass Object( [status] =&gt; 1 [data] =&gt; stdClass Object ( [prefix] =&gt; 131 [province] =&gt; 山东 [city] =&gt; 威海 [isp] =&gt; 联通 [code] =&gt; 631 [zipcode] =&gt; 264200 [types] =&gt; 中国联通 GSM [mobile] =&gt; 13181891701 ) [message] =&gt; success) 当json_decode($contents,true)时会直接打印出PHP数组. 123$content = $this-&gt;curl-&gt;get(&quot;http://sj.apidata.cn/?mobile=&#123;$phone&#125;&quot;);$contents = json_decode($content,true);print_r($contents); 打印结果 PHP数组: 1234567891011121314151617Array( [status] =&gt; 1 [data] =&gt; Array ( [prefix] =&gt; 131 [province] =&gt; 山东 [city] =&gt; 威海 [isp] =&gt; 联通 [code] =&gt; 631 [zipcode] =&gt; 264200 [types] =&gt; 中国联通 GSM [mobile] =&gt; 13181891701 ) [message] =&gt; success) 可以看出 json_decode($contents,true)输出的一个关联数组,由此可知json_decode($contents）输出的是对象,而json_decode(“$contents”,true)是把它强制生成PHP关联数组 json_decode 对PHP变量进行 JSON 编码12345&lt;?php$arr = array (&apos;a&apos;=&gt;1,&apos;b&apos;=&gt;2,&apos;c&apos;=&gt;3,&apos;d&apos;=&gt;4,&apos;e&apos;=&gt;5);echo json_encode($arr);?&gt; 打印结果 PHP数组:1&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125; 最后:可以看出json_encode()和json_decode()是编译和反编译过程，注意json只接受utf-8编码的字符，所以json_encode()的参数必须是utf-8编码，否则会得到空字符或者null。","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.yybblog.cn/tags/PHP/"}]},{"title":"如何在七牛云储存创建及使用空间","date":"2017-07-18T01:28:16.000Z","path":"2017/07/18/如何在七牛云储存创建及使用空间/","text":"为什么选择七牛云1.直接在网页管理后台上传图片2.直接获取复制完整外链即可（注意右侧的图片预览功能，这个对于图片多了之后防止误操作很是实用）3.免费的使用空间和流量4.对于新用户，七牛云存储免费赠送10G 的使用空间+10G/月的流量，对于小博客来说，是完全够用了。 如何新建空间七牛云官网 1.如果未注册请进行注册,注册完成之后(不实名认证也可以使用免费空间)点击左边一栏新建存储空间: 2.然后填写:存储空间名称,存储区域,访问控制 3.填写好信息以后选择存储空间列表选择:内容管理,上传文件 4.选择文件 5.上传完成之后会有文件显示 6.可以预览和复制外链 是不是很简单啊.注:如果未实名是不允许创建私有空间的","tags":[{"name":"七牛云","slug":"七牛云","permalink":"http://www.yybblog.cn/tags/七牛云/"}]},{"title":"新博客","date":"2017-07-17T01:28:16.000Z","path":"2017/07/17/你好/","text":"为什么会将博客转移到GitHub上 首先github是完全免费开放的 不需要你再去花额外金钱去购买云服务器 安装配置简单,网上教程一大片 模板很多,可以根据喜好选择不同模板 搭建自己的Hexo + GitHub 博客我好久之前就有一个自己的技术博客,由于前段时间很忙,忘了给腾讯云付费,就给我停服务了,可惜了我那些学习笔记和工作中的总结.索性我也不用了,但是有了这个以后就再也不怕给我停服务了. 关于如何 搭建Hexo + GitHub 博客,可查看这个地址: 简书:Hexo + GitHub 免费搭建搭建个人博客","tags":[{"name":"博客","slug":"博客","permalink":"http://www.yybblog.cn/tags/博客/"}]},{"title":"Hello World","date":"2016-10-17T01:28:16.000Z","path":"2016/10/17/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[{"name":"PHP","slug":"PHP","permalink":"http://www.yybblog.cn/tags/PHP/"}]}]